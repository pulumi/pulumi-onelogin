// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class Rules extends pulumi.CustomResource {
    /**
     * Get an existing Rules resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RulesState, opts?: pulumi.CustomResourceOptions): Rules {
        return new Rules(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'onelogin:apps/rules:Rules';

    /**
     * Returns true if the given object is an instance of Rules.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Rules {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Rules.__pulumiType;
    }

    public readonly actions!: pulumi.Output<outputs.apps.RulesAction[] | undefined>;
    public readonly appsId!: pulumi.Output<string>;
    /**
     * An array of conditions that the user must meet in order for the rule to be applied.
     */
    public readonly conditions!: pulumi.Output<outputs.apps.RulesCondition[] | undefined>;
    /**
     * Indicates if the rule is enabled or not.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * Indicates how conditions should be matched.
     */
    public readonly match!: pulumi.Output<string | undefined>;
    /**
     * Rule Name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Indicates the order of the rule. When `null` this will default to last position.
     */
    public readonly position!: pulumi.Output<number | undefined>;

    /**
     * Create a Rules resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RulesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RulesArgs | RulesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RulesState | undefined;
            resourceInputs["actions"] = state ? state.actions : undefined;
            resourceInputs["appsId"] = state ? state.appsId : undefined;
            resourceInputs["conditions"] = state ? state.conditions : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["match"] = state ? state.match : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["position"] = state ? state.position : undefined;
        } else {
            const args = argsOrState as RulesArgs | undefined;
            if ((!args || args.appsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appsId'");
            }
            resourceInputs["actions"] = args ? args.actions : undefined;
            resourceInputs["appsId"] = args ? args.appsId : undefined;
            resourceInputs["conditions"] = args ? args.conditions : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["match"] = args ? args.match : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["position"] = args ? args.position : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Rules.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Rules resources.
 */
export interface RulesState {
    actions?: pulumi.Input<pulumi.Input<inputs.apps.RulesAction>[]>;
    appsId?: pulumi.Input<string>;
    /**
     * An array of conditions that the user must meet in order for the rule to be applied.
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.apps.RulesCondition>[]>;
    /**
     * Indicates if the rule is enabled or not.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Indicates how conditions should be matched.
     */
    match?: pulumi.Input<string>;
    /**
     * Rule Name
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates the order of the rule. When `null` this will default to last position.
     */
    position?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Rules resource.
 */
export interface RulesArgs {
    actions?: pulumi.Input<pulumi.Input<inputs.apps.RulesAction>[]>;
    appsId: pulumi.Input<string>;
    /**
     * An array of conditions that the user must meet in order for the rule to be applied.
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.apps.RulesCondition>[]>;
    /**
     * Indicates if the rule is enabled or not.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Indicates how conditions should be matched.
     */
    match?: pulumi.Input<string>;
    /**
     * Rule Name
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates the order of the rule. When `null` this will default to last position.
     */
    position?: pulumi.Input<number>;
}
