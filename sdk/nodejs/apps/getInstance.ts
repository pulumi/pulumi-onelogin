// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getInstance(args: GetInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetInstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("onelogin:apps/getInstance:getInstance", {
        "allowAssumedSignin": args.allowAssumedSignin,
        "authMethod": args.authMethod,
        "brandId": args.brandId,
        "connectorId": args.connectorId,
        "createdAt": args.createdAt,
        "description": args.description,
        "iconUrl": args.iconUrl,
        "id": args.id,
        "name": args.name,
        "notes": args.notes,
        "policyId": args.policyId,
        "provisioning": args.provisioning,
        "roleIds": args.roleIds,
        "tabId": args.tabId,
        "updatedAt": args.updatedAt,
        "visible": args.visible,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstance.
 */
export interface GetInstanceArgs {
    allowAssumedSignin?: boolean;
    authMethod?: number;
    brandId?: number;
    connectorId?: number;
    createdAt?: string;
    description?: string;
    iconUrl?: string;
    id: string;
    name?: string;
    notes?: string;
    policyId?: number;
    provisioning?: inputs.apps.GetInstanceProvisioning;
    roleIds?: number[];
    tabId?: number;
    updatedAt?: string;
    visible?: boolean;
}

/**
 * A collection of values returned by getInstance.
 */
export interface GetInstanceResult {
    readonly allowAssumedSignin: boolean;
    readonly authMethod: number;
    readonly brandId: number;
    readonly connectorId: number;
    readonly createdAt: string;
    readonly description: string;
    readonly iconUrl: string;
    readonly id: string;
    readonly name: string;
    readonly notes: string;
    readonly policyId: number;
    readonly provisioning: outputs.apps.GetInstanceProvisioning;
    readonly roleIds: number[];
    readonly tabId: number;
    readonly updatedAt: string;
    readonly visible: boolean;
}
export function getInstanceOutput(args: GetInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInstanceResult> {
    return pulumi.output(args).apply((a: any) => getInstance(a, opts))
}

/**
 * A collection of arguments for invoking getInstance.
 */
export interface GetInstanceOutputArgs {
    allowAssumedSignin?: pulumi.Input<boolean>;
    authMethod?: pulumi.Input<number>;
    brandId?: pulumi.Input<number>;
    connectorId?: pulumi.Input<number>;
    createdAt?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    iconUrl?: pulumi.Input<string>;
    id: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    notes?: pulumi.Input<string>;
    policyId?: pulumi.Input<number>;
    provisioning?: pulumi.Input<inputs.apps.GetInstanceProvisioningArgs>;
    roleIds?: pulumi.Input<pulumi.Input<number>[]>;
    tabId?: pulumi.Input<number>;
    updatedAt?: pulumi.Input<string>;
    visible?: pulumi.Input<boolean>;
}
