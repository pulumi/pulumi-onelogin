// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getDevices(args: GetDevicesArgs, opts?: pulumi.InvokeOptions): Promise<GetDevicesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("onelogin:users/getDevices:getDevices", {
        "authFactorName": args.authFactorName,
        "default": args.default,
        "deviceId": args.deviceId,
        "filters": args.filters,
        "typeDisplayName": args.typeDisplayName,
        "userDisplayName": args.userDisplayName,
        "usersId": args.usersId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDevices.
 */
export interface GetDevicesArgs {
    authFactorName?: string;
    default?: boolean;
    deviceId?: string;
    filters?: inputs.users.GetDevicesFilter[];
    typeDisplayName?: string;
    userDisplayName?: string;
    usersId: string;
}

/**
 * A collection of values returned by getDevices.
 */
export interface GetDevicesResult {
    readonly authFactorName: string;
    readonly default: boolean;
    readonly deviceId: string;
    readonly filters?: outputs.users.GetDevicesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly typeDisplayName: string;
    readonly userDisplayName: string;
    readonly usersId: string;
}
export function getDevicesOutput(args: GetDevicesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDevicesResult> {
    return pulumi.output(args).apply((a: any) => getDevices(a, opts))
}

/**
 * A collection of arguments for invoking getDevices.
 */
export interface GetDevicesOutputArgs {
    authFactorName?: pulumi.Input<string>;
    default?: pulumi.Input<boolean>;
    deviceId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.users.GetDevicesFilterArgs>[]>;
    typeDisplayName?: pulumi.Input<string>;
    userDisplayName?: pulumi.Input<string>;
    usersId: pulumi.Input<string>;
}
