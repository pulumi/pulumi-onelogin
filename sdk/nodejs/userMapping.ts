// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Manage User Mappings resources.
 *
 * This resource allows you to create and configure User Mappings.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as onelogin from "@pulumi/onelogin";
 *
 * const example = new onelogin.UserMapping("example", {
 *     actions: [{
 *         action: "set_status",
 *         values: ["1"],
 *     }],
 *     conditions: [{
 *         operator: ">",
 *         source: "last_login",
 *         value: "90",
 *     }],
 *     enabled: true,
 *     match: "all",
 *     position: 1,
 * });
 * ```
 *
 * ## Import
 *
 * A User Mapping can be imported via the OneLogin User Mapping.
 *
 * ```sh
 *  $ pulumi import onelogin:index/userMapping:UserMapping example <user_mapping_id>
 * ```
 */
export class UserMapping extends pulumi.CustomResource {
    /**
     * Get an existing UserMapping resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserMappingState, opts?: pulumi.CustomResourceOptions): UserMapping {
        return new UserMapping(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'onelogin:index/userMapping:UserMapping';

    /**
     * Returns true if the given object is an instance of UserMapping.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UserMapping {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UserMapping.__pulumiType;
    }

    /**
     * The number of minutes until the token expires
     */
    public readonly actions!: pulumi.Output<outputs.UserMappingAction[] | undefined>;
    /**
     * An array of conditions that the user must meet in order for the mapping to be applied.
     */
    public readonly conditions!: pulumi.Output<outputs.UserMappingCondition[] | undefined>;
    /**
     * Indicates if a mapping is enabled.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * Indicates how conditions should be matched. Must be one of `all` or `any`.
     */
    public readonly match!: pulumi.Output<string>;
    /**
     * The resource's name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Indicates the ordering of the mapping. When not supplied the mapping will be put at the end of the list on create and managed by the provider. '0' can be supplied to consistently push this mapping to the end of the list on every update.
     */
    public readonly position!: pulumi.Output<number>;

    /**
     * Create a UserMapping resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserMappingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserMappingArgs | UserMappingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UserMappingState | undefined;
            resourceInputs["actions"] = state ? state.actions : undefined;
            resourceInputs["conditions"] = state ? state.conditions : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["match"] = state ? state.match : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["position"] = state ? state.position : undefined;
        } else {
            const args = argsOrState as UserMappingArgs | undefined;
            if ((!args || args.match === undefined) && !opts.urn) {
                throw new Error("Missing required property 'match'");
            }
            resourceInputs["actions"] = args ? args.actions : undefined;
            resourceInputs["conditions"] = args ? args.conditions : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["match"] = args ? args.match : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["position"] = args ? args.position : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(UserMapping.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering UserMapping resources.
 */
export interface UserMappingState {
    /**
     * The number of minutes until the token expires
     */
    actions?: pulumi.Input<pulumi.Input<inputs.UserMappingAction>[]>;
    /**
     * An array of conditions that the user must meet in order for the mapping to be applied.
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.UserMappingCondition>[]>;
    /**
     * Indicates if a mapping is enabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Indicates how conditions should be matched. Must be one of `all` or `any`.
     */
    match?: pulumi.Input<string>;
    /**
     * The resource's name.
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates the ordering of the mapping. When not supplied the mapping will be put at the end of the list on create and managed by the provider. '0' can be supplied to consistently push this mapping to the end of the list on every update.
     */
    position?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a UserMapping resource.
 */
export interface UserMappingArgs {
    /**
     * The number of minutes until the token expires
     */
    actions?: pulumi.Input<pulumi.Input<inputs.UserMappingAction>[]>;
    /**
     * An array of conditions that the user must meet in order for the mapping to be applied.
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.UserMappingCondition>[]>;
    /**
     * Indicates if a mapping is enabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Indicates how conditions should be matched. Must be one of `all` or `any`.
     */
    match: pulumi.Input<string>;
    /**
     * The resource's name.
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates the ordering of the mapping. When not supplied the mapping will be put at the end of the list on create and managed by the provider. '0' can be supplied to consistently push this mapping to the end of the list on every update.
     */
    position?: pulumi.Input<number>;
}
