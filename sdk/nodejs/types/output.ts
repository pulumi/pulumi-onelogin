// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AppParameters {
    attributesTransformations: string;
    defaultValues: string;
    includeInSamlAssertion: boolean;
    label: string;
    paramId: number;
    paramKeyName: string;
    provisionedEntitlements: boolean;
    safeEntitlementsEnabled: boolean;
    skipIfBlank: boolean;
    userAttributeMacros: string;
    userAttributeMappings: string;
    values: string;
}

export interface AppRulesAction {
    action: string;
    expression?: string;
    values: string[];
}

export interface AppRulesCondition {
    operator: string;
    source: string;
    value: string;
}

export interface AuthServersConfiguration {
    accessTokenExpirationMinutes: number;
    audiences: string[];
    refreshTokenExpirationMinutes: number;
    resourceIdentifier: string;
}

export interface OidcAppsParameter {
    attributesTransformations: string;
    defaultValues: string;
    includeInSamlAssertion: boolean;
    label: string;
    paramId: number;
    paramKeyName: string;
    provisionedEntitlements: boolean;
    safeEntitlementsEnabled: boolean;
    skipIfBlank: boolean;
    userAttributeMacros: string;
    userAttributeMappings: string;
    values: string;
}

export interface PrivilegesPrivilege {
    statements: outputs.PrivilegesPrivilegeStatement[];
    version?: string;
}

export interface PrivilegesPrivilegeStatement {
    actions: string[];
    effect: string;
    scopes: string[];
}

export interface SamlAppsParameter {
    attributesTransformations: string;
    defaultValues: string;
    includeInSamlAssertion: boolean;
    label: string;
    paramId: number;
    paramKeyName: string;
    provisionedEntitlements: boolean;
    safeEntitlementsEnabled: boolean;
    skipIfBlank: boolean;
    userAttributeMacros: string;
    userAttributeMappings: string;
    values: string;
}

export interface SmartHookCondition {
    operator: string;
    source: string;
    value: string;
}

export interface SmartHookOption {
    locationEnabled?: boolean;
    mfaDeviceInfoEnabled?: boolean;
    riskEnabled?: boolean;
}

export interface UserMappingsAction {
    action: string;
    values: string[];
}

export interface UserMappingsCondition {
    operator: string;
    source: string;
    value: string;
}

export namespace apps {
    export interface RulesAction {
        action: string;
        expression?: string;
        values: string[];
    }

    export interface RulesCondition {
        operator: string;
        source: string;
        value: string;
    }

}

export namespace users {
    export interface GetUsersUser {
        /**
         * directory_id
         */
        directoryId: number;
        /**
         * email
         */
        email: string;
        /**
         * external_id
         */
        externalId: number;
        /**
         * firstname
         */
        firstname: string;
        /**
         * id
         */
        id: number;
        /**
         * last_login
         */
        lastLogin: string;
        /**
         * lastname
         */
        lastname: string;
        /**
         * samaccountname
         */
        samaccountname: string;
        /**
         * username
         */
        username: string;
    }

}
