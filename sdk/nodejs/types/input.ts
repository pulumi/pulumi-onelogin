// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AppConfiguration {
    accessTokenExpirationMinutes?: pulumi.Input<number>;
    loginUrl?: pulumi.Input<string>;
    oidcApplicationType?: pulumi.Input<number>;
    redirectUri?: pulumi.Input<string>;
    tokenEndpointAuthMethod?: pulumi.Input<number>;
}

export interface AppEnforcementPoint {
    caseSensitive?: pulumi.Input<boolean>;
    conditions?: pulumi.Input<string>;
    contextRoot?: pulumi.Input<string>;
    landingPage?: pulumi.Input<string>;
    permissions?: pulumi.Input<string>;
    requireSitewideAuthentication?: pulumi.Input<boolean>;
    resources?: pulumi.Input<pulumi.Input<inputs.AppEnforcementPointResource>[]>;
    sessionExpiryFixed?: pulumi.Input<inputs.AppEnforcementPointSessionExpiryFixed>;
    sessionExpiryInactivity?: pulumi.Input<inputs.AppEnforcementPointSessionExpiryInactivity>;
    target?: pulumi.Input<string>;
    token?: pulumi.Input<string>;
    useTargetHostHeader?: pulumi.Input<boolean>;
    vhost?: pulumi.Input<string>;
}

export interface AppEnforcementPointResource {
    conditions?: pulumi.Input<string>;
    isPathRegex?: pulumi.Input<boolean>;
    path?: pulumi.Input<string>;
    permission?: pulumi.Input<string>;
    requireAuth?: pulumi.Input<boolean>;
}

export interface AppEnforcementPointSessionExpiryFixed {
    unit?: pulumi.Input<number>;
    value?: pulumi.Input<number>;
}

export interface AppEnforcementPointSessionExpiryInactivity {
    unit?: pulumi.Input<number>;
    value?: pulumi.Input<number>;
}

export interface AppProvisioning {
    enabled?: pulumi.Input<boolean>;
}

export interface AuthServersConfiguration {
    accessTokenExpirationMinutes?: pulumi.Input<number>;
    audiences: pulumi.Input<pulumi.Input<string>[]>;
    refreshTokenExpirationMinutes?: pulumi.Input<number>;
    resourceIdentifier: pulumi.Input<string>;
}

export interface GetAppsConfiguration {
    accessTokenExpirationMinutes?: number;
    loginUrl?: string;
    oidcApplicationType?: number;
    redirectUri?: string;
    tokenEndpointAuthMethod?: number;
}

export interface GetAppsConfigurationArgs {
    accessTokenExpirationMinutes?: pulumi.Input<number>;
    loginUrl?: pulumi.Input<string>;
    oidcApplicationType?: pulumi.Input<number>;
    redirectUri?: pulumi.Input<string>;
    tokenEndpointAuthMethod?: pulumi.Input<number>;
}

export interface GetAppsEnforcementPoint {
    caseSensitive?: boolean;
    conditions?: string;
    contextRoot?: string;
    landingPage?: string;
    permissions?: string;
    requireSitewideAuthentication?: boolean;
    resources?: inputs.GetAppsEnforcementPointResource[];
    sessionExpiryFixed?: inputs.GetAppsEnforcementPointSessionExpiryFixed;
    sessionExpiryInactivity?: inputs.GetAppsEnforcementPointSessionExpiryInactivity;
    target?: string;
    token?: string;
    useTargetHostHeader?: boolean;
    vhost?: string;
}

export interface GetAppsEnforcementPointArgs {
    caseSensitive?: pulumi.Input<boolean>;
    conditions?: pulumi.Input<string>;
    contextRoot?: pulumi.Input<string>;
    landingPage?: pulumi.Input<string>;
    permissions?: pulumi.Input<string>;
    requireSitewideAuthentication?: pulumi.Input<boolean>;
    resources?: pulumi.Input<pulumi.Input<inputs.GetAppsEnforcementPointResourceArgs>[]>;
    sessionExpiryFixed?: pulumi.Input<inputs.GetAppsEnforcementPointSessionExpiryFixedArgs>;
    sessionExpiryInactivity?: pulumi.Input<inputs.GetAppsEnforcementPointSessionExpiryInactivityArgs>;
    target?: pulumi.Input<string>;
    token?: pulumi.Input<string>;
    useTargetHostHeader?: pulumi.Input<boolean>;
    vhost?: pulumi.Input<string>;
}

export interface GetAppsEnforcementPointResource {
    conditions?: string;
    isPathRegex?: boolean;
    path?: string;
    permission?: string;
    requireAuth?: boolean;
}

export interface GetAppsEnforcementPointResourceArgs {
    conditions?: pulumi.Input<string>;
    isPathRegex?: pulumi.Input<boolean>;
    path?: pulumi.Input<string>;
    permission?: pulumi.Input<string>;
    requireAuth?: pulumi.Input<boolean>;
}

export interface GetAppsEnforcementPointSessionExpiryFixed {
    unit?: number;
    value?: number;
}

export interface GetAppsEnforcementPointSessionExpiryFixedArgs {
    unit?: pulumi.Input<number>;
    value?: pulumi.Input<number>;
}

export interface GetAppsEnforcementPointSessionExpiryInactivity {
    unit?: number;
    value?: number;
}

export interface GetAppsEnforcementPointSessionExpiryInactivityArgs {
    unit?: pulumi.Input<number>;
    value?: pulumi.Input<number>;
}

export interface GetAppsFilter {
    name: string;
    values: string[];
}

export interface GetAppsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAppsProvisioning {
    enabled?: boolean;
}

export interface GetAppsProvisioningArgs {
    enabled?: pulumi.Input<boolean>;
}

export interface GetAuthServersClaimsFilter {
    name: string;
    values: string[];
}

export interface GetAuthServersClaimsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAuthServersConfiguration {
    accessTokenExpirationMinutes?: number;
    audiences?: string[];
    refreshTokenExpirationMinutes?: number;
    resourceIdentifier?: string;
}

export interface GetAuthServersConfigurationArgs {
    accessTokenExpirationMinutes?: pulumi.Input<number>;
    audiences?: pulumi.Input<pulumi.Input<string>[]>;
    refreshTokenExpirationMinutes?: pulumi.Input<number>;
    resourceIdentifier?: pulumi.Input<string>;
}

export interface GetAuthServersFilter {
    name: string;
    values: string[];
}

export interface GetAuthServersFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAuthServersInstanceConfiguration {
    accessTokenExpirationMinutes?: number;
    audiences?: string[];
    refreshTokenExpirationMinutes?: number;
    resourceIdentifier?: string;
}

export interface GetAuthServersInstanceConfigurationArgs {
    accessTokenExpirationMinutes?: pulumi.Input<number>;
    audiences?: pulumi.Input<pulumi.Input<string>[]>;
    refreshTokenExpirationMinutes?: pulumi.Input<number>;
    resourceIdentifier?: pulumi.Input<string>;
}

export interface GetAuthServersScopesFilter {
    name: string;
    values: string[];
}

export interface GetAuthServersScopesFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMappingsAction {
    action?: string;
    values?: string[];
}

export interface GetMappingsActionArgs {
    action?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMappingsCondition {
    operator?: string;
    source?: string;
    value?: string;
}

export interface GetMappingsConditionArgs {
    operator?: pulumi.Input<string>;
    source?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetMappingsFilter {
    name: string;
    values: string[];
}

export interface GetMappingsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetPrivilegesFilter {
    name: string;
    values: string[];
}

export interface GetPrivilegesFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetPrivilegesInstancePrivilege {
    statements?: inputs.GetPrivilegesInstancePrivilegeStatement[];
    version?: string;
}

export interface GetPrivilegesInstancePrivilegeArgs {
    statements?: pulumi.Input<pulumi.Input<inputs.GetPrivilegesInstancePrivilegeStatementArgs>[]>;
    version?: pulumi.Input<string>;
}

export interface GetPrivilegesInstancePrivilegeStatement {
    actions?: string[];
    effect?: string;
    scopes?: string[];
}

export interface GetPrivilegesInstancePrivilegeStatementArgs {
    actions?: pulumi.Input<pulumi.Input<string>[]>;
    effect?: pulumi.Input<string>;
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetPrivilegesPrivilege {
    statements?: inputs.GetPrivilegesPrivilegeStatement[];
    version?: string;
}

export interface GetPrivilegesPrivilegeArgs {
    statements?: pulumi.Input<pulumi.Input<inputs.GetPrivilegesPrivilegeStatementArgs>[]>;
    version?: pulumi.Input<string>;
}

export interface GetPrivilegesPrivilegeStatement {
    actions?: string[];
    effect?: string;
    scopes?: string[];
}

export interface GetPrivilegesPrivilegeStatementArgs {
    actions?: pulumi.Input<pulumi.Input<string>[]>;
    effect?: pulumi.Input<string>;
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetRiskRulesFilter {
    name: string;
    values: string[];
}

export interface GetRiskRulesFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetRiskRulesInstanceSource {
    id?: string;
    name?: string;
}

export interface GetRiskRulesInstanceSourceArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}

export interface GetRiskRulesSource {
    id?: string;
    name?: string;
}

export interface GetRiskRulesSourceArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}

export interface PrivilegesPrivilege {
    statements?: pulumi.Input<pulumi.Input<inputs.PrivilegesPrivilegeStatement>[]>;
    version?: pulumi.Input<string>;
}

export interface PrivilegesPrivilegeStatement {
    actions: pulumi.Input<pulumi.Input<string>[]>;
    effect: pulumi.Input<string>;
    scopes: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ProviderEndpoint {
    apps?: pulumi.Input<string>;
    appsRules?: pulumi.Input<string>;
    authServers?: pulumi.Input<string>;
    privileges?: pulumi.Input<string>;
    riskRules?: pulumi.Input<string>;
    roles?: pulumi.Input<string>;
    users?: pulumi.Input<string>;
    usersV1?: pulumi.Input<string>;
}

export interface RiskRulesSource {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
export namespace apps {
    export interface GetActionsFilter {
        name: string;
        values: string[];
    }

    export interface GetActionsFilterArgs {
        name: pulumi.Input<string>;
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetActionsValuesFilter {
        name: string;
        values: string[];
    }

    export interface GetActionsValuesFilterArgs {
        name: pulumi.Input<string>;
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetConditionsFilter {
        name: string;
        values: string[];
    }

    export interface GetConditionsFilterArgs {
        name: pulumi.Input<string>;
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetConditionsOperatorsFilter {
        name: string;
        values: string[];
    }

    export interface GetConditionsOperatorsFilterArgs {
        name: pulumi.Input<string>;
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetInstanceConfiguration {
        accessTokenExpirationMinutes?: number;
        loginUrl?: string;
        oidcApplicationType?: number;
        redirectUri?: string;
        tokenEndpointAuthMethod?: number;
    }

    export interface GetInstanceConfigurationArgs {
        accessTokenExpirationMinutes?: pulumi.Input<number>;
        loginUrl?: pulumi.Input<string>;
        oidcApplicationType?: pulumi.Input<number>;
        redirectUri?: pulumi.Input<string>;
        tokenEndpointAuthMethod?: pulumi.Input<number>;
    }

    export interface GetInstanceEnforcementPoint {
        caseSensitive?: boolean;
        conditions?: string;
        contextRoot?: string;
        landingPage?: string;
        permissions?: string;
        requireSitewideAuthentication?: boolean;
        resources?: inputs.apps.GetInstanceEnforcementPointResource[];
        sessionExpiryFixed?: inputs.apps.GetInstanceEnforcementPointSessionExpiryFixed;
        sessionExpiryInactivity?: inputs.apps.GetInstanceEnforcementPointSessionExpiryInactivity;
        target?: string;
        token?: string;
        useTargetHostHeader?: boolean;
        vhost?: string;
    }

    export interface GetInstanceEnforcementPointArgs {
        caseSensitive?: pulumi.Input<boolean>;
        conditions?: pulumi.Input<string>;
        contextRoot?: pulumi.Input<string>;
        landingPage?: pulumi.Input<string>;
        permissions?: pulumi.Input<string>;
        requireSitewideAuthentication?: pulumi.Input<boolean>;
        resources?: pulumi.Input<pulumi.Input<inputs.apps.GetInstanceEnforcementPointResourceArgs>[]>;
        sessionExpiryFixed?: pulumi.Input<inputs.apps.GetInstanceEnforcementPointSessionExpiryFixedArgs>;
        sessionExpiryInactivity?: pulumi.Input<inputs.apps.GetInstanceEnforcementPointSessionExpiryInactivityArgs>;
        target?: pulumi.Input<string>;
        token?: pulumi.Input<string>;
        useTargetHostHeader?: pulumi.Input<boolean>;
        vhost?: pulumi.Input<string>;
    }

    export interface GetInstanceEnforcementPointResource {
        conditions?: string;
        isPathRegex?: boolean;
        path?: string;
        permission?: string;
        requireAuth?: boolean;
    }

    export interface GetInstanceEnforcementPointResourceArgs {
        conditions?: pulumi.Input<string>;
        isPathRegex?: pulumi.Input<boolean>;
        path?: pulumi.Input<string>;
        permission?: pulumi.Input<string>;
        requireAuth?: pulumi.Input<boolean>;
    }

    export interface GetInstanceEnforcementPointSessionExpiryFixed {
        unit?: number;
        value?: number;
    }

    export interface GetInstanceEnforcementPointSessionExpiryFixedArgs {
        unit?: pulumi.Input<number>;
        value?: pulumi.Input<number>;
    }

    export interface GetInstanceEnforcementPointSessionExpiryInactivity {
        unit?: number;
        value?: number;
    }

    export interface GetInstanceEnforcementPointSessionExpiryInactivityArgs {
        unit?: pulumi.Input<number>;
        value?: pulumi.Input<number>;
    }

    export interface GetInstanceProvisioning {
        enabled?: boolean;
    }

    export interface GetInstanceProvisioningArgs {
        enabled?: pulumi.Input<boolean>;
    }

    export interface GetRulesAction {
        action?: string;
        values?: string[];
    }

    export interface GetRulesActionArgs {
        action?: pulumi.Input<string>;
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetRulesCondition {
        operator?: string;
        source?: string;
        value?: string;
    }

    export interface GetRulesConditionArgs {
        operator?: pulumi.Input<string>;
        source?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface GetRulesFilter {
        name: string;
        values: string[];
    }

    export interface GetRulesFilterArgs {
        name: pulumi.Input<string>;
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetRulesInstanceAction {
        action?: string;
        values?: string[];
    }

    export interface GetRulesInstanceActionArgs {
        action?: pulumi.Input<string>;
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetRulesInstanceCondition {
        operator?: string;
        source?: string;
        value?: string;
    }

    export interface GetRulesInstanceConditionArgs {
        operator?: pulumi.Input<string>;
        source?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface GetUsersFilter {
        name: string;
        values: string[];
    }

    export interface GetUsersFilterArgs {
        name: pulumi.Input<string>;
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RulesAction {
        action?: pulumi.Input<string>;
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RulesCondition {
        operator?: pulumi.Input<string>;
        source?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }
}

export namespace config {
}

export namespace roles {
    export interface GetAdminsFilter {
        name: string;
        values: string[];
    }

    export interface GetAdminsFilterArgs {
        name: pulumi.Input<string>;
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetAppsFilter {
        name: string;
        values: string[];
    }

    export interface GetAppsFilterArgs {
        name: pulumi.Input<string>;
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetRolesFilter {
        name: string;
        values: string[];
    }

    export interface GetRolesFilterArgs {
        name: pulumi.Input<string>;
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetUsersFilter {
        name: string;
        values: string[];
    }

    export interface GetUsersFilterArgs {
        name: pulumi.Input<string>;
        values: pulumi.Input<pulumi.Input<string>[]>;
    }
}

export namespace users {
    export interface GetAppsFilter {
        name: string;
        values: string[];
    }

    export interface GetAppsFilterArgs {
        name: pulumi.Input<string>;
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetDevicesFilter {
        name: string;
        values: string[];
    }

    export interface GetDevicesFilterArgs {
        name: pulumi.Input<string>;
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetUsersFilter {
        name: string;
        values: string[];
    }

    export interface GetUsersFilterArgs {
        name: pulumi.Input<string>;
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetV1AppsFilter {
        name: string;
        values: string[];
    }

    export interface GetV1AppsFilterArgs {
        name: pulumi.Input<string>;
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetV1Filter {
        name: string;
        values: string[];
    }

    export interface GetV1FilterArgs {
        name: pulumi.Input<string>;
        values: pulumi.Input<pulumi.Input<string>[]>;
    }
}
