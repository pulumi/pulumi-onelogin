// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBrandsApps(args: GetBrandsAppsArgs, opts?: pulumi.InvokeOptions): Promise<GetBrandsAppsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("onelogin:index/getBrandsApps:getBrandsApps", {
        "authMethod": args.authMethod,
        "authMethodDescription": args.authMethodDescription,
        "brandsId": args.brandsId,
        "connectorId": args.connectorId,
        "createdAt": args.createdAt,
        "description": args.description,
        "filters": args.filters,
        "name": args.name,
        "updatedAt": args.updatedAt,
        "visible": args.visible,
    }, opts);
}

/**
 * A collection of arguments for invoking getBrandsApps.
 */
export interface GetBrandsAppsArgs {
    authMethod?: number;
    authMethodDescription?: string;
    brandsId: string;
    connectorId?: number;
    createdAt?: string;
    description?: string;
    filters?: inputs.GetBrandsAppsFilter[];
    name?: string;
    updatedAt?: string;
    visible?: boolean;
}

/**
 * A collection of values returned by getBrandsApps.
 */
export interface GetBrandsAppsResult {
    readonly authMethod: number;
    readonly authMethodDescription: string;
    readonly brandsId: string;
    readonly connectorId: number;
    readonly createdAt: string;
    readonly description: string;
    readonly filters?: outputs.GetBrandsAppsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly updatedAt: string;
    readonly visible: boolean;
}
export function getBrandsAppsOutput(args: GetBrandsAppsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBrandsAppsResult> {
    return pulumi.output(args).apply((a: any) => getBrandsApps(a, opts))
}

/**
 * A collection of arguments for invoking getBrandsApps.
 */
export interface GetBrandsAppsOutputArgs {
    authMethod?: pulumi.Input<number>;
    authMethodDescription?: pulumi.Input<string>;
    brandsId: pulumi.Input<string>;
    connectorId?: pulumi.Input<number>;
    createdAt?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetBrandsAppsFilterArgs>[]>;
    name?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<string>;
    visible?: pulumi.Input<boolean>;
}
