// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rules

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetInstanceSource struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// GetInstanceSourceInput is an input type that accepts GetInstanceSourceArgs and GetInstanceSourceOutput values.
// You can construct a concrete instance of `GetInstanceSourceInput` via:
//
//	GetInstanceSourceArgs{...}
type GetInstanceSourceInput interface {
	pulumi.Input

	ToGetInstanceSourceOutput() GetInstanceSourceOutput
	ToGetInstanceSourceOutputWithContext(context.Context) GetInstanceSourceOutput
}

type GetInstanceSourceArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetInstanceSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceSource)(nil)).Elem()
}

func (i GetInstanceSourceArgs) ToGetInstanceSourceOutput() GetInstanceSourceOutput {
	return i.ToGetInstanceSourceOutputWithContext(context.Background())
}

func (i GetInstanceSourceArgs) ToGetInstanceSourceOutputWithContext(ctx context.Context) GetInstanceSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceSourceOutput)
}

func (i GetInstanceSourceArgs) ToGetInstanceSourcePtrOutput() GetInstanceSourcePtrOutput {
	return i.ToGetInstanceSourcePtrOutputWithContext(context.Background())
}

func (i GetInstanceSourceArgs) ToGetInstanceSourcePtrOutputWithContext(ctx context.Context) GetInstanceSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceSourceOutput).ToGetInstanceSourcePtrOutputWithContext(ctx)
}

// GetInstanceSourcePtrInput is an input type that accepts GetInstanceSourceArgs, GetInstanceSourcePtr and GetInstanceSourcePtrOutput values.
// You can construct a concrete instance of `GetInstanceSourcePtrInput` via:
//
//	        GetInstanceSourceArgs{...}
//
//	or:
//
//	        nil
type GetInstanceSourcePtrInput interface {
	pulumi.Input

	ToGetInstanceSourcePtrOutput() GetInstanceSourcePtrOutput
	ToGetInstanceSourcePtrOutputWithContext(context.Context) GetInstanceSourcePtrOutput
}

type getInstanceSourcePtrType GetInstanceSourceArgs

func GetInstanceSourcePtr(v *GetInstanceSourceArgs) GetInstanceSourcePtrInput {
	return (*getInstanceSourcePtrType)(v)
}

func (*getInstanceSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceSource)(nil)).Elem()
}

func (i *getInstanceSourcePtrType) ToGetInstanceSourcePtrOutput() GetInstanceSourcePtrOutput {
	return i.ToGetInstanceSourcePtrOutputWithContext(context.Background())
}

func (i *getInstanceSourcePtrType) ToGetInstanceSourcePtrOutputWithContext(ctx context.Context) GetInstanceSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceSourcePtrOutput)
}

type GetInstanceSourceOutput struct{ *pulumi.OutputState }

func (GetInstanceSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceSource)(nil)).Elem()
}

func (o GetInstanceSourceOutput) ToGetInstanceSourceOutput() GetInstanceSourceOutput {
	return o
}

func (o GetInstanceSourceOutput) ToGetInstanceSourceOutputWithContext(ctx context.Context) GetInstanceSourceOutput {
	return o
}

func (o GetInstanceSourceOutput) ToGetInstanceSourcePtrOutput() GetInstanceSourcePtrOutput {
	return o.ToGetInstanceSourcePtrOutputWithContext(context.Background())
}

func (o GetInstanceSourceOutput) ToGetInstanceSourcePtrOutputWithContext(ctx context.Context) GetInstanceSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetInstanceSource) *GetInstanceSource {
		return &v
	}).(GetInstanceSourcePtrOutput)
}

func (o GetInstanceSourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSource) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetInstanceSourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSource) string { return v.Name }).(pulumi.StringOutput)
}

type GetInstanceSourcePtrOutput struct{ *pulumi.OutputState }

func (GetInstanceSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceSource)(nil)).Elem()
}

func (o GetInstanceSourcePtrOutput) ToGetInstanceSourcePtrOutput() GetInstanceSourcePtrOutput {
	return o
}

func (o GetInstanceSourcePtrOutput) ToGetInstanceSourcePtrOutputWithContext(ctx context.Context) GetInstanceSourcePtrOutput {
	return o
}

func (o GetInstanceSourcePtrOutput) Elem() GetInstanceSourceOutput {
	return o.ApplyT(func(v *GetInstanceSource) GetInstanceSource {
		if v != nil {
			return *v
		}
		var ret GetInstanceSource
		return ret
	}).(GetInstanceSourceOutput)
}

func (o GetInstanceSourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceSource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

func (o GetInstanceSourcePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceSource) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type GetRulesFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetRulesFilterInput is an input type that accepts GetRulesFilterArgs and GetRulesFilterOutput values.
// You can construct a concrete instance of `GetRulesFilterInput` via:
//
//	GetRulesFilterArgs{...}
type GetRulesFilterInput interface {
	pulumi.Input

	ToGetRulesFilterOutput() GetRulesFilterOutput
	ToGetRulesFilterOutputWithContext(context.Context) GetRulesFilterOutput
}

type GetRulesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRulesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesFilter)(nil)).Elem()
}

func (i GetRulesFilterArgs) ToGetRulesFilterOutput() GetRulesFilterOutput {
	return i.ToGetRulesFilterOutputWithContext(context.Background())
}

func (i GetRulesFilterArgs) ToGetRulesFilterOutputWithContext(ctx context.Context) GetRulesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesFilterOutput)
}

// GetRulesFilterArrayInput is an input type that accepts GetRulesFilterArray and GetRulesFilterArrayOutput values.
// You can construct a concrete instance of `GetRulesFilterArrayInput` via:
//
//	GetRulesFilterArray{ GetRulesFilterArgs{...} }
type GetRulesFilterArrayInput interface {
	pulumi.Input

	ToGetRulesFilterArrayOutput() GetRulesFilterArrayOutput
	ToGetRulesFilterArrayOutputWithContext(context.Context) GetRulesFilterArrayOutput
}

type GetRulesFilterArray []GetRulesFilterInput

func (GetRulesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesFilter)(nil)).Elem()
}

func (i GetRulesFilterArray) ToGetRulesFilterArrayOutput() GetRulesFilterArrayOutput {
	return i.ToGetRulesFilterArrayOutputWithContext(context.Background())
}

func (i GetRulesFilterArray) ToGetRulesFilterArrayOutputWithContext(ctx context.Context) GetRulesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesFilterArrayOutput)
}

type GetRulesFilterOutput struct{ *pulumi.OutputState }

func (GetRulesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesFilter)(nil)).Elem()
}

func (o GetRulesFilterOutput) ToGetRulesFilterOutput() GetRulesFilterOutput {
	return o
}

func (o GetRulesFilterOutput) ToGetRulesFilterOutputWithContext(ctx context.Context) GetRulesFilterOutput {
	return o
}

func (o GetRulesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRulesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRulesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRulesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRulesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesFilter)(nil)).Elem()
}

func (o GetRulesFilterArrayOutput) ToGetRulesFilterArrayOutput() GetRulesFilterArrayOutput {
	return o
}

func (o GetRulesFilterArrayOutput) ToGetRulesFilterArrayOutputWithContext(ctx context.Context) GetRulesFilterArrayOutput {
	return o
}

func (o GetRulesFilterArrayOutput) Index(i pulumi.IntInput) GetRulesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRulesFilter {
		return vs[0].([]GetRulesFilter)[vs[1].(int)]
	}).(GetRulesFilterOutput)
}

type GetRulesSource struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// GetRulesSourceInput is an input type that accepts GetRulesSourceArgs and GetRulesSourceOutput values.
// You can construct a concrete instance of `GetRulesSourceInput` via:
//
//	GetRulesSourceArgs{...}
type GetRulesSourceInput interface {
	pulumi.Input

	ToGetRulesSourceOutput() GetRulesSourceOutput
	ToGetRulesSourceOutputWithContext(context.Context) GetRulesSourceOutput
}

type GetRulesSourceArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetRulesSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesSource)(nil)).Elem()
}

func (i GetRulesSourceArgs) ToGetRulesSourceOutput() GetRulesSourceOutput {
	return i.ToGetRulesSourceOutputWithContext(context.Background())
}

func (i GetRulesSourceArgs) ToGetRulesSourceOutputWithContext(ctx context.Context) GetRulesSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesSourceOutput)
}

func (i GetRulesSourceArgs) ToGetRulesSourcePtrOutput() GetRulesSourcePtrOutput {
	return i.ToGetRulesSourcePtrOutputWithContext(context.Background())
}

func (i GetRulesSourceArgs) ToGetRulesSourcePtrOutputWithContext(ctx context.Context) GetRulesSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesSourceOutput).ToGetRulesSourcePtrOutputWithContext(ctx)
}

// GetRulesSourcePtrInput is an input type that accepts GetRulesSourceArgs, GetRulesSourcePtr and GetRulesSourcePtrOutput values.
// You can construct a concrete instance of `GetRulesSourcePtrInput` via:
//
//	        GetRulesSourceArgs{...}
//
//	or:
//
//	        nil
type GetRulesSourcePtrInput interface {
	pulumi.Input

	ToGetRulesSourcePtrOutput() GetRulesSourcePtrOutput
	ToGetRulesSourcePtrOutputWithContext(context.Context) GetRulesSourcePtrOutput
}

type getRulesSourcePtrType GetRulesSourceArgs

func GetRulesSourcePtr(v *GetRulesSourceArgs) GetRulesSourcePtrInput {
	return (*getRulesSourcePtrType)(v)
}

func (*getRulesSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetRulesSource)(nil)).Elem()
}

func (i *getRulesSourcePtrType) ToGetRulesSourcePtrOutput() GetRulesSourcePtrOutput {
	return i.ToGetRulesSourcePtrOutputWithContext(context.Background())
}

func (i *getRulesSourcePtrType) ToGetRulesSourcePtrOutputWithContext(ctx context.Context) GetRulesSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesSourcePtrOutput)
}

type GetRulesSourceOutput struct{ *pulumi.OutputState }

func (GetRulesSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesSource)(nil)).Elem()
}

func (o GetRulesSourceOutput) ToGetRulesSourceOutput() GetRulesSourceOutput {
	return o
}

func (o GetRulesSourceOutput) ToGetRulesSourceOutputWithContext(ctx context.Context) GetRulesSourceOutput {
	return o
}

func (o GetRulesSourceOutput) ToGetRulesSourcePtrOutput() GetRulesSourcePtrOutput {
	return o.ToGetRulesSourcePtrOutputWithContext(context.Background())
}

func (o GetRulesSourceOutput) ToGetRulesSourcePtrOutputWithContext(ctx context.Context) GetRulesSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetRulesSource) *GetRulesSource {
		return &v
	}).(GetRulesSourcePtrOutput)
}

func (o GetRulesSourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesSource) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRulesSourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesSource) string { return v.Name }).(pulumi.StringOutput)
}

type GetRulesSourcePtrOutput struct{ *pulumi.OutputState }

func (GetRulesSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetRulesSource)(nil)).Elem()
}

func (o GetRulesSourcePtrOutput) ToGetRulesSourcePtrOutput() GetRulesSourcePtrOutput {
	return o
}

func (o GetRulesSourcePtrOutput) ToGetRulesSourcePtrOutputWithContext(ctx context.Context) GetRulesSourcePtrOutput {
	return o
}

func (o GetRulesSourcePtrOutput) Elem() GetRulesSourceOutput {
	return o.ApplyT(func(v *GetRulesSource) GetRulesSource {
		if v != nil {
			return *v
		}
		var ret GetRulesSource
		return ret
	}).(GetRulesSourceOutput)
}

func (o GetRulesSourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetRulesSource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

func (o GetRulesSourcePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetRulesSource) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceSourceInput)(nil)).Elem(), GetInstanceSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceSourcePtrInput)(nil)).Elem(), GetInstanceSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesFilterInput)(nil)).Elem(), GetRulesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesFilterArrayInput)(nil)).Elem(), GetRulesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesSourceInput)(nil)).Elem(), GetRulesSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesSourcePtrInput)(nil)).Elem(), GetRulesSourceArgs{})
	pulumi.RegisterOutputType(GetInstanceSourceOutput{})
	pulumi.RegisterOutputType(GetInstanceSourcePtrOutput{})
	pulumi.RegisterOutputType(GetRulesFilterOutput{})
	pulumi.RegisterOutputType(GetRulesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRulesSourceOutput{})
	pulumi.RegisterOutputType(GetRulesSourcePtrOutput{})
}
