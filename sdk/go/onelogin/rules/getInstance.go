// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rules

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetInstance(ctx *pulumi.Context, args *GetInstanceArgs, opts ...pulumi.InvokeOption) (*GetInstanceResult, error) {
	var rv GetInstanceResult
	err := ctx.Invoke("onelogin:rules/getInstance:getInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstance.
type GetInstanceArgs struct {
	Description *string            `pulumi:"description"`
	Filters     []string           `pulumi:"filters"`
	Id          string             `pulumi:"id"`
	Name        *string            `pulumi:"name"`
	Source      *GetInstanceSource `pulumi:"source"`
	Target      *string            `pulumi:"target"`
	Type        *string            `pulumi:"type"`
}

// A collection of values returned by getInstance.
type GetInstanceResult struct {
	Description string            `pulumi:"description"`
	Filters     []string          `pulumi:"filters"`
	Id          string            `pulumi:"id"`
	Name        string            `pulumi:"name"`
	Source      GetInstanceSource `pulumi:"source"`
	Target      string            `pulumi:"target"`
	Type        string            `pulumi:"type"`
}

func GetInstanceOutput(ctx *pulumi.Context, args GetInstanceOutputArgs, opts ...pulumi.InvokeOption) GetInstanceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetInstanceResult, error) {
			args := v.(GetInstanceArgs)
			r, err := GetInstance(ctx, &args, opts...)
			var s GetInstanceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetInstanceResultOutput)
}

// A collection of arguments for invoking getInstance.
type GetInstanceOutputArgs struct {
	Description pulumi.StringPtrInput     `pulumi:"description"`
	Filters     pulumi.StringArrayInput   `pulumi:"filters"`
	Id          pulumi.StringInput        `pulumi:"id"`
	Name        pulumi.StringPtrInput     `pulumi:"name"`
	Source      GetInstanceSourcePtrInput `pulumi:"source"`
	Target      pulumi.StringPtrInput     `pulumi:"target"`
	Type        pulumi.StringPtrInput     `pulumi:"type"`
}

func (GetInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceArgs)(nil)).Elem()
}

// A collection of values returned by getInstance.
type GetInstanceResultOutput struct{ *pulumi.OutputState }

func (GetInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceResult)(nil)).Elem()
}

func (o GetInstanceResultOutput) ToGetInstanceResultOutput() GetInstanceResultOutput {
	return o
}

func (o GetInstanceResultOutput) ToGetInstanceResultOutputWithContext(ctx context.Context) GetInstanceResultOutput {
	return o
}

func (o GetInstanceResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetInstanceResultOutput) Filters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceResult) []string { return v.Filters }).(pulumi.StringArrayOutput)
}

func (o GetInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetInstanceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetInstanceResultOutput) Source() GetInstanceSourceOutput {
	return o.ApplyT(func(v GetInstanceResult) GetInstanceSource { return v.Source }).(GetInstanceSourceOutput)
}

func (o GetInstanceResultOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceResult) string { return v.Target }).(pulumi.StringOutput)
}

func (o GetInstanceResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInstanceResultOutput{})
}
