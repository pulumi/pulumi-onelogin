// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package roles

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-onelogin/sdk/go/onelogin/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GetAdminsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetAdminsFilterInput is an input type that accepts GetAdminsFilterArgs and GetAdminsFilterOutput values.
// You can construct a concrete instance of `GetAdminsFilterInput` via:
//
//	GetAdminsFilterArgs{...}
type GetAdminsFilterInput interface {
	pulumi.Input

	ToGetAdminsFilterOutput() GetAdminsFilterOutput
	ToGetAdminsFilterOutputWithContext(context.Context) GetAdminsFilterOutput
}

type GetAdminsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetAdminsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminsFilter)(nil)).Elem()
}

func (i GetAdminsFilterArgs) ToGetAdminsFilterOutput() GetAdminsFilterOutput {
	return i.ToGetAdminsFilterOutputWithContext(context.Background())
}

func (i GetAdminsFilterArgs) ToGetAdminsFilterOutputWithContext(ctx context.Context) GetAdminsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminsFilterOutput)
}

// GetAdminsFilterArrayInput is an input type that accepts GetAdminsFilterArray and GetAdminsFilterArrayOutput values.
// You can construct a concrete instance of `GetAdminsFilterArrayInput` via:
//
//	GetAdminsFilterArray{ GetAdminsFilterArgs{...} }
type GetAdminsFilterArrayInput interface {
	pulumi.Input

	ToGetAdminsFilterArrayOutput() GetAdminsFilterArrayOutput
	ToGetAdminsFilterArrayOutputWithContext(context.Context) GetAdminsFilterArrayOutput
}

type GetAdminsFilterArray []GetAdminsFilterInput

func (GetAdminsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminsFilter)(nil)).Elem()
}

func (i GetAdminsFilterArray) ToGetAdminsFilterArrayOutput() GetAdminsFilterArrayOutput {
	return i.ToGetAdminsFilterArrayOutputWithContext(context.Background())
}

func (i GetAdminsFilterArray) ToGetAdminsFilterArrayOutputWithContext(ctx context.Context) GetAdminsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminsFilterArrayOutput)
}

type GetAdminsFilterOutput struct{ *pulumi.OutputState }

func (GetAdminsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminsFilter)(nil)).Elem()
}

func (o GetAdminsFilterOutput) ToGetAdminsFilterOutput() GetAdminsFilterOutput {
	return o
}

func (o GetAdminsFilterOutput) ToGetAdminsFilterOutputWithContext(ctx context.Context) GetAdminsFilterOutput {
	return o
}

func (o GetAdminsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetAdminsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAdminsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetAdminsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetAdminsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminsFilter)(nil)).Elem()
}

func (o GetAdminsFilterArrayOutput) ToGetAdminsFilterArrayOutput() GetAdminsFilterArrayOutput {
	return o
}

func (o GetAdminsFilterArrayOutput) ToGetAdminsFilterArrayOutputWithContext(ctx context.Context) GetAdminsFilterArrayOutput {
	return o
}

func (o GetAdminsFilterArrayOutput) Index(i pulumi.IntInput) GetAdminsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdminsFilter {
		return vs[0].([]GetAdminsFilter)[vs[1].(int)]
	}).(GetAdminsFilterOutput)
}

type GetAppsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetAppsFilterInput is an input type that accepts GetAppsFilterArgs and GetAppsFilterOutput values.
// You can construct a concrete instance of `GetAppsFilterInput` via:
//
//	GetAppsFilterArgs{...}
type GetAppsFilterInput interface {
	pulumi.Input

	ToGetAppsFilterOutput() GetAppsFilterOutput
	ToGetAppsFilterOutputWithContext(context.Context) GetAppsFilterOutput
}

type GetAppsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetAppsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppsFilter)(nil)).Elem()
}

func (i GetAppsFilterArgs) ToGetAppsFilterOutput() GetAppsFilterOutput {
	return i.ToGetAppsFilterOutputWithContext(context.Background())
}

func (i GetAppsFilterArgs) ToGetAppsFilterOutputWithContext(ctx context.Context) GetAppsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppsFilterOutput)
}

// GetAppsFilterArrayInput is an input type that accepts GetAppsFilterArray and GetAppsFilterArrayOutput values.
// You can construct a concrete instance of `GetAppsFilterArrayInput` via:
//
//	GetAppsFilterArray{ GetAppsFilterArgs{...} }
type GetAppsFilterArrayInput interface {
	pulumi.Input

	ToGetAppsFilterArrayOutput() GetAppsFilterArrayOutput
	ToGetAppsFilterArrayOutputWithContext(context.Context) GetAppsFilterArrayOutput
}

type GetAppsFilterArray []GetAppsFilterInput

func (GetAppsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppsFilter)(nil)).Elem()
}

func (i GetAppsFilterArray) ToGetAppsFilterArrayOutput() GetAppsFilterArrayOutput {
	return i.ToGetAppsFilterArrayOutputWithContext(context.Background())
}

func (i GetAppsFilterArray) ToGetAppsFilterArrayOutputWithContext(ctx context.Context) GetAppsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppsFilterArrayOutput)
}

type GetAppsFilterOutput struct{ *pulumi.OutputState }

func (GetAppsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppsFilter)(nil)).Elem()
}

func (o GetAppsFilterOutput) ToGetAppsFilterOutput() GetAppsFilterOutput {
	return o
}

func (o GetAppsFilterOutput) ToGetAppsFilterOutputWithContext(ctx context.Context) GetAppsFilterOutput {
	return o
}

func (o GetAppsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetAppsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAppsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetAppsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetAppsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppsFilter)(nil)).Elem()
}

func (o GetAppsFilterArrayOutput) ToGetAppsFilterArrayOutput() GetAppsFilterArrayOutput {
	return o
}

func (o GetAppsFilterArrayOutput) ToGetAppsFilterArrayOutputWithContext(ctx context.Context) GetAppsFilterArrayOutput {
	return o
}

func (o GetAppsFilterArrayOutput) Index(i pulumi.IntInput) GetAppsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppsFilter {
		return vs[0].([]GetAppsFilter)[vs[1].(int)]
	}).(GetAppsFilterOutput)
}

type GetRolesFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetRolesFilterInput is an input type that accepts GetRolesFilterArgs and GetRolesFilterOutput values.
// You can construct a concrete instance of `GetRolesFilterInput` via:
//
//	GetRolesFilterArgs{...}
type GetRolesFilterInput interface {
	pulumi.Input

	ToGetRolesFilterOutput() GetRolesFilterOutput
	ToGetRolesFilterOutputWithContext(context.Context) GetRolesFilterOutput
}

type GetRolesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRolesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRolesFilter)(nil)).Elem()
}

func (i GetRolesFilterArgs) ToGetRolesFilterOutput() GetRolesFilterOutput {
	return i.ToGetRolesFilterOutputWithContext(context.Background())
}

func (i GetRolesFilterArgs) ToGetRolesFilterOutputWithContext(ctx context.Context) GetRolesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRolesFilterOutput)
}

// GetRolesFilterArrayInput is an input type that accepts GetRolesFilterArray and GetRolesFilterArrayOutput values.
// You can construct a concrete instance of `GetRolesFilterArrayInput` via:
//
//	GetRolesFilterArray{ GetRolesFilterArgs{...} }
type GetRolesFilterArrayInput interface {
	pulumi.Input

	ToGetRolesFilterArrayOutput() GetRolesFilterArrayOutput
	ToGetRolesFilterArrayOutputWithContext(context.Context) GetRolesFilterArrayOutput
}

type GetRolesFilterArray []GetRolesFilterInput

func (GetRolesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRolesFilter)(nil)).Elem()
}

func (i GetRolesFilterArray) ToGetRolesFilterArrayOutput() GetRolesFilterArrayOutput {
	return i.ToGetRolesFilterArrayOutputWithContext(context.Background())
}

func (i GetRolesFilterArray) ToGetRolesFilterArrayOutputWithContext(ctx context.Context) GetRolesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRolesFilterArrayOutput)
}

type GetRolesFilterOutput struct{ *pulumi.OutputState }

func (GetRolesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRolesFilter)(nil)).Elem()
}

func (o GetRolesFilterOutput) ToGetRolesFilterOutput() GetRolesFilterOutput {
	return o
}

func (o GetRolesFilterOutput) ToGetRolesFilterOutputWithContext(ctx context.Context) GetRolesFilterOutput {
	return o
}

func (o GetRolesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRolesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRolesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRolesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRolesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRolesFilter)(nil)).Elem()
}

func (o GetRolesFilterArrayOutput) ToGetRolesFilterArrayOutput() GetRolesFilterArrayOutput {
	return o
}

func (o GetRolesFilterArrayOutput) ToGetRolesFilterArrayOutputWithContext(ctx context.Context) GetRolesFilterArrayOutput {
	return o
}

func (o GetRolesFilterArrayOutput) Index(i pulumi.IntInput) GetRolesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRolesFilter {
		return vs[0].([]GetRolesFilter)[vs[1].(int)]
	}).(GetRolesFilterOutput)
}

type GetUsersFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetUsersFilterInput is an input type that accepts GetUsersFilterArgs and GetUsersFilterOutput values.
// You can construct a concrete instance of `GetUsersFilterInput` via:
//
//	GetUsersFilterArgs{...}
type GetUsersFilterInput interface {
	pulumi.Input

	ToGetUsersFilterOutput() GetUsersFilterOutput
	ToGetUsersFilterOutputWithContext(context.Context) GetUsersFilterOutput
}

type GetUsersFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetUsersFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersFilter)(nil)).Elem()
}

func (i GetUsersFilterArgs) ToGetUsersFilterOutput() GetUsersFilterOutput {
	return i.ToGetUsersFilterOutputWithContext(context.Background())
}

func (i GetUsersFilterArgs) ToGetUsersFilterOutputWithContext(ctx context.Context) GetUsersFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersFilterOutput)
}

// GetUsersFilterArrayInput is an input type that accepts GetUsersFilterArray and GetUsersFilterArrayOutput values.
// You can construct a concrete instance of `GetUsersFilterArrayInput` via:
//
//	GetUsersFilterArray{ GetUsersFilterArgs{...} }
type GetUsersFilterArrayInput interface {
	pulumi.Input

	ToGetUsersFilterArrayOutput() GetUsersFilterArrayOutput
	ToGetUsersFilterArrayOutputWithContext(context.Context) GetUsersFilterArrayOutput
}

type GetUsersFilterArray []GetUsersFilterInput

func (GetUsersFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersFilter)(nil)).Elem()
}

func (i GetUsersFilterArray) ToGetUsersFilterArrayOutput() GetUsersFilterArrayOutput {
	return i.ToGetUsersFilterArrayOutputWithContext(context.Background())
}

func (i GetUsersFilterArray) ToGetUsersFilterArrayOutputWithContext(ctx context.Context) GetUsersFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersFilterArrayOutput)
}

type GetUsersFilterOutput struct{ *pulumi.OutputState }

func (GetUsersFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersFilter)(nil)).Elem()
}

func (o GetUsersFilterOutput) ToGetUsersFilterOutput() GetUsersFilterOutput {
	return o
}

func (o GetUsersFilterOutput) ToGetUsersFilterOutputWithContext(ctx context.Context) GetUsersFilterOutput {
	return o
}

func (o GetUsersFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetUsersFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUsersFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetUsersFilterArrayOutput struct{ *pulumi.OutputState }

func (GetUsersFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersFilter)(nil)).Elem()
}

func (o GetUsersFilterArrayOutput) ToGetUsersFilterArrayOutput() GetUsersFilterArrayOutput {
	return o
}

func (o GetUsersFilterArrayOutput) ToGetUsersFilterArrayOutputWithContext(ctx context.Context) GetUsersFilterArrayOutput {
	return o
}

func (o GetUsersFilterArrayOutput) Index(i pulumi.IntInput) GetUsersFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersFilter {
		return vs[0].([]GetUsersFilter)[vs[1].(int)]
	}).(GetUsersFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminsFilterInput)(nil)).Elem(), GetAdminsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminsFilterArrayInput)(nil)).Elem(), GetAdminsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppsFilterInput)(nil)).Elem(), GetAppsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppsFilterArrayInput)(nil)).Elem(), GetAppsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRolesFilterInput)(nil)).Elem(), GetRolesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRolesFilterArrayInput)(nil)).Elem(), GetRolesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersFilterInput)(nil)).Elem(), GetUsersFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersFilterArrayInput)(nil)).Elem(), GetUsersFilterArray{})
	pulumi.RegisterOutputType(GetAdminsFilterOutput{})
	pulumi.RegisterOutputType(GetAdminsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetAppsFilterOutput{})
	pulumi.RegisterOutputType(GetAppsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRolesFilterOutput{})
	pulumi.RegisterOutputType(GetRolesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetUsersFilterOutput{})
	pulumi.RegisterOutputType(GetUsersFilterArrayOutput{})
}
