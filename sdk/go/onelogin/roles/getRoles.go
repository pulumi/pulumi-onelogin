// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package roles

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-onelogin/sdk/go/onelogin/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetRoles(ctx *pulumi.Context, args *GetRolesArgs, opts ...pulumi.InvokeOption) (*GetRolesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRolesResult
	err := ctx.Invoke("onelogin:roles/getRoles:getRoles", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRoles.
type GetRolesArgs struct {
	Admins  []int            `pulumi:"admins"`
	Apps    []int            `pulumi:"apps"`
	Filters []GetRolesFilter `pulumi:"filters"`
	Name    *string          `pulumi:"name"`
	Users   []int            `pulumi:"users"`
}

// A collection of values returned by getRoles.
type GetRolesResult struct {
	Admins  []int            `pulumi:"admins"`
	Apps    []int            `pulumi:"apps"`
	Filters []GetRolesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id    string `pulumi:"id"`
	Name  string `pulumi:"name"`
	Users []int  `pulumi:"users"`
}

func GetRolesOutput(ctx *pulumi.Context, args GetRolesOutputArgs, opts ...pulumi.InvokeOption) GetRolesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetRolesResultOutput, error) {
			args := v.(GetRolesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("onelogin:roles/getRoles:getRoles", args, GetRolesResultOutput{}, options).(GetRolesResultOutput), nil
		}).(GetRolesResultOutput)
}

// A collection of arguments for invoking getRoles.
type GetRolesOutputArgs struct {
	Admins  pulumi.IntArrayInput     `pulumi:"admins"`
	Apps    pulumi.IntArrayInput     `pulumi:"apps"`
	Filters GetRolesFilterArrayInput `pulumi:"filters"`
	Name    pulumi.StringPtrInput    `pulumi:"name"`
	Users   pulumi.IntArrayInput     `pulumi:"users"`
}

func (GetRolesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRolesArgs)(nil)).Elem()
}

// A collection of values returned by getRoles.
type GetRolesResultOutput struct{ *pulumi.OutputState }

func (GetRolesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRolesResult)(nil)).Elem()
}

func (o GetRolesResultOutput) ToGetRolesResultOutput() GetRolesResultOutput {
	return o
}

func (o GetRolesResultOutput) ToGetRolesResultOutputWithContext(ctx context.Context) GetRolesResultOutput {
	return o
}

func (o GetRolesResultOutput) Admins() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetRolesResult) []int { return v.Admins }).(pulumi.IntArrayOutput)
}

func (o GetRolesResultOutput) Apps() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetRolesResult) []int { return v.Apps }).(pulumi.IntArrayOutput)
}

func (o GetRolesResultOutput) Filters() GetRolesFilterArrayOutput {
	return o.ApplyT(func(v GetRolesResult) []GetRolesFilter { return v.Filters }).(GetRolesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRolesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRolesResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolesResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRolesResultOutput) Users() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetRolesResult) []int { return v.Users }).(pulumi.IntArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRolesResultOutput{})
}
