// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package onelogin

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-onelogin/sdk/go/onelogin/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SamlApps struct {
	pulumi.CustomResourceState

	AllowAssumedSignin pulumi.BoolPtrOutput         `pulumi:"allowAssumedSignin"`
	AuthMethod         pulumi.IntOutput             `pulumi:"authMethod"`
	BrandId            pulumi.IntPtrOutput          `pulumi:"brandId"`
	Certificate        pulumi.StringMapOutput       `pulumi:"certificate"`
	Configuration      pulumi.StringMapOutput       `pulumi:"configuration"`
	ConnectorId        pulumi.IntOutput             `pulumi:"connectorId"`
	CreatedAt          pulumi.StringOutput          `pulumi:"createdAt"`
	Description        pulumi.StringPtrOutput       `pulumi:"description"`
	IconUrl            pulumi.StringOutput          `pulumi:"iconUrl"`
	Name               pulumi.StringOutput          `pulumi:"name"`
	Notes              pulumi.StringPtrOutput       `pulumi:"notes"`
	Parameters         SamlAppsParameterArrayOutput `pulumi:"parameters"`
	PolicyId           pulumi.IntOutput             `pulumi:"policyId"`
	Provisioning       pulumi.BoolMapOutput         `pulumi:"provisioning"`
	Sso                pulumi.StringMapOutput       `pulumi:"sso"`
	TabId              pulumi.IntOutput             `pulumi:"tabId"`
	UpdatedAt          pulumi.StringOutput          `pulumi:"updatedAt"`
	Visible            pulumi.BoolPtrOutput         `pulumi:"visible"`
}

// NewSamlApps registers a new resource with the given unique name, arguments, and options.
func NewSamlApps(ctx *pulumi.Context,
	name string, args *SamlAppsArgs, opts ...pulumi.ResourceOption) (*SamlApps, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConnectorId == nil {
		return nil, errors.New("invalid value for required argument 'ConnectorId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SamlApps
	err := ctx.RegisterResource("onelogin:index/samlApps:SamlApps", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSamlApps gets an existing SamlApps resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSamlApps(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SamlAppsState, opts ...pulumi.ResourceOption) (*SamlApps, error) {
	var resource SamlApps
	err := ctx.ReadResource("onelogin:index/samlApps:SamlApps", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SamlApps resources.
type samlAppsState struct {
	AllowAssumedSignin *bool               `pulumi:"allowAssumedSignin"`
	AuthMethod         *int                `pulumi:"authMethod"`
	BrandId            *int                `pulumi:"brandId"`
	Certificate        map[string]string   `pulumi:"certificate"`
	Configuration      map[string]string   `pulumi:"configuration"`
	ConnectorId        *int                `pulumi:"connectorId"`
	CreatedAt          *string             `pulumi:"createdAt"`
	Description        *string             `pulumi:"description"`
	IconUrl            *string             `pulumi:"iconUrl"`
	Name               *string             `pulumi:"name"`
	Notes              *string             `pulumi:"notes"`
	Parameters         []SamlAppsParameter `pulumi:"parameters"`
	PolicyId           *int                `pulumi:"policyId"`
	Provisioning       map[string]bool     `pulumi:"provisioning"`
	Sso                map[string]string   `pulumi:"sso"`
	TabId              *int                `pulumi:"tabId"`
	UpdatedAt          *string             `pulumi:"updatedAt"`
	Visible            *bool               `pulumi:"visible"`
}

type SamlAppsState struct {
	AllowAssumedSignin pulumi.BoolPtrInput
	AuthMethod         pulumi.IntPtrInput
	BrandId            pulumi.IntPtrInput
	Certificate        pulumi.StringMapInput
	Configuration      pulumi.StringMapInput
	ConnectorId        pulumi.IntPtrInput
	CreatedAt          pulumi.StringPtrInput
	Description        pulumi.StringPtrInput
	IconUrl            pulumi.StringPtrInput
	Name               pulumi.StringPtrInput
	Notes              pulumi.StringPtrInput
	Parameters         SamlAppsParameterArrayInput
	PolicyId           pulumi.IntPtrInput
	Provisioning       pulumi.BoolMapInput
	Sso                pulumi.StringMapInput
	TabId              pulumi.IntPtrInput
	UpdatedAt          pulumi.StringPtrInput
	Visible            pulumi.BoolPtrInput
}

func (SamlAppsState) ElementType() reflect.Type {
	return reflect.TypeOf((*samlAppsState)(nil)).Elem()
}

type samlAppsArgs struct {
	AllowAssumedSignin *bool               `pulumi:"allowAssumedSignin"`
	BrandId            *int                `pulumi:"brandId"`
	Configuration      map[string]string   `pulumi:"configuration"`
	ConnectorId        int                 `pulumi:"connectorId"`
	Description        *string             `pulumi:"description"`
	Name               *string             `pulumi:"name"`
	Notes              *string             `pulumi:"notes"`
	Parameters         []SamlAppsParameter `pulumi:"parameters"`
	Provisioning       map[string]bool     `pulumi:"provisioning"`
	Visible            *bool               `pulumi:"visible"`
}

// The set of arguments for constructing a SamlApps resource.
type SamlAppsArgs struct {
	AllowAssumedSignin pulumi.BoolPtrInput
	BrandId            pulumi.IntPtrInput
	Configuration      pulumi.StringMapInput
	ConnectorId        pulumi.IntInput
	Description        pulumi.StringPtrInput
	Name               pulumi.StringPtrInput
	Notes              pulumi.StringPtrInput
	Parameters         SamlAppsParameterArrayInput
	Provisioning       pulumi.BoolMapInput
	Visible            pulumi.BoolPtrInput
}

func (SamlAppsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*samlAppsArgs)(nil)).Elem()
}

type SamlAppsInput interface {
	pulumi.Input

	ToSamlAppsOutput() SamlAppsOutput
	ToSamlAppsOutputWithContext(ctx context.Context) SamlAppsOutput
}

func (*SamlApps) ElementType() reflect.Type {
	return reflect.TypeOf((**SamlApps)(nil)).Elem()
}

func (i *SamlApps) ToSamlAppsOutput() SamlAppsOutput {
	return i.ToSamlAppsOutputWithContext(context.Background())
}

func (i *SamlApps) ToSamlAppsOutputWithContext(ctx context.Context) SamlAppsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlAppsOutput)
}

// SamlAppsArrayInput is an input type that accepts SamlAppsArray and SamlAppsArrayOutput values.
// You can construct a concrete instance of `SamlAppsArrayInput` via:
//
//	SamlAppsArray{ SamlAppsArgs{...} }
type SamlAppsArrayInput interface {
	pulumi.Input

	ToSamlAppsArrayOutput() SamlAppsArrayOutput
	ToSamlAppsArrayOutputWithContext(context.Context) SamlAppsArrayOutput
}

type SamlAppsArray []SamlAppsInput

func (SamlAppsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SamlApps)(nil)).Elem()
}

func (i SamlAppsArray) ToSamlAppsArrayOutput() SamlAppsArrayOutput {
	return i.ToSamlAppsArrayOutputWithContext(context.Background())
}

func (i SamlAppsArray) ToSamlAppsArrayOutputWithContext(ctx context.Context) SamlAppsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlAppsArrayOutput)
}

// SamlAppsMapInput is an input type that accepts SamlAppsMap and SamlAppsMapOutput values.
// You can construct a concrete instance of `SamlAppsMapInput` via:
//
//	SamlAppsMap{ "key": SamlAppsArgs{...} }
type SamlAppsMapInput interface {
	pulumi.Input

	ToSamlAppsMapOutput() SamlAppsMapOutput
	ToSamlAppsMapOutputWithContext(context.Context) SamlAppsMapOutput
}

type SamlAppsMap map[string]SamlAppsInput

func (SamlAppsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SamlApps)(nil)).Elem()
}

func (i SamlAppsMap) ToSamlAppsMapOutput() SamlAppsMapOutput {
	return i.ToSamlAppsMapOutputWithContext(context.Background())
}

func (i SamlAppsMap) ToSamlAppsMapOutputWithContext(ctx context.Context) SamlAppsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlAppsMapOutput)
}

type SamlAppsOutput struct{ *pulumi.OutputState }

func (SamlAppsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SamlApps)(nil)).Elem()
}

func (o SamlAppsOutput) ToSamlAppsOutput() SamlAppsOutput {
	return o
}

func (o SamlAppsOutput) ToSamlAppsOutputWithContext(ctx context.Context) SamlAppsOutput {
	return o
}

func (o SamlAppsOutput) AllowAssumedSignin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SamlApps) pulumi.BoolPtrOutput { return v.AllowAssumedSignin }).(pulumi.BoolPtrOutput)
}

func (o SamlAppsOutput) AuthMethod() pulumi.IntOutput {
	return o.ApplyT(func(v *SamlApps) pulumi.IntOutput { return v.AuthMethod }).(pulumi.IntOutput)
}

func (o SamlAppsOutput) BrandId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SamlApps) pulumi.IntPtrOutput { return v.BrandId }).(pulumi.IntPtrOutput)
}

func (o SamlAppsOutput) Certificate() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SamlApps) pulumi.StringMapOutput { return v.Certificate }).(pulumi.StringMapOutput)
}

func (o SamlAppsOutput) Configuration() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SamlApps) pulumi.StringMapOutput { return v.Configuration }).(pulumi.StringMapOutput)
}

func (o SamlAppsOutput) ConnectorId() pulumi.IntOutput {
	return o.ApplyT(func(v *SamlApps) pulumi.IntOutput { return v.ConnectorId }).(pulumi.IntOutput)
}

func (o SamlAppsOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *SamlApps) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o SamlAppsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SamlApps) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SamlAppsOutput) IconUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *SamlApps) pulumi.StringOutput { return v.IconUrl }).(pulumi.StringOutput)
}

func (o SamlAppsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SamlApps) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SamlAppsOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SamlApps) pulumi.StringPtrOutput { return v.Notes }).(pulumi.StringPtrOutput)
}

func (o SamlAppsOutput) Parameters() SamlAppsParameterArrayOutput {
	return o.ApplyT(func(v *SamlApps) SamlAppsParameterArrayOutput { return v.Parameters }).(SamlAppsParameterArrayOutput)
}

func (o SamlAppsOutput) PolicyId() pulumi.IntOutput {
	return o.ApplyT(func(v *SamlApps) pulumi.IntOutput { return v.PolicyId }).(pulumi.IntOutput)
}

func (o SamlAppsOutput) Provisioning() pulumi.BoolMapOutput {
	return o.ApplyT(func(v *SamlApps) pulumi.BoolMapOutput { return v.Provisioning }).(pulumi.BoolMapOutput)
}

func (o SamlAppsOutput) Sso() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SamlApps) pulumi.StringMapOutput { return v.Sso }).(pulumi.StringMapOutput)
}

func (o SamlAppsOutput) TabId() pulumi.IntOutput {
	return o.ApplyT(func(v *SamlApps) pulumi.IntOutput { return v.TabId }).(pulumi.IntOutput)
}

func (o SamlAppsOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *SamlApps) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

func (o SamlAppsOutput) Visible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SamlApps) pulumi.BoolPtrOutput { return v.Visible }).(pulumi.BoolPtrOutput)
}

type SamlAppsArrayOutput struct{ *pulumi.OutputState }

func (SamlAppsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SamlApps)(nil)).Elem()
}

func (o SamlAppsArrayOutput) ToSamlAppsArrayOutput() SamlAppsArrayOutput {
	return o
}

func (o SamlAppsArrayOutput) ToSamlAppsArrayOutputWithContext(ctx context.Context) SamlAppsArrayOutput {
	return o
}

func (o SamlAppsArrayOutput) Index(i pulumi.IntInput) SamlAppsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SamlApps {
		return vs[0].([]*SamlApps)[vs[1].(int)]
	}).(SamlAppsOutput)
}

type SamlAppsMapOutput struct{ *pulumi.OutputState }

func (SamlAppsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SamlApps)(nil)).Elem()
}

func (o SamlAppsMapOutput) ToSamlAppsMapOutput() SamlAppsMapOutput {
	return o
}

func (o SamlAppsMapOutput) ToSamlAppsMapOutputWithContext(ctx context.Context) SamlAppsMapOutput {
	return o
}

func (o SamlAppsMapOutput) MapIndex(k pulumi.StringInput) SamlAppsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SamlApps {
		return vs[0].(map[string]*SamlApps)[vs[1].(string)]
	}).(SamlAppsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SamlAppsInput)(nil)).Elem(), &SamlApps{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlAppsArrayInput)(nil)).Elem(), SamlAppsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlAppsMapInput)(nil)).Elem(), SamlAppsMap{})
	pulumi.RegisterOutputType(SamlAppsOutput{})
	pulumi.RegisterOutputType(SamlAppsArrayOutput{})
	pulumi.RegisterOutputType(SamlAppsMapOutput{})
}
