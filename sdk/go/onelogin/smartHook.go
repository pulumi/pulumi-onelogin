// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package onelogin

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-onelogin/sdk/go/onelogin/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SmartHook struct {
	pulumi.CustomResourceState

	Conditions     SmartHookConditionArrayOutput `pulumi:"conditions"`
	ContextVersion pulumi.StringOutput           `pulumi:"contextVersion"`
	CreatedAt      pulumi.StringOutput           `pulumi:"createdAt"`
	Disabled       pulumi.BoolOutput             `pulumi:"disabled"`
	EnvVars        pulumi.StringArrayOutput      `pulumi:"envVars"`
	Function       pulumi.StringOutput           `pulumi:"function"`
	Options        SmartHookOptionArrayOutput    `pulumi:"options"`
	Packages       pulumi.StringMapOutput        `pulumi:"packages"`
	Retries        pulumi.IntOutput              `pulumi:"retries"`
	Runtime        pulumi.StringOutput           `pulumi:"runtime"`
	Status         pulumi.StringOutput           `pulumi:"status"`
	Timeout        pulumi.IntOutput              `pulumi:"timeout"`
	Type           pulumi.StringOutput           `pulumi:"type"`
	UpdatedAt      pulumi.StringOutput           `pulumi:"updatedAt"`
}

// NewSmartHook registers a new resource with the given unique name, arguments, and options.
func NewSmartHook(ctx *pulumi.Context,
	name string, args *SmartHookArgs, opts ...pulumi.ResourceOption) (*SmartHook, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Disabled == nil {
		return nil, errors.New("invalid value for required argument 'Disabled'")
	}
	if args.EnvVars == nil {
		return nil, errors.New("invalid value for required argument 'EnvVars'")
	}
	if args.Function == nil {
		return nil, errors.New("invalid value for required argument 'Function'")
	}
	if args.Packages == nil {
		return nil, errors.New("invalid value for required argument 'Packages'")
	}
	if args.Retries == nil {
		return nil, errors.New("invalid value for required argument 'Retries'")
	}
	if args.Runtime == nil {
		return nil, errors.New("invalid value for required argument 'Runtime'")
	}
	if args.Timeout == nil {
		return nil, errors.New("invalid value for required argument 'Timeout'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SmartHook
	err := ctx.RegisterResource("onelogin:index/smartHook:SmartHook", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSmartHook gets an existing SmartHook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSmartHook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SmartHookState, opts ...pulumi.ResourceOption) (*SmartHook, error) {
	var resource SmartHook
	err := ctx.ReadResource("onelogin:index/smartHook:SmartHook", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SmartHook resources.
type smartHookState struct {
	Conditions     []SmartHookCondition `pulumi:"conditions"`
	ContextVersion *string              `pulumi:"contextVersion"`
	CreatedAt      *string              `pulumi:"createdAt"`
	Disabled       *bool                `pulumi:"disabled"`
	EnvVars        []string             `pulumi:"envVars"`
	Function       *string              `pulumi:"function"`
	Options        []SmartHookOption    `pulumi:"options"`
	Packages       map[string]string    `pulumi:"packages"`
	Retries        *int                 `pulumi:"retries"`
	Runtime        *string              `pulumi:"runtime"`
	Status         *string              `pulumi:"status"`
	Timeout        *int                 `pulumi:"timeout"`
	Type           *string              `pulumi:"type"`
	UpdatedAt      *string              `pulumi:"updatedAt"`
}

type SmartHookState struct {
	Conditions     SmartHookConditionArrayInput
	ContextVersion pulumi.StringPtrInput
	CreatedAt      pulumi.StringPtrInput
	Disabled       pulumi.BoolPtrInput
	EnvVars        pulumi.StringArrayInput
	Function       pulumi.StringPtrInput
	Options        SmartHookOptionArrayInput
	Packages       pulumi.StringMapInput
	Retries        pulumi.IntPtrInput
	Runtime        pulumi.StringPtrInput
	Status         pulumi.StringPtrInput
	Timeout        pulumi.IntPtrInput
	Type           pulumi.StringPtrInput
	UpdatedAt      pulumi.StringPtrInput
}

func (SmartHookState) ElementType() reflect.Type {
	return reflect.TypeOf((*smartHookState)(nil)).Elem()
}

type smartHookArgs struct {
	Conditions     []SmartHookCondition `pulumi:"conditions"`
	ContextVersion *string              `pulumi:"contextVersion"`
	Disabled       bool                 `pulumi:"disabled"`
	EnvVars        []string             `pulumi:"envVars"`
	Function       string               `pulumi:"function"`
	Options        []SmartHookOption    `pulumi:"options"`
	Packages       map[string]string    `pulumi:"packages"`
	Retries        int                  `pulumi:"retries"`
	Runtime        string               `pulumi:"runtime"`
	Timeout        int                  `pulumi:"timeout"`
	Type           string               `pulumi:"type"`
}

// The set of arguments for constructing a SmartHook resource.
type SmartHookArgs struct {
	Conditions     SmartHookConditionArrayInput
	ContextVersion pulumi.StringPtrInput
	Disabled       pulumi.BoolInput
	EnvVars        pulumi.StringArrayInput
	Function       pulumi.StringInput
	Options        SmartHookOptionArrayInput
	Packages       pulumi.StringMapInput
	Retries        pulumi.IntInput
	Runtime        pulumi.StringInput
	Timeout        pulumi.IntInput
	Type           pulumi.StringInput
}

func (SmartHookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*smartHookArgs)(nil)).Elem()
}

type SmartHookInput interface {
	pulumi.Input

	ToSmartHookOutput() SmartHookOutput
	ToSmartHookOutputWithContext(ctx context.Context) SmartHookOutput
}

func (*SmartHook) ElementType() reflect.Type {
	return reflect.TypeOf((**SmartHook)(nil)).Elem()
}

func (i *SmartHook) ToSmartHookOutput() SmartHookOutput {
	return i.ToSmartHookOutputWithContext(context.Background())
}

func (i *SmartHook) ToSmartHookOutputWithContext(ctx context.Context) SmartHookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmartHookOutput)
}

// SmartHookArrayInput is an input type that accepts SmartHookArray and SmartHookArrayOutput values.
// You can construct a concrete instance of `SmartHookArrayInput` via:
//
//	SmartHookArray{ SmartHookArgs{...} }
type SmartHookArrayInput interface {
	pulumi.Input

	ToSmartHookArrayOutput() SmartHookArrayOutput
	ToSmartHookArrayOutputWithContext(context.Context) SmartHookArrayOutput
}

type SmartHookArray []SmartHookInput

func (SmartHookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SmartHook)(nil)).Elem()
}

func (i SmartHookArray) ToSmartHookArrayOutput() SmartHookArrayOutput {
	return i.ToSmartHookArrayOutputWithContext(context.Background())
}

func (i SmartHookArray) ToSmartHookArrayOutputWithContext(ctx context.Context) SmartHookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmartHookArrayOutput)
}

// SmartHookMapInput is an input type that accepts SmartHookMap and SmartHookMapOutput values.
// You can construct a concrete instance of `SmartHookMapInput` via:
//
//	SmartHookMap{ "key": SmartHookArgs{...} }
type SmartHookMapInput interface {
	pulumi.Input

	ToSmartHookMapOutput() SmartHookMapOutput
	ToSmartHookMapOutputWithContext(context.Context) SmartHookMapOutput
}

type SmartHookMap map[string]SmartHookInput

func (SmartHookMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SmartHook)(nil)).Elem()
}

func (i SmartHookMap) ToSmartHookMapOutput() SmartHookMapOutput {
	return i.ToSmartHookMapOutputWithContext(context.Background())
}

func (i SmartHookMap) ToSmartHookMapOutputWithContext(ctx context.Context) SmartHookMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmartHookMapOutput)
}

type SmartHookOutput struct{ *pulumi.OutputState }

func (SmartHookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SmartHook)(nil)).Elem()
}

func (o SmartHookOutput) ToSmartHookOutput() SmartHookOutput {
	return o
}

func (o SmartHookOutput) ToSmartHookOutputWithContext(ctx context.Context) SmartHookOutput {
	return o
}

func (o SmartHookOutput) Conditions() SmartHookConditionArrayOutput {
	return o.ApplyT(func(v *SmartHook) SmartHookConditionArrayOutput { return v.Conditions }).(SmartHookConditionArrayOutput)
}

func (o SmartHookOutput) ContextVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *SmartHook) pulumi.StringOutput { return v.ContextVersion }).(pulumi.StringOutput)
}

func (o SmartHookOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *SmartHook) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o SmartHookOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *SmartHook) pulumi.BoolOutput { return v.Disabled }).(pulumi.BoolOutput)
}

func (o SmartHookOutput) EnvVars() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SmartHook) pulumi.StringArrayOutput { return v.EnvVars }).(pulumi.StringArrayOutput)
}

func (o SmartHookOutput) Function() pulumi.StringOutput {
	return o.ApplyT(func(v *SmartHook) pulumi.StringOutput { return v.Function }).(pulumi.StringOutput)
}

func (o SmartHookOutput) Options() SmartHookOptionArrayOutput {
	return o.ApplyT(func(v *SmartHook) SmartHookOptionArrayOutput { return v.Options }).(SmartHookOptionArrayOutput)
}

func (o SmartHookOutput) Packages() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SmartHook) pulumi.StringMapOutput { return v.Packages }).(pulumi.StringMapOutput)
}

func (o SmartHookOutput) Retries() pulumi.IntOutput {
	return o.ApplyT(func(v *SmartHook) pulumi.IntOutput { return v.Retries }).(pulumi.IntOutput)
}

func (o SmartHookOutput) Runtime() pulumi.StringOutput {
	return o.ApplyT(func(v *SmartHook) pulumi.StringOutput { return v.Runtime }).(pulumi.StringOutput)
}

func (o SmartHookOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SmartHook) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o SmartHookOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v *SmartHook) pulumi.IntOutput { return v.Timeout }).(pulumi.IntOutput)
}

func (o SmartHookOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *SmartHook) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func (o SmartHookOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *SmartHook) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type SmartHookArrayOutput struct{ *pulumi.OutputState }

func (SmartHookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SmartHook)(nil)).Elem()
}

func (o SmartHookArrayOutput) ToSmartHookArrayOutput() SmartHookArrayOutput {
	return o
}

func (o SmartHookArrayOutput) ToSmartHookArrayOutputWithContext(ctx context.Context) SmartHookArrayOutput {
	return o
}

func (o SmartHookArrayOutput) Index(i pulumi.IntInput) SmartHookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SmartHook {
		return vs[0].([]*SmartHook)[vs[1].(int)]
	}).(SmartHookOutput)
}

type SmartHookMapOutput struct{ *pulumi.OutputState }

func (SmartHookMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SmartHook)(nil)).Elem()
}

func (o SmartHookMapOutput) ToSmartHookMapOutput() SmartHookMapOutput {
	return o
}

func (o SmartHookMapOutput) ToSmartHookMapOutputWithContext(ctx context.Context) SmartHookMapOutput {
	return o
}

func (o SmartHookMapOutput) MapIndex(k pulumi.StringInput) SmartHookOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SmartHook {
		return vs[0].(map[string]*SmartHook)[vs[1].(string)]
	}).(SmartHookOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SmartHookInput)(nil)).Elem(), &SmartHook{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmartHookArrayInput)(nil)).Elem(), SmartHookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmartHookMapInput)(nil)).Elem(), SmartHookMap{})
	pulumi.RegisterOutputType(SmartHookOutput{})
	pulumi.RegisterOutputType(SmartHookArrayOutput{})
	pulumi.RegisterOutputType(SmartHookMapOutput{})
}
