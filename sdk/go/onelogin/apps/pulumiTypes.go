// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apps

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetActionsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetActionsFilterInput is an input type that accepts GetActionsFilterArgs and GetActionsFilterOutput values.
// You can construct a concrete instance of `GetActionsFilterInput` via:
//
//	GetActionsFilterArgs{...}
type GetActionsFilterInput interface {
	pulumi.Input

	ToGetActionsFilterOutput() GetActionsFilterOutput
	ToGetActionsFilterOutputWithContext(context.Context) GetActionsFilterOutput
}

type GetActionsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetActionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionsFilter)(nil)).Elem()
}

func (i GetActionsFilterArgs) ToGetActionsFilterOutput() GetActionsFilterOutput {
	return i.ToGetActionsFilterOutputWithContext(context.Background())
}

func (i GetActionsFilterArgs) ToGetActionsFilterOutputWithContext(ctx context.Context) GetActionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionsFilterOutput)
}

// GetActionsFilterArrayInput is an input type that accepts GetActionsFilterArray and GetActionsFilterArrayOutput values.
// You can construct a concrete instance of `GetActionsFilterArrayInput` via:
//
//	GetActionsFilterArray{ GetActionsFilterArgs{...} }
type GetActionsFilterArrayInput interface {
	pulumi.Input

	ToGetActionsFilterArrayOutput() GetActionsFilterArrayOutput
	ToGetActionsFilterArrayOutputWithContext(context.Context) GetActionsFilterArrayOutput
}

type GetActionsFilterArray []GetActionsFilterInput

func (GetActionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetActionsFilter)(nil)).Elem()
}

func (i GetActionsFilterArray) ToGetActionsFilterArrayOutput() GetActionsFilterArrayOutput {
	return i.ToGetActionsFilterArrayOutputWithContext(context.Background())
}

func (i GetActionsFilterArray) ToGetActionsFilterArrayOutputWithContext(ctx context.Context) GetActionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionsFilterArrayOutput)
}

type GetActionsFilterOutput struct{ *pulumi.OutputState }

func (GetActionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionsFilter)(nil)).Elem()
}

func (o GetActionsFilterOutput) ToGetActionsFilterOutput() GetActionsFilterOutput {
	return o
}

func (o GetActionsFilterOutput) ToGetActionsFilterOutputWithContext(ctx context.Context) GetActionsFilterOutput {
	return o
}

func (o GetActionsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetActionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetActionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetActionsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetActionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetActionsFilter)(nil)).Elem()
}

func (o GetActionsFilterArrayOutput) ToGetActionsFilterArrayOutput() GetActionsFilterArrayOutput {
	return o
}

func (o GetActionsFilterArrayOutput) ToGetActionsFilterArrayOutputWithContext(ctx context.Context) GetActionsFilterArrayOutput {
	return o
}

func (o GetActionsFilterArrayOutput) Index(i pulumi.IntInput) GetActionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetActionsFilter {
		return vs[0].([]GetActionsFilter)[vs[1].(int)]
	}).(GetActionsFilterOutput)
}

type GetActionsValuesFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetActionsValuesFilterInput is an input type that accepts GetActionsValuesFilterArgs and GetActionsValuesFilterOutput values.
// You can construct a concrete instance of `GetActionsValuesFilterInput` via:
//
//	GetActionsValuesFilterArgs{...}
type GetActionsValuesFilterInput interface {
	pulumi.Input

	ToGetActionsValuesFilterOutput() GetActionsValuesFilterOutput
	ToGetActionsValuesFilterOutputWithContext(context.Context) GetActionsValuesFilterOutput
}

type GetActionsValuesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetActionsValuesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionsValuesFilter)(nil)).Elem()
}

func (i GetActionsValuesFilterArgs) ToGetActionsValuesFilterOutput() GetActionsValuesFilterOutput {
	return i.ToGetActionsValuesFilterOutputWithContext(context.Background())
}

func (i GetActionsValuesFilterArgs) ToGetActionsValuesFilterOutputWithContext(ctx context.Context) GetActionsValuesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionsValuesFilterOutput)
}

// GetActionsValuesFilterArrayInput is an input type that accepts GetActionsValuesFilterArray and GetActionsValuesFilterArrayOutput values.
// You can construct a concrete instance of `GetActionsValuesFilterArrayInput` via:
//
//	GetActionsValuesFilterArray{ GetActionsValuesFilterArgs{...} }
type GetActionsValuesFilterArrayInput interface {
	pulumi.Input

	ToGetActionsValuesFilterArrayOutput() GetActionsValuesFilterArrayOutput
	ToGetActionsValuesFilterArrayOutputWithContext(context.Context) GetActionsValuesFilterArrayOutput
}

type GetActionsValuesFilterArray []GetActionsValuesFilterInput

func (GetActionsValuesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetActionsValuesFilter)(nil)).Elem()
}

func (i GetActionsValuesFilterArray) ToGetActionsValuesFilterArrayOutput() GetActionsValuesFilterArrayOutput {
	return i.ToGetActionsValuesFilterArrayOutputWithContext(context.Background())
}

func (i GetActionsValuesFilterArray) ToGetActionsValuesFilterArrayOutputWithContext(ctx context.Context) GetActionsValuesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionsValuesFilterArrayOutput)
}

type GetActionsValuesFilterOutput struct{ *pulumi.OutputState }

func (GetActionsValuesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionsValuesFilter)(nil)).Elem()
}

func (o GetActionsValuesFilterOutput) ToGetActionsValuesFilterOutput() GetActionsValuesFilterOutput {
	return o
}

func (o GetActionsValuesFilterOutput) ToGetActionsValuesFilterOutputWithContext(ctx context.Context) GetActionsValuesFilterOutput {
	return o
}

func (o GetActionsValuesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionsValuesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetActionsValuesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetActionsValuesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetActionsValuesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetActionsValuesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetActionsValuesFilter)(nil)).Elem()
}

func (o GetActionsValuesFilterArrayOutput) ToGetActionsValuesFilterArrayOutput() GetActionsValuesFilterArrayOutput {
	return o
}

func (o GetActionsValuesFilterArrayOutput) ToGetActionsValuesFilterArrayOutputWithContext(ctx context.Context) GetActionsValuesFilterArrayOutput {
	return o
}

func (o GetActionsValuesFilterArrayOutput) Index(i pulumi.IntInput) GetActionsValuesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetActionsValuesFilter {
		return vs[0].([]GetActionsValuesFilter)[vs[1].(int)]
	}).(GetActionsValuesFilterOutput)
}

type GetConditionsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetConditionsFilterInput is an input type that accepts GetConditionsFilterArgs and GetConditionsFilterOutput values.
// You can construct a concrete instance of `GetConditionsFilterInput` via:
//
//	GetConditionsFilterArgs{...}
type GetConditionsFilterInput interface {
	pulumi.Input

	ToGetConditionsFilterOutput() GetConditionsFilterOutput
	ToGetConditionsFilterOutputWithContext(context.Context) GetConditionsFilterOutput
}

type GetConditionsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetConditionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConditionsFilter)(nil)).Elem()
}

func (i GetConditionsFilterArgs) ToGetConditionsFilterOutput() GetConditionsFilterOutput {
	return i.ToGetConditionsFilterOutputWithContext(context.Background())
}

func (i GetConditionsFilterArgs) ToGetConditionsFilterOutputWithContext(ctx context.Context) GetConditionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConditionsFilterOutput)
}

// GetConditionsFilterArrayInput is an input type that accepts GetConditionsFilterArray and GetConditionsFilterArrayOutput values.
// You can construct a concrete instance of `GetConditionsFilterArrayInput` via:
//
//	GetConditionsFilterArray{ GetConditionsFilterArgs{...} }
type GetConditionsFilterArrayInput interface {
	pulumi.Input

	ToGetConditionsFilterArrayOutput() GetConditionsFilterArrayOutput
	ToGetConditionsFilterArrayOutputWithContext(context.Context) GetConditionsFilterArrayOutput
}

type GetConditionsFilterArray []GetConditionsFilterInput

func (GetConditionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConditionsFilter)(nil)).Elem()
}

func (i GetConditionsFilterArray) ToGetConditionsFilterArrayOutput() GetConditionsFilterArrayOutput {
	return i.ToGetConditionsFilterArrayOutputWithContext(context.Background())
}

func (i GetConditionsFilterArray) ToGetConditionsFilterArrayOutputWithContext(ctx context.Context) GetConditionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConditionsFilterArrayOutput)
}

type GetConditionsFilterOutput struct{ *pulumi.OutputState }

func (GetConditionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConditionsFilter)(nil)).Elem()
}

func (o GetConditionsFilterOutput) ToGetConditionsFilterOutput() GetConditionsFilterOutput {
	return o
}

func (o GetConditionsFilterOutput) ToGetConditionsFilterOutputWithContext(ctx context.Context) GetConditionsFilterOutput {
	return o
}

func (o GetConditionsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConditionsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetConditionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConditionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetConditionsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetConditionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConditionsFilter)(nil)).Elem()
}

func (o GetConditionsFilterArrayOutput) ToGetConditionsFilterArrayOutput() GetConditionsFilterArrayOutput {
	return o
}

func (o GetConditionsFilterArrayOutput) ToGetConditionsFilterArrayOutputWithContext(ctx context.Context) GetConditionsFilterArrayOutput {
	return o
}

func (o GetConditionsFilterArrayOutput) Index(i pulumi.IntInput) GetConditionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConditionsFilter {
		return vs[0].([]GetConditionsFilter)[vs[1].(int)]
	}).(GetConditionsFilterOutput)
}

type GetConditionsOperatorsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetConditionsOperatorsFilterInput is an input type that accepts GetConditionsOperatorsFilterArgs and GetConditionsOperatorsFilterOutput values.
// You can construct a concrete instance of `GetConditionsOperatorsFilterInput` via:
//
//	GetConditionsOperatorsFilterArgs{...}
type GetConditionsOperatorsFilterInput interface {
	pulumi.Input

	ToGetConditionsOperatorsFilterOutput() GetConditionsOperatorsFilterOutput
	ToGetConditionsOperatorsFilterOutputWithContext(context.Context) GetConditionsOperatorsFilterOutput
}

type GetConditionsOperatorsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetConditionsOperatorsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConditionsOperatorsFilter)(nil)).Elem()
}

func (i GetConditionsOperatorsFilterArgs) ToGetConditionsOperatorsFilterOutput() GetConditionsOperatorsFilterOutput {
	return i.ToGetConditionsOperatorsFilterOutputWithContext(context.Background())
}

func (i GetConditionsOperatorsFilterArgs) ToGetConditionsOperatorsFilterOutputWithContext(ctx context.Context) GetConditionsOperatorsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConditionsOperatorsFilterOutput)
}

// GetConditionsOperatorsFilterArrayInput is an input type that accepts GetConditionsOperatorsFilterArray and GetConditionsOperatorsFilterArrayOutput values.
// You can construct a concrete instance of `GetConditionsOperatorsFilterArrayInput` via:
//
//	GetConditionsOperatorsFilterArray{ GetConditionsOperatorsFilterArgs{...} }
type GetConditionsOperatorsFilterArrayInput interface {
	pulumi.Input

	ToGetConditionsOperatorsFilterArrayOutput() GetConditionsOperatorsFilterArrayOutput
	ToGetConditionsOperatorsFilterArrayOutputWithContext(context.Context) GetConditionsOperatorsFilterArrayOutput
}

type GetConditionsOperatorsFilterArray []GetConditionsOperatorsFilterInput

func (GetConditionsOperatorsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConditionsOperatorsFilter)(nil)).Elem()
}

func (i GetConditionsOperatorsFilterArray) ToGetConditionsOperatorsFilterArrayOutput() GetConditionsOperatorsFilterArrayOutput {
	return i.ToGetConditionsOperatorsFilterArrayOutputWithContext(context.Background())
}

func (i GetConditionsOperatorsFilterArray) ToGetConditionsOperatorsFilterArrayOutputWithContext(ctx context.Context) GetConditionsOperatorsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConditionsOperatorsFilterArrayOutput)
}

type GetConditionsOperatorsFilterOutput struct{ *pulumi.OutputState }

func (GetConditionsOperatorsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConditionsOperatorsFilter)(nil)).Elem()
}

func (o GetConditionsOperatorsFilterOutput) ToGetConditionsOperatorsFilterOutput() GetConditionsOperatorsFilterOutput {
	return o
}

func (o GetConditionsOperatorsFilterOutput) ToGetConditionsOperatorsFilterOutputWithContext(ctx context.Context) GetConditionsOperatorsFilterOutput {
	return o
}

func (o GetConditionsOperatorsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConditionsOperatorsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetConditionsOperatorsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConditionsOperatorsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetConditionsOperatorsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetConditionsOperatorsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConditionsOperatorsFilter)(nil)).Elem()
}

func (o GetConditionsOperatorsFilterArrayOutput) ToGetConditionsOperatorsFilterArrayOutput() GetConditionsOperatorsFilterArrayOutput {
	return o
}

func (o GetConditionsOperatorsFilterArrayOutput) ToGetConditionsOperatorsFilterArrayOutputWithContext(ctx context.Context) GetConditionsOperatorsFilterArrayOutput {
	return o
}

func (o GetConditionsOperatorsFilterArrayOutput) Index(i pulumi.IntInput) GetConditionsOperatorsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConditionsOperatorsFilter {
		return vs[0].([]GetConditionsOperatorsFilter)[vs[1].(int)]
	}).(GetConditionsOperatorsFilterOutput)
}

type GetConditionsValuesFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetConditionsValuesFilterInput is an input type that accepts GetConditionsValuesFilterArgs and GetConditionsValuesFilterOutput values.
// You can construct a concrete instance of `GetConditionsValuesFilterInput` via:
//
//	GetConditionsValuesFilterArgs{...}
type GetConditionsValuesFilterInput interface {
	pulumi.Input

	ToGetConditionsValuesFilterOutput() GetConditionsValuesFilterOutput
	ToGetConditionsValuesFilterOutputWithContext(context.Context) GetConditionsValuesFilterOutput
}

type GetConditionsValuesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetConditionsValuesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConditionsValuesFilter)(nil)).Elem()
}

func (i GetConditionsValuesFilterArgs) ToGetConditionsValuesFilterOutput() GetConditionsValuesFilterOutput {
	return i.ToGetConditionsValuesFilterOutputWithContext(context.Background())
}

func (i GetConditionsValuesFilterArgs) ToGetConditionsValuesFilterOutputWithContext(ctx context.Context) GetConditionsValuesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConditionsValuesFilterOutput)
}

// GetConditionsValuesFilterArrayInput is an input type that accepts GetConditionsValuesFilterArray and GetConditionsValuesFilterArrayOutput values.
// You can construct a concrete instance of `GetConditionsValuesFilterArrayInput` via:
//
//	GetConditionsValuesFilterArray{ GetConditionsValuesFilterArgs{...} }
type GetConditionsValuesFilterArrayInput interface {
	pulumi.Input

	ToGetConditionsValuesFilterArrayOutput() GetConditionsValuesFilterArrayOutput
	ToGetConditionsValuesFilterArrayOutputWithContext(context.Context) GetConditionsValuesFilterArrayOutput
}

type GetConditionsValuesFilterArray []GetConditionsValuesFilterInput

func (GetConditionsValuesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConditionsValuesFilter)(nil)).Elem()
}

func (i GetConditionsValuesFilterArray) ToGetConditionsValuesFilterArrayOutput() GetConditionsValuesFilterArrayOutput {
	return i.ToGetConditionsValuesFilterArrayOutputWithContext(context.Background())
}

func (i GetConditionsValuesFilterArray) ToGetConditionsValuesFilterArrayOutputWithContext(ctx context.Context) GetConditionsValuesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConditionsValuesFilterArrayOutput)
}

type GetConditionsValuesFilterOutput struct{ *pulumi.OutputState }

func (GetConditionsValuesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConditionsValuesFilter)(nil)).Elem()
}

func (o GetConditionsValuesFilterOutput) ToGetConditionsValuesFilterOutput() GetConditionsValuesFilterOutput {
	return o
}

func (o GetConditionsValuesFilterOutput) ToGetConditionsValuesFilterOutputWithContext(ctx context.Context) GetConditionsValuesFilterOutput {
	return o
}

func (o GetConditionsValuesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConditionsValuesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetConditionsValuesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConditionsValuesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetConditionsValuesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetConditionsValuesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConditionsValuesFilter)(nil)).Elem()
}

func (o GetConditionsValuesFilterArrayOutput) ToGetConditionsValuesFilterArrayOutput() GetConditionsValuesFilterArrayOutput {
	return o
}

func (o GetConditionsValuesFilterArrayOutput) ToGetConditionsValuesFilterArrayOutputWithContext(ctx context.Context) GetConditionsValuesFilterArrayOutput {
	return o
}

func (o GetConditionsValuesFilterArrayOutput) Index(i pulumi.IntInput) GetConditionsValuesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConditionsValuesFilter {
		return vs[0].([]GetConditionsValuesFilter)[vs[1].(int)]
	}).(GetConditionsValuesFilterOutput)
}

type GetInstanceEnforcementPoint struct {
	CaseSensitive                 bool                                               `pulumi:"caseSensitive"`
	Conditions                    string                                             `pulumi:"conditions"`
	ContextRoot                   string                                             `pulumi:"contextRoot"`
	LandingPage                   string                                             `pulumi:"landingPage"`
	Permissions                   string                                             `pulumi:"permissions"`
	RequireSitewideAuthentication bool                                               `pulumi:"requireSitewideAuthentication"`
	Resources                     []GetInstanceEnforcementPointResource              `pulumi:"resources"`
	SessionExpiryFixed            GetInstanceEnforcementPointSessionExpiryFixed      `pulumi:"sessionExpiryFixed"`
	SessionExpiryInactivity       GetInstanceEnforcementPointSessionExpiryInactivity `pulumi:"sessionExpiryInactivity"`
	Target                        string                                             `pulumi:"target"`
	Token                         string                                             `pulumi:"token"`
	UseTargetHostHeader           bool                                               `pulumi:"useTargetHostHeader"`
	Vhost                         string                                             `pulumi:"vhost"`
}

// GetInstanceEnforcementPointInput is an input type that accepts GetInstanceEnforcementPointArgs and GetInstanceEnforcementPointOutput values.
// You can construct a concrete instance of `GetInstanceEnforcementPointInput` via:
//
//	GetInstanceEnforcementPointArgs{...}
type GetInstanceEnforcementPointInput interface {
	pulumi.Input

	ToGetInstanceEnforcementPointOutput() GetInstanceEnforcementPointOutput
	ToGetInstanceEnforcementPointOutputWithContext(context.Context) GetInstanceEnforcementPointOutput
}

type GetInstanceEnforcementPointArgs struct {
	CaseSensitive                 pulumi.BoolInput                                        `pulumi:"caseSensitive"`
	Conditions                    pulumi.StringInput                                      `pulumi:"conditions"`
	ContextRoot                   pulumi.StringInput                                      `pulumi:"contextRoot"`
	LandingPage                   pulumi.StringInput                                      `pulumi:"landingPage"`
	Permissions                   pulumi.StringInput                                      `pulumi:"permissions"`
	RequireSitewideAuthentication pulumi.BoolInput                                        `pulumi:"requireSitewideAuthentication"`
	Resources                     GetInstanceEnforcementPointResourceArrayInput           `pulumi:"resources"`
	SessionExpiryFixed            GetInstanceEnforcementPointSessionExpiryFixedInput      `pulumi:"sessionExpiryFixed"`
	SessionExpiryInactivity       GetInstanceEnforcementPointSessionExpiryInactivityInput `pulumi:"sessionExpiryInactivity"`
	Target                        pulumi.StringInput                                      `pulumi:"target"`
	Token                         pulumi.StringInput                                      `pulumi:"token"`
	UseTargetHostHeader           pulumi.BoolInput                                        `pulumi:"useTargetHostHeader"`
	Vhost                         pulumi.StringInput                                      `pulumi:"vhost"`
}

func (GetInstanceEnforcementPointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEnforcementPoint)(nil)).Elem()
}

func (i GetInstanceEnforcementPointArgs) ToGetInstanceEnforcementPointOutput() GetInstanceEnforcementPointOutput {
	return i.ToGetInstanceEnforcementPointOutputWithContext(context.Background())
}

func (i GetInstanceEnforcementPointArgs) ToGetInstanceEnforcementPointOutputWithContext(ctx context.Context) GetInstanceEnforcementPointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEnforcementPointOutput)
}

func (i GetInstanceEnforcementPointArgs) ToGetInstanceEnforcementPointPtrOutput() GetInstanceEnforcementPointPtrOutput {
	return i.ToGetInstanceEnforcementPointPtrOutputWithContext(context.Background())
}

func (i GetInstanceEnforcementPointArgs) ToGetInstanceEnforcementPointPtrOutputWithContext(ctx context.Context) GetInstanceEnforcementPointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEnforcementPointOutput).ToGetInstanceEnforcementPointPtrOutputWithContext(ctx)
}

// GetInstanceEnforcementPointPtrInput is an input type that accepts GetInstanceEnforcementPointArgs, GetInstanceEnforcementPointPtr and GetInstanceEnforcementPointPtrOutput values.
// You can construct a concrete instance of `GetInstanceEnforcementPointPtrInput` via:
//
//	        GetInstanceEnforcementPointArgs{...}
//
//	or:
//
//	        nil
type GetInstanceEnforcementPointPtrInput interface {
	pulumi.Input

	ToGetInstanceEnforcementPointPtrOutput() GetInstanceEnforcementPointPtrOutput
	ToGetInstanceEnforcementPointPtrOutputWithContext(context.Context) GetInstanceEnforcementPointPtrOutput
}

type getInstanceEnforcementPointPtrType GetInstanceEnforcementPointArgs

func GetInstanceEnforcementPointPtr(v *GetInstanceEnforcementPointArgs) GetInstanceEnforcementPointPtrInput {
	return (*getInstanceEnforcementPointPtrType)(v)
}

func (*getInstanceEnforcementPointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceEnforcementPoint)(nil)).Elem()
}

func (i *getInstanceEnforcementPointPtrType) ToGetInstanceEnforcementPointPtrOutput() GetInstanceEnforcementPointPtrOutput {
	return i.ToGetInstanceEnforcementPointPtrOutputWithContext(context.Background())
}

func (i *getInstanceEnforcementPointPtrType) ToGetInstanceEnforcementPointPtrOutputWithContext(ctx context.Context) GetInstanceEnforcementPointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEnforcementPointPtrOutput)
}

type GetInstanceEnforcementPointOutput struct{ *pulumi.OutputState }

func (GetInstanceEnforcementPointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEnforcementPoint)(nil)).Elem()
}

func (o GetInstanceEnforcementPointOutput) ToGetInstanceEnforcementPointOutput() GetInstanceEnforcementPointOutput {
	return o
}

func (o GetInstanceEnforcementPointOutput) ToGetInstanceEnforcementPointOutputWithContext(ctx context.Context) GetInstanceEnforcementPointOutput {
	return o
}

func (o GetInstanceEnforcementPointOutput) ToGetInstanceEnforcementPointPtrOutput() GetInstanceEnforcementPointPtrOutput {
	return o.ToGetInstanceEnforcementPointPtrOutputWithContext(context.Background())
}

func (o GetInstanceEnforcementPointOutput) ToGetInstanceEnforcementPointPtrOutputWithContext(ctx context.Context) GetInstanceEnforcementPointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetInstanceEnforcementPoint) *GetInstanceEnforcementPoint {
		return &v
	}).(GetInstanceEnforcementPointPtrOutput)
}

func (o GetInstanceEnforcementPointOutput) CaseSensitive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPoint) bool { return v.CaseSensitive }).(pulumi.BoolOutput)
}

func (o GetInstanceEnforcementPointOutput) Conditions() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPoint) string { return v.Conditions }).(pulumi.StringOutput)
}

func (o GetInstanceEnforcementPointOutput) ContextRoot() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPoint) string { return v.ContextRoot }).(pulumi.StringOutput)
}

func (o GetInstanceEnforcementPointOutput) LandingPage() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPoint) string { return v.LandingPage }).(pulumi.StringOutput)
}

func (o GetInstanceEnforcementPointOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPoint) string { return v.Permissions }).(pulumi.StringOutput)
}

func (o GetInstanceEnforcementPointOutput) RequireSitewideAuthentication() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPoint) bool { return v.RequireSitewideAuthentication }).(pulumi.BoolOutput)
}

func (o GetInstanceEnforcementPointOutput) Resources() GetInstanceEnforcementPointResourceArrayOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPoint) []GetInstanceEnforcementPointResource { return v.Resources }).(GetInstanceEnforcementPointResourceArrayOutput)
}

func (o GetInstanceEnforcementPointOutput) SessionExpiryFixed() GetInstanceEnforcementPointSessionExpiryFixedOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPoint) GetInstanceEnforcementPointSessionExpiryFixed {
		return v.SessionExpiryFixed
	}).(GetInstanceEnforcementPointSessionExpiryFixedOutput)
}

func (o GetInstanceEnforcementPointOutput) SessionExpiryInactivity() GetInstanceEnforcementPointSessionExpiryInactivityOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPoint) GetInstanceEnforcementPointSessionExpiryInactivity {
		return v.SessionExpiryInactivity
	}).(GetInstanceEnforcementPointSessionExpiryInactivityOutput)
}

func (o GetInstanceEnforcementPointOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPoint) string { return v.Target }).(pulumi.StringOutput)
}

func (o GetInstanceEnforcementPointOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPoint) string { return v.Token }).(pulumi.StringOutput)
}

func (o GetInstanceEnforcementPointOutput) UseTargetHostHeader() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPoint) bool { return v.UseTargetHostHeader }).(pulumi.BoolOutput)
}

func (o GetInstanceEnforcementPointOutput) Vhost() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPoint) string { return v.Vhost }).(pulumi.StringOutput)
}

type GetInstanceEnforcementPointPtrOutput struct{ *pulumi.OutputState }

func (GetInstanceEnforcementPointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceEnforcementPoint)(nil)).Elem()
}

func (o GetInstanceEnforcementPointPtrOutput) ToGetInstanceEnforcementPointPtrOutput() GetInstanceEnforcementPointPtrOutput {
	return o
}

func (o GetInstanceEnforcementPointPtrOutput) ToGetInstanceEnforcementPointPtrOutputWithContext(ctx context.Context) GetInstanceEnforcementPointPtrOutput {
	return o
}

func (o GetInstanceEnforcementPointPtrOutput) Elem() GetInstanceEnforcementPointOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPoint) GetInstanceEnforcementPoint {
		if v != nil {
			return *v
		}
		var ret GetInstanceEnforcementPoint
		return ret
	}).(GetInstanceEnforcementPointOutput)
}

func (o GetInstanceEnforcementPointPtrOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPoint) *bool {
		if v == nil {
			return nil
		}
		return &v.CaseSensitive
	}).(pulumi.BoolPtrOutput)
}

func (o GetInstanceEnforcementPointPtrOutput) Conditions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPoint) *string {
		if v == nil {
			return nil
		}
		return &v.Conditions
	}).(pulumi.StringPtrOutput)
}

func (o GetInstanceEnforcementPointPtrOutput) ContextRoot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPoint) *string {
		if v == nil {
			return nil
		}
		return &v.ContextRoot
	}).(pulumi.StringPtrOutput)
}

func (o GetInstanceEnforcementPointPtrOutput) LandingPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPoint) *string {
		if v == nil {
			return nil
		}
		return &v.LandingPage
	}).(pulumi.StringPtrOutput)
}

func (o GetInstanceEnforcementPointPtrOutput) Permissions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPoint) *string {
		if v == nil {
			return nil
		}
		return &v.Permissions
	}).(pulumi.StringPtrOutput)
}

func (o GetInstanceEnforcementPointPtrOutput) RequireSitewideAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPoint) *bool {
		if v == nil {
			return nil
		}
		return &v.RequireSitewideAuthentication
	}).(pulumi.BoolPtrOutput)
}

func (o GetInstanceEnforcementPointPtrOutput) Resources() GetInstanceEnforcementPointResourceArrayOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPoint) []GetInstanceEnforcementPointResource {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(GetInstanceEnforcementPointResourceArrayOutput)
}

func (o GetInstanceEnforcementPointPtrOutput) SessionExpiryFixed() GetInstanceEnforcementPointSessionExpiryFixedPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPoint) *GetInstanceEnforcementPointSessionExpiryFixed {
		if v == nil {
			return nil
		}
		return &v.SessionExpiryFixed
	}).(GetInstanceEnforcementPointSessionExpiryFixedPtrOutput)
}

func (o GetInstanceEnforcementPointPtrOutput) SessionExpiryInactivity() GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPoint) *GetInstanceEnforcementPointSessionExpiryInactivity {
		if v == nil {
			return nil
		}
		return &v.SessionExpiryInactivity
	}).(GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput)
}

func (o GetInstanceEnforcementPointPtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPoint) *string {
		if v == nil {
			return nil
		}
		return &v.Target
	}).(pulumi.StringPtrOutput)
}

func (o GetInstanceEnforcementPointPtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPoint) *string {
		if v == nil {
			return nil
		}
		return &v.Token
	}).(pulumi.StringPtrOutput)
}

func (o GetInstanceEnforcementPointPtrOutput) UseTargetHostHeader() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPoint) *bool {
		if v == nil {
			return nil
		}
		return &v.UseTargetHostHeader
	}).(pulumi.BoolPtrOutput)
}

func (o GetInstanceEnforcementPointPtrOutput) Vhost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPoint) *string {
		if v == nil {
			return nil
		}
		return &v.Vhost
	}).(pulumi.StringPtrOutput)
}

type GetInstanceEnforcementPointResource struct {
	Conditions  string `pulumi:"conditions"`
	IsPathRegex bool   `pulumi:"isPathRegex"`
	Path        string `pulumi:"path"`
	Permission  string `pulumi:"permission"`
	RequireAuth bool   `pulumi:"requireAuth"`
}

// GetInstanceEnforcementPointResourceInput is an input type that accepts GetInstanceEnforcementPointResourceArgs and GetInstanceEnforcementPointResourceOutput values.
// You can construct a concrete instance of `GetInstanceEnforcementPointResourceInput` via:
//
//	GetInstanceEnforcementPointResourceArgs{...}
type GetInstanceEnforcementPointResourceInput interface {
	pulumi.Input

	ToGetInstanceEnforcementPointResourceOutput() GetInstanceEnforcementPointResourceOutput
	ToGetInstanceEnforcementPointResourceOutputWithContext(context.Context) GetInstanceEnforcementPointResourceOutput
}

type GetInstanceEnforcementPointResourceArgs struct {
	Conditions  pulumi.StringInput `pulumi:"conditions"`
	IsPathRegex pulumi.BoolInput   `pulumi:"isPathRegex"`
	Path        pulumi.StringInput `pulumi:"path"`
	Permission  pulumi.StringInput `pulumi:"permission"`
	RequireAuth pulumi.BoolInput   `pulumi:"requireAuth"`
}

func (GetInstanceEnforcementPointResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEnforcementPointResource)(nil)).Elem()
}

func (i GetInstanceEnforcementPointResourceArgs) ToGetInstanceEnforcementPointResourceOutput() GetInstanceEnforcementPointResourceOutput {
	return i.ToGetInstanceEnforcementPointResourceOutputWithContext(context.Background())
}

func (i GetInstanceEnforcementPointResourceArgs) ToGetInstanceEnforcementPointResourceOutputWithContext(ctx context.Context) GetInstanceEnforcementPointResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEnforcementPointResourceOutput)
}

// GetInstanceEnforcementPointResourceArrayInput is an input type that accepts GetInstanceEnforcementPointResourceArray and GetInstanceEnforcementPointResourceArrayOutput values.
// You can construct a concrete instance of `GetInstanceEnforcementPointResourceArrayInput` via:
//
//	GetInstanceEnforcementPointResourceArray{ GetInstanceEnforcementPointResourceArgs{...} }
type GetInstanceEnforcementPointResourceArrayInput interface {
	pulumi.Input

	ToGetInstanceEnforcementPointResourceArrayOutput() GetInstanceEnforcementPointResourceArrayOutput
	ToGetInstanceEnforcementPointResourceArrayOutputWithContext(context.Context) GetInstanceEnforcementPointResourceArrayOutput
}

type GetInstanceEnforcementPointResourceArray []GetInstanceEnforcementPointResourceInput

func (GetInstanceEnforcementPointResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceEnforcementPointResource)(nil)).Elem()
}

func (i GetInstanceEnforcementPointResourceArray) ToGetInstanceEnforcementPointResourceArrayOutput() GetInstanceEnforcementPointResourceArrayOutput {
	return i.ToGetInstanceEnforcementPointResourceArrayOutputWithContext(context.Background())
}

func (i GetInstanceEnforcementPointResourceArray) ToGetInstanceEnforcementPointResourceArrayOutputWithContext(ctx context.Context) GetInstanceEnforcementPointResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEnforcementPointResourceArrayOutput)
}

type GetInstanceEnforcementPointResourceOutput struct{ *pulumi.OutputState }

func (GetInstanceEnforcementPointResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEnforcementPointResource)(nil)).Elem()
}

func (o GetInstanceEnforcementPointResourceOutput) ToGetInstanceEnforcementPointResourceOutput() GetInstanceEnforcementPointResourceOutput {
	return o
}

func (o GetInstanceEnforcementPointResourceOutput) ToGetInstanceEnforcementPointResourceOutputWithContext(ctx context.Context) GetInstanceEnforcementPointResourceOutput {
	return o
}

func (o GetInstanceEnforcementPointResourceOutput) Conditions() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPointResource) string { return v.Conditions }).(pulumi.StringOutput)
}

func (o GetInstanceEnforcementPointResourceOutput) IsPathRegex() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPointResource) bool { return v.IsPathRegex }).(pulumi.BoolOutput)
}

func (o GetInstanceEnforcementPointResourceOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPointResource) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetInstanceEnforcementPointResourceOutput) Permission() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPointResource) string { return v.Permission }).(pulumi.StringOutput)
}

func (o GetInstanceEnforcementPointResourceOutput) RequireAuth() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPointResource) bool { return v.RequireAuth }).(pulumi.BoolOutput)
}

type GetInstanceEnforcementPointResourceArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceEnforcementPointResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceEnforcementPointResource)(nil)).Elem()
}

func (o GetInstanceEnforcementPointResourceArrayOutput) ToGetInstanceEnforcementPointResourceArrayOutput() GetInstanceEnforcementPointResourceArrayOutput {
	return o
}

func (o GetInstanceEnforcementPointResourceArrayOutput) ToGetInstanceEnforcementPointResourceArrayOutputWithContext(ctx context.Context) GetInstanceEnforcementPointResourceArrayOutput {
	return o
}

func (o GetInstanceEnforcementPointResourceArrayOutput) Index(i pulumi.IntInput) GetInstanceEnforcementPointResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceEnforcementPointResource {
		return vs[0].([]GetInstanceEnforcementPointResource)[vs[1].(int)]
	}).(GetInstanceEnforcementPointResourceOutput)
}

type GetInstanceEnforcementPointSessionExpiryFixed struct {
	Unit  int `pulumi:"unit"`
	Value int `pulumi:"value"`
}

// GetInstanceEnforcementPointSessionExpiryFixedInput is an input type that accepts GetInstanceEnforcementPointSessionExpiryFixedArgs and GetInstanceEnforcementPointSessionExpiryFixedOutput values.
// You can construct a concrete instance of `GetInstanceEnforcementPointSessionExpiryFixedInput` via:
//
//	GetInstanceEnforcementPointSessionExpiryFixedArgs{...}
type GetInstanceEnforcementPointSessionExpiryFixedInput interface {
	pulumi.Input

	ToGetInstanceEnforcementPointSessionExpiryFixedOutput() GetInstanceEnforcementPointSessionExpiryFixedOutput
	ToGetInstanceEnforcementPointSessionExpiryFixedOutputWithContext(context.Context) GetInstanceEnforcementPointSessionExpiryFixedOutput
}

type GetInstanceEnforcementPointSessionExpiryFixedArgs struct {
	Unit  pulumi.IntInput `pulumi:"unit"`
	Value pulumi.IntInput `pulumi:"value"`
}

func (GetInstanceEnforcementPointSessionExpiryFixedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEnforcementPointSessionExpiryFixed)(nil)).Elem()
}

func (i GetInstanceEnforcementPointSessionExpiryFixedArgs) ToGetInstanceEnforcementPointSessionExpiryFixedOutput() GetInstanceEnforcementPointSessionExpiryFixedOutput {
	return i.ToGetInstanceEnforcementPointSessionExpiryFixedOutputWithContext(context.Background())
}

func (i GetInstanceEnforcementPointSessionExpiryFixedArgs) ToGetInstanceEnforcementPointSessionExpiryFixedOutputWithContext(ctx context.Context) GetInstanceEnforcementPointSessionExpiryFixedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEnforcementPointSessionExpiryFixedOutput)
}

func (i GetInstanceEnforcementPointSessionExpiryFixedArgs) ToGetInstanceEnforcementPointSessionExpiryFixedPtrOutput() GetInstanceEnforcementPointSessionExpiryFixedPtrOutput {
	return i.ToGetInstanceEnforcementPointSessionExpiryFixedPtrOutputWithContext(context.Background())
}

func (i GetInstanceEnforcementPointSessionExpiryFixedArgs) ToGetInstanceEnforcementPointSessionExpiryFixedPtrOutputWithContext(ctx context.Context) GetInstanceEnforcementPointSessionExpiryFixedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEnforcementPointSessionExpiryFixedOutput).ToGetInstanceEnforcementPointSessionExpiryFixedPtrOutputWithContext(ctx)
}

// GetInstanceEnforcementPointSessionExpiryFixedPtrInput is an input type that accepts GetInstanceEnforcementPointSessionExpiryFixedArgs, GetInstanceEnforcementPointSessionExpiryFixedPtr and GetInstanceEnforcementPointSessionExpiryFixedPtrOutput values.
// You can construct a concrete instance of `GetInstanceEnforcementPointSessionExpiryFixedPtrInput` via:
//
//	        GetInstanceEnforcementPointSessionExpiryFixedArgs{...}
//
//	or:
//
//	        nil
type GetInstanceEnforcementPointSessionExpiryFixedPtrInput interface {
	pulumi.Input

	ToGetInstanceEnforcementPointSessionExpiryFixedPtrOutput() GetInstanceEnforcementPointSessionExpiryFixedPtrOutput
	ToGetInstanceEnforcementPointSessionExpiryFixedPtrOutputWithContext(context.Context) GetInstanceEnforcementPointSessionExpiryFixedPtrOutput
}

type getInstanceEnforcementPointSessionExpiryFixedPtrType GetInstanceEnforcementPointSessionExpiryFixedArgs

func GetInstanceEnforcementPointSessionExpiryFixedPtr(v *GetInstanceEnforcementPointSessionExpiryFixedArgs) GetInstanceEnforcementPointSessionExpiryFixedPtrInput {
	return (*getInstanceEnforcementPointSessionExpiryFixedPtrType)(v)
}

func (*getInstanceEnforcementPointSessionExpiryFixedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceEnforcementPointSessionExpiryFixed)(nil)).Elem()
}

func (i *getInstanceEnforcementPointSessionExpiryFixedPtrType) ToGetInstanceEnforcementPointSessionExpiryFixedPtrOutput() GetInstanceEnforcementPointSessionExpiryFixedPtrOutput {
	return i.ToGetInstanceEnforcementPointSessionExpiryFixedPtrOutputWithContext(context.Background())
}

func (i *getInstanceEnforcementPointSessionExpiryFixedPtrType) ToGetInstanceEnforcementPointSessionExpiryFixedPtrOutputWithContext(ctx context.Context) GetInstanceEnforcementPointSessionExpiryFixedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEnforcementPointSessionExpiryFixedPtrOutput)
}

type GetInstanceEnforcementPointSessionExpiryFixedOutput struct{ *pulumi.OutputState }

func (GetInstanceEnforcementPointSessionExpiryFixedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEnforcementPointSessionExpiryFixed)(nil)).Elem()
}

func (o GetInstanceEnforcementPointSessionExpiryFixedOutput) ToGetInstanceEnforcementPointSessionExpiryFixedOutput() GetInstanceEnforcementPointSessionExpiryFixedOutput {
	return o
}

func (o GetInstanceEnforcementPointSessionExpiryFixedOutput) ToGetInstanceEnforcementPointSessionExpiryFixedOutputWithContext(ctx context.Context) GetInstanceEnforcementPointSessionExpiryFixedOutput {
	return o
}

func (o GetInstanceEnforcementPointSessionExpiryFixedOutput) ToGetInstanceEnforcementPointSessionExpiryFixedPtrOutput() GetInstanceEnforcementPointSessionExpiryFixedPtrOutput {
	return o.ToGetInstanceEnforcementPointSessionExpiryFixedPtrOutputWithContext(context.Background())
}

func (o GetInstanceEnforcementPointSessionExpiryFixedOutput) ToGetInstanceEnforcementPointSessionExpiryFixedPtrOutputWithContext(ctx context.Context) GetInstanceEnforcementPointSessionExpiryFixedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetInstanceEnforcementPointSessionExpiryFixed) *GetInstanceEnforcementPointSessionExpiryFixed {
		return &v
	}).(GetInstanceEnforcementPointSessionExpiryFixedPtrOutput)
}

func (o GetInstanceEnforcementPointSessionExpiryFixedOutput) Unit() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPointSessionExpiryFixed) int { return v.Unit }).(pulumi.IntOutput)
}

func (o GetInstanceEnforcementPointSessionExpiryFixedOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPointSessionExpiryFixed) int { return v.Value }).(pulumi.IntOutput)
}

type GetInstanceEnforcementPointSessionExpiryFixedPtrOutput struct{ *pulumi.OutputState }

func (GetInstanceEnforcementPointSessionExpiryFixedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceEnforcementPointSessionExpiryFixed)(nil)).Elem()
}

func (o GetInstanceEnforcementPointSessionExpiryFixedPtrOutput) ToGetInstanceEnforcementPointSessionExpiryFixedPtrOutput() GetInstanceEnforcementPointSessionExpiryFixedPtrOutput {
	return o
}

func (o GetInstanceEnforcementPointSessionExpiryFixedPtrOutput) ToGetInstanceEnforcementPointSessionExpiryFixedPtrOutputWithContext(ctx context.Context) GetInstanceEnforcementPointSessionExpiryFixedPtrOutput {
	return o
}

func (o GetInstanceEnforcementPointSessionExpiryFixedPtrOutput) Elem() GetInstanceEnforcementPointSessionExpiryFixedOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPointSessionExpiryFixed) GetInstanceEnforcementPointSessionExpiryFixed {
		if v != nil {
			return *v
		}
		var ret GetInstanceEnforcementPointSessionExpiryFixed
		return ret
	}).(GetInstanceEnforcementPointSessionExpiryFixedOutput)
}

func (o GetInstanceEnforcementPointSessionExpiryFixedPtrOutput) Unit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPointSessionExpiryFixed) *int {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.IntPtrOutput)
}

func (o GetInstanceEnforcementPointSessionExpiryFixedPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPointSessionExpiryFixed) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type GetInstanceEnforcementPointSessionExpiryInactivity struct {
	Unit  int `pulumi:"unit"`
	Value int `pulumi:"value"`
}

// GetInstanceEnforcementPointSessionExpiryInactivityInput is an input type that accepts GetInstanceEnforcementPointSessionExpiryInactivityArgs and GetInstanceEnforcementPointSessionExpiryInactivityOutput values.
// You can construct a concrete instance of `GetInstanceEnforcementPointSessionExpiryInactivityInput` via:
//
//	GetInstanceEnforcementPointSessionExpiryInactivityArgs{...}
type GetInstanceEnforcementPointSessionExpiryInactivityInput interface {
	pulumi.Input

	ToGetInstanceEnforcementPointSessionExpiryInactivityOutput() GetInstanceEnforcementPointSessionExpiryInactivityOutput
	ToGetInstanceEnforcementPointSessionExpiryInactivityOutputWithContext(context.Context) GetInstanceEnforcementPointSessionExpiryInactivityOutput
}

type GetInstanceEnforcementPointSessionExpiryInactivityArgs struct {
	Unit  pulumi.IntInput `pulumi:"unit"`
	Value pulumi.IntInput `pulumi:"value"`
}

func (GetInstanceEnforcementPointSessionExpiryInactivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEnforcementPointSessionExpiryInactivity)(nil)).Elem()
}

func (i GetInstanceEnforcementPointSessionExpiryInactivityArgs) ToGetInstanceEnforcementPointSessionExpiryInactivityOutput() GetInstanceEnforcementPointSessionExpiryInactivityOutput {
	return i.ToGetInstanceEnforcementPointSessionExpiryInactivityOutputWithContext(context.Background())
}

func (i GetInstanceEnforcementPointSessionExpiryInactivityArgs) ToGetInstanceEnforcementPointSessionExpiryInactivityOutputWithContext(ctx context.Context) GetInstanceEnforcementPointSessionExpiryInactivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEnforcementPointSessionExpiryInactivityOutput)
}

func (i GetInstanceEnforcementPointSessionExpiryInactivityArgs) ToGetInstanceEnforcementPointSessionExpiryInactivityPtrOutput() GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput {
	return i.ToGetInstanceEnforcementPointSessionExpiryInactivityPtrOutputWithContext(context.Background())
}

func (i GetInstanceEnforcementPointSessionExpiryInactivityArgs) ToGetInstanceEnforcementPointSessionExpiryInactivityPtrOutputWithContext(ctx context.Context) GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEnforcementPointSessionExpiryInactivityOutput).ToGetInstanceEnforcementPointSessionExpiryInactivityPtrOutputWithContext(ctx)
}

// GetInstanceEnforcementPointSessionExpiryInactivityPtrInput is an input type that accepts GetInstanceEnforcementPointSessionExpiryInactivityArgs, GetInstanceEnforcementPointSessionExpiryInactivityPtr and GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput values.
// You can construct a concrete instance of `GetInstanceEnforcementPointSessionExpiryInactivityPtrInput` via:
//
//	        GetInstanceEnforcementPointSessionExpiryInactivityArgs{...}
//
//	or:
//
//	        nil
type GetInstanceEnforcementPointSessionExpiryInactivityPtrInput interface {
	pulumi.Input

	ToGetInstanceEnforcementPointSessionExpiryInactivityPtrOutput() GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput
	ToGetInstanceEnforcementPointSessionExpiryInactivityPtrOutputWithContext(context.Context) GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput
}

type getInstanceEnforcementPointSessionExpiryInactivityPtrType GetInstanceEnforcementPointSessionExpiryInactivityArgs

func GetInstanceEnforcementPointSessionExpiryInactivityPtr(v *GetInstanceEnforcementPointSessionExpiryInactivityArgs) GetInstanceEnforcementPointSessionExpiryInactivityPtrInput {
	return (*getInstanceEnforcementPointSessionExpiryInactivityPtrType)(v)
}

func (*getInstanceEnforcementPointSessionExpiryInactivityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceEnforcementPointSessionExpiryInactivity)(nil)).Elem()
}

func (i *getInstanceEnforcementPointSessionExpiryInactivityPtrType) ToGetInstanceEnforcementPointSessionExpiryInactivityPtrOutput() GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput {
	return i.ToGetInstanceEnforcementPointSessionExpiryInactivityPtrOutputWithContext(context.Background())
}

func (i *getInstanceEnforcementPointSessionExpiryInactivityPtrType) ToGetInstanceEnforcementPointSessionExpiryInactivityPtrOutputWithContext(ctx context.Context) GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput)
}

type GetInstanceEnforcementPointSessionExpiryInactivityOutput struct{ *pulumi.OutputState }

func (GetInstanceEnforcementPointSessionExpiryInactivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEnforcementPointSessionExpiryInactivity)(nil)).Elem()
}

func (o GetInstanceEnforcementPointSessionExpiryInactivityOutput) ToGetInstanceEnforcementPointSessionExpiryInactivityOutput() GetInstanceEnforcementPointSessionExpiryInactivityOutput {
	return o
}

func (o GetInstanceEnforcementPointSessionExpiryInactivityOutput) ToGetInstanceEnforcementPointSessionExpiryInactivityOutputWithContext(ctx context.Context) GetInstanceEnforcementPointSessionExpiryInactivityOutput {
	return o
}

func (o GetInstanceEnforcementPointSessionExpiryInactivityOutput) ToGetInstanceEnforcementPointSessionExpiryInactivityPtrOutput() GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput {
	return o.ToGetInstanceEnforcementPointSessionExpiryInactivityPtrOutputWithContext(context.Background())
}

func (o GetInstanceEnforcementPointSessionExpiryInactivityOutput) ToGetInstanceEnforcementPointSessionExpiryInactivityPtrOutputWithContext(ctx context.Context) GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetInstanceEnforcementPointSessionExpiryInactivity) *GetInstanceEnforcementPointSessionExpiryInactivity {
		return &v
	}).(GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput)
}

func (o GetInstanceEnforcementPointSessionExpiryInactivityOutput) Unit() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPointSessionExpiryInactivity) int { return v.Unit }).(pulumi.IntOutput)
}

func (o GetInstanceEnforcementPointSessionExpiryInactivityOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPointSessionExpiryInactivity) int { return v.Value }).(pulumi.IntOutput)
}

type GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput struct{ *pulumi.OutputState }

func (GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceEnforcementPointSessionExpiryInactivity)(nil)).Elem()
}

func (o GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput) ToGetInstanceEnforcementPointSessionExpiryInactivityPtrOutput() GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput {
	return o
}

func (o GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput) ToGetInstanceEnforcementPointSessionExpiryInactivityPtrOutputWithContext(ctx context.Context) GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput {
	return o
}

func (o GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput) Elem() GetInstanceEnforcementPointSessionExpiryInactivityOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPointSessionExpiryInactivity) GetInstanceEnforcementPointSessionExpiryInactivity {
		if v != nil {
			return *v
		}
		var ret GetInstanceEnforcementPointSessionExpiryInactivity
		return ret
	}).(GetInstanceEnforcementPointSessionExpiryInactivityOutput)
}

func (o GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput) Unit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPointSessionExpiryInactivity) *int {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.IntPtrOutput)
}

func (o GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPointSessionExpiryInactivity) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type GetInstanceParameters struct {
	IncludeInSamlAssertion bool   `pulumi:"includeInSamlAssertion"`
	Label                  string `pulumi:"label"`
	UserAttributeMacros    string `pulumi:"userAttributeMacros"`
	UserAttributeMappings  string `pulumi:"userAttributeMappings"`
}

// GetInstanceParametersInput is an input type that accepts GetInstanceParametersArgs and GetInstanceParametersOutput values.
// You can construct a concrete instance of `GetInstanceParametersInput` via:
//
//	GetInstanceParametersArgs{...}
type GetInstanceParametersInput interface {
	pulumi.Input

	ToGetInstanceParametersOutput() GetInstanceParametersOutput
	ToGetInstanceParametersOutputWithContext(context.Context) GetInstanceParametersOutput
}

type GetInstanceParametersArgs struct {
	IncludeInSamlAssertion pulumi.BoolInput   `pulumi:"includeInSamlAssertion"`
	Label                  pulumi.StringInput `pulumi:"label"`
	UserAttributeMacros    pulumi.StringInput `pulumi:"userAttributeMacros"`
	UserAttributeMappings  pulumi.StringInput `pulumi:"userAttributeMappings"`
}

func (GetInstanceParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceParameters)(nil)).Elem()
}

func (i GetInstanceParametersArgs) ToGetInstanceParametersOutput() GetInstanceParametersOutput {
	return i.ToGetInstanceParametersOutputWithContext(context.Background())
}

func (i GetInstanceParametersArgs) ToGetInstanceParametersOutputWithContext(ctx context.Context) GetInstanceParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceParametersOutput)
}

func (i GetInstanceParametersArgs) ToGetInstanceParametersPtrOutput() GetInstanceParametersPtrOutput {
	return i.ToGetInstanceParametersPtrOutputWithContext(context.Background())
}

func (i GetInstanceParametersArgs) ToGetInstanceParametersPtrOutputWithContext(ctx context.Context) GetInstanceParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceParametersOutput).ToGetInstanceParametersPtrOutputWithContext(ctx)
}

// GetInstanceParametersPtrInput is an input type that accepts GetInstanceParametersArgs, GetInstanceParametersPtr and GetInstanceParametersPtrOutput values.
// You can construct a concrete instance of `GetInstanceParametersPtrInput` via:
//
//	        GetInstanceParametersArgs{...}
//
//	or:
//
//	        nil
type GetInstanceParametersPtrInput interface {
	pulumi.Input

	ToGetInstanceParametersPtrOutput() GetInstanceParametersPtrOutput
	ToGetInstanceParametersPtrOutputWithContext(context.Context) GetInstanceParametersPtrOutput
}

type getInstanceParametersPtrType GetInstanceParametersArgs

func GetInstanceParametersPtr(v *GetInstanceParametersArgs) GetInstanceParametersPtrInput {
	return (*getInstanceParametersPtrType)(v)
}

func (*getInstanceParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceParameters)(nil)).Elem()
}

func (i *getInstanceParametersPtrType) ToGetInstanceParametersPtrOutput() GetInstanceParametersPtrOutput {
	return i.ToGetInstanceParametersPtrOutputWithContext(context.Background())
}

func (i *getInstanceParametersPtrType) ToGetInstanceParametersPtrOutputWithContext(ctx context.Context) GetInstanceParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceParametersPtrOutput)
}

type GetInstanceParametersOutput struct{ *pulumi.OutputState }

func (GetInstanceParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceParameters)(nil)).Elem()
}

func (o GetInstanceParametersOutput) ToGetInstanceParametersOutput() GetInstanceParametersOutput {
	return o
}

func (o GetInstanceParametersOutput) ToGetInstanceParametersOutputWithContext(ctx context.Context) GetInstanceParametersOutput {
	return o
}

func (o GetInstanceParametersOutput) ToGetInstanceParametersPtrOutput() GetInstanceParametersPtrOutput {
	return o.ToGetInstanceParametersPtrOutputWithContext(context.Background())
}

func (o GetInstanceParametersOutput) ToGetInstanceParametersPtrOutputWithContext(ctx context.Context) GetInstanceParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetInstanceParameters) *GetInstanceParameters {
		return &v
	}).(GetInstanceParametersPtrOutput)
}

func (o GetInstanceParametersOutput) IncludeInSamlAssertion() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceParameters) bool { return v.IncludeInSamlAssertion }).(pulumi.BoolOutput)
}

func (o GetInstanceParametersOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParameters) string { return v.Label }).(pulumi.StringOutput)
}

func (o GetInstanceParametersOutput) UserAttributeMacros() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParameters) string { return v.UserAttributeMacros }).(pulumi.StringOutput)
}

func (o GetInstanceParametersOutput) UserAttributeMappings() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParameters) string { return v.UserAttributeMappings }).(pulumi.StringOutput)
}

type GetInstanceParametersPtrOutput struct{ *pulumi.OutputState }

func (GetInstanceParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceParameters)(nil)).Elem()
}

func (o GetInstanceParametersPtrOutput) ToGetInstanceParametersPtrOutput() GetInstanceParametersPtrOutput {
	return o
}

func (o GetInstanceParametersPtrOutput) ToGetInstanceParametersPtrOutputWithContext(ctx context.Context) GetInstanceParametersPtrOutput {
	return o
}

func (o GetInstanceParametersPtrOutput) Elem() GetInstanceParametersOutput {
	return o.ApplyT(func(v *GetInstanceParameters) GetInstanceParameters {
		if v != nil {
			return *v
		}
		var ret GetInstanceParameters
		return ret
	}).(GetInstanceParametersOutput)
}

func (o GetInstanceParametersPtrOutput) IncludeInSamlAssertion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetInstanceParameters) *bool {
		if v == nil {
			return nil
		}
		return &v.IncludeInSamlAssertion
	}).(pulumi.BoolPtrOutput)
}

func (o GetInstanceParametersPtrOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Label
	}).(pulumi.StringPtrOutput)
}

func (o GetInstanceParametersPtrOutput) UserAttributeMacros() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceParameters) *string {
		if v == nil {
			return nil
		}
		return &v.UserAttributeMacros
	}).(pulumi.StringPtrOutput)
}

func (o GetInstanceParametersPtrOutput) UserAttributeMappings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceParameters) *string {
		if v == nil {
			return nil
		}
		return &v.UserAttributeMappings
	}).(pulumi.StringPtrOutput)
}

type GetInstanceProvisioning struct {
	Enabled bool `pulumi:"enabled"`
}

// GetInstanceProvisioningInput is an input type that accepts GetInstanceProvisioningArgs and GetInstanceProvisioningOutput values.
// You can construct a concrete instance of `GetInstanceProvisioningInput` via:
//
//	GetInstanceProvisioningArgs{...}
type GetInstanceProvisioningInput interface {
	pulumi.Input

	ToGetInstanceProvisioningOutput() GetInstanceProvisioningOutput
	ToGetInstanceProvisioningOutputWithContext(context.Context) GetInstanceProvisioningOutput
}

type GetInstanceProvisioningArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetInstanceProvisioningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceProvisioning)(nil)).Elem()
}

func (i GetInstanceProvisioningArgs) ToGetInstanceProvisioningOutput() GetInstanceProvisioningOutput {
	return i.ToGetInstanceProvisioningOutputWithContext(context.Background())
}

func (i GetInstanceProvisioningArgs) ToGetInstanceProvisioningOutputWithContext(ctx context.Context) GetInstanceProvisioningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceProvisioningOutput)
}

func (i GetInstanceProvisioningArgs) ToGetInstanceProvisioningPtrOutput() GetInstanceProvisioningPtrOutput {
	return i.ToGetInstanceProvisioningPtrOutputWithContext(context.Background())
}

func (i GetInstanceProvisioningArgs) ToGetInstanceProvisioningPtrOutputWithContext(ctx context.Context) GetInstanceProvisioningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceProvisioningOutput).ToGetInstanceProvisioningPtrOutputWithContext(ctx)
}

// GetInstanceProvisioningPtrInput is an input type that accepts GetInstanceProvisioningArgs, GetInstanceProvisioningPtr and GetInstanceProvisioningPtrOutput values.
// You can construct a concrete instance of `GetInstanceProvisioningPtrInput` via:
//
//	        GetInstanceProvisioningArgs{...}
//
//	or:
//
//	        nil
type GetInstanceProvisioningPtrInput interface {
	pulumi.Input

	ToGetInstanceProvisioningPtrOutput() GetInstanceProvisioningPtrOutput
	ToGetInstanceProvisioningPtrOutputWithContext(context.Context) GetInstanceProvisioningPtrOutput
}

type getInstanceProvisioningPtrType GetInstanceProvisioningArgs

func GetInstanceProvisioningPtr(v *GetInstanceProvisioningArgs) GetInstanceProvisioningPtrInput {
	return (*getInstanceProvisioningPtrType)(v)
}

func (*getInstanceProvisioningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceProvisioning)(nil)).Elem()
}

func (i *getInstanceProvisioningPtrType) ToGetInstanceProvisioningPtrOutput() GetInstanceProvisioningPtrOutput {
	return i.ToGetInstanceProvisioningPtrOutputWithContext(context.Background())
}

func (i *getInstanceProvisioningPtrType) ToGetInstanceProvisioningPtrOutputWithContext(ctx context.Context) GetInstanceProvisioningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceProvisioningPtrOutput)
}

type GetInstanceProvisioningOutput struct{ *pulumi.OutputState }

func (GetInstanceProvisioningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceProvisioning)(nil)).Elem()
}

func (o GetInstanceProvisioningOutput) ToGetInstanceProvisioningOutput() GetInstanceProvisioningOutput {
	return o
}

func (o GetInstanceProvisioningOutput) ToGetInstanceProvisioningOutputWithContext(ctx context.Context) GetInstanceProvisioningOutput {
	return o
}

func (o GetInstanceProvisioningOutput) ToGetInstanceProvisioningPtrOutput() GetInstanceProvisioningPtrOutput {
	return o.ToGetInstanceProvisioningPtrOutputWithContext(context.Background())
}

func (o GetInstanceProvisioningOutput) ToGetInstanceProvisioningPtrOutputWithContext(ctx context.Context) GetInstanceProvisioningPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetInstanceProvisioning) *GetInstanceProvisioning {
		return &v
	}).(GetInstanceProvisioningPtrOutput)
}

func (o GetInstanceProvisioningOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceProvisioning) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetInstanceProvisioningPtrOutput struct{ *pulumi.OutputState }

func (GetInstanceProvisioningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceProvisioning)(nil)).Elem()
}

func (o GetInstanceProvisioningPtrOutput) ToGetInstanceProvisioningPtrOutput() GetInstanceProvisioningPtrOutput {
	return o
}

func (o GetInstanceProvisioningPtrOutput) ToGetInstanceProvisioningPtrOutputWithContext(ctx context.Context) GetInstanceProvisioningPtrOutput {
	return o
}

func (o GetInstanceProvisioningPtrOutput) Elem() GetInstanceProvisioningOutput {
	return o.ApplyT(func(v *GetInstanceProvisioning) GetInstanceProvisioning {
		if v != nil {
			return *v
		}
		var ret GetInstanceProvisioning
		return ret
	}).(GetInstanceProvisioningOutput)
}

func (o GetInstanceProvisioningPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetInstanceProvisioning) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type GetRulesAction struct {
	Action string   `pulumi:"action"`
	Values []string `pulumi:"values"`
}

// GetRulesActionInput is an input type that accepts GetRulesActionArgs and GetRulesActionOutput values.
// You can construct a concrete instance of `GetRulesActionInput` via:
//
//	GetRulesActionArgs{...}
type GetRulesActionInput interface {
	pulumi.Input

	ToGetRulesActionOutput() GetRulesActionOutput
	ToGetRulesActionOutputWithContext(context.Context) GetRulesActionOutput
}

type GetRulesActionArgs struct {
	Action pulumi.StringInput      `pulumi:"action"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRulesActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesAction)(nil)).Elem()
}

func (i GetRulesActionArgs) ToGetRulesActionOutput() GetRulesActionOutput {
	return i.ToGetRulesActionOutputWithContext(context.Background())
}

func (i GetRulesActionArgs) ToGetRulesActionOutputWithContext(ctx context.Context) GetRulesActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesActionOutput)
}

// GetRulesActionArrayInput is an input type that accepts GetRulesActionArray and GetRulesActionArrayOutput values.
// You can construct a concrete instance of `GetRulesActionArrayInput` via:
//
//	GetRulesActionArray{ GetRulesActionArgs{...} }
type GetRulesActionArrayInput interface {
	pulumi.Input

	ToGetRulesActionArrayOutput() GetRulesActionArrayOutput
	ToGetRulesActionArrayOutputWithContext(context.Context) GetRulesActionArrayOutput
}

type GetRulesActionArray []GetRulesActionInput

func (GetRulesActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesAction)(nil)).Elem()
}

func (i GetRulesActionArray) ToGetRulesActionArrayOutput() GetRulesActionArrayOutput {
	return i.ToGetRulesActionArrayOutputWithContext(context.Background())
}

func (i GetRulesActionArray) ToGetRulesActionArrayOutputWithContext(ctx context.Context) GetRulesActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesActionArrayOutput)
}

type GetRulesActionOutput struct{ *pulumi.OutputState }

func (GetRulesActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesAction)(nil)).Elem()
}

func (o GetRulesActionOutput) ToGetRulesActionOutput() GetRulesActionOutput {
	return o
}

func (o GetRulesActionOutput) ToGetRulesActionOutputWithContext(ctx context.Context) GetRulesActionOutput {
	return o
}

func (o GetRulesActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesAction) string { return v.Action }).(pulumi.StringOutput)
}

func (o GetRulesActionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRulesAction) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRulesActionArrayOutput struct{ *pulumi.OutputState }

func (GetRulesActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesAction)(nil)).Elem()
}

func (o GetRulesActionArrayOutput) ToGetRulesActionArrayOutput() GetRulesActionArrayOutput {
	return o
}

func (o GetRulesActionArrayOutput) ToGetRulesActionArrayOutputWithContext(ctx context.Context) GetRulesActionArrayOutput {
	return o
}

func (o GetRulesActionArrayOutput) Index(i pulumi.IntInput) GetRulesActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRulesAction {
		return vs[0].([]GetRulesAction)[vs[1].(int)]
	}).(GetRulesActionOutput)
}

type GetRulesCondition struct {
	Operator string `pulumi:"operator"`
	Source   string `pulumi:"source"`
	Value    string `pulumi:"value"`
}

// GetRulesConditionInput is an input type that accepts GetRulesConditionArgs and GetRulesConditionOutput values.
// You can construct a concrete instance of `GetRulesConditionInput` via:
//
//	GetRulesConditionArgs{...}
type GetRulesConditionInput interface {
	pulumi.Input

	ToGetRulesConditionOutput() GetRulesConditionOutput
	ToGetRulesConditionOutputWithContext(context.Context) GetRulesConditionOutput
}

type GetRulesConditionArgs struct {
	Operator pulumi.StringInput `pulumi:"operator"`
	Source   pulumi.StringInput `pulumi:"source"`
	Value    pulumi.StringInput `pulumi:"value"`
}

func (GetRulesConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesCondition)(nil)).Elem()
}

func (i GetRulesConditionArgs) ToGetRulesConditionOutput() GetRulesConditionOutput {
	return i.ToGetRulesConditionOutputWithContext(context.Background())
}

func (i GetRulesConditionArgs) ToGetRulesConditionOutputWithContext(ctx context.Context) GetRulesConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesConditionOutput)
}

// GetRulesConditionArrayInput is an input type that accepts GetRulesConditionArray and GetRulesConditionArrayOutput values.
// You can construct a concrete instance of `GetRulesConditionArrayInput` via:
//
//	GetRulesConditionArray{ GetRulesConditionArgs{...} }
type GetRulesConditionArrayInput interface {
	pulumi.Input

	ToGetRulesConditionArrayOutput() GetRulesConditionArrayOutput
	ToGetRulesConditionArrayOutputWithContext(context.Context) GetRulesConditionArrayOutput
}

type GetRulesConditionArray []GetRulesConditionInput

func (GetRulesConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesCondition)(nil)).Elem()
}

func (i GetRulesConditionArray) ToGetRulesConditionArrayOutput() GetRulesConditionArrayOutput {
	return i.ToGetRulesConditionArrayOutputWithContext(context.Background())
}

func (i GetRulesConditionArray) ToGetRulesConditionArrayOutputWithContext(ctx context.Context) GetRulesConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesConditionArrayOutput)
}

type GetRulesConditionOutput struct{ *pulumi.OutputState }

func (GetRulesConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesCondition)(nil)).Elem()
}

func (o GetRulesConditionOutput) ToGetRulesConditionOutput() GetRulesConditionOutput {
	return o
}

func (o GetRulesConditionOutput) ToGetRulesConditionOutputWithContext(ctx context.Context) GetRulesConditionOutput {
	return o
}

func (o GetRulesConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesCondition) string { return v.Operator }).(pulumi.StringOutput)
}

func (o GetRulesConditionOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesCondition) string { return v.Source }).(pulumi.StringOutput)
}

func (o GetRulesConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesCondition) string { return v.Value }).(pulumi.StringOutput)
}

type GetRulesConditionArrayOutput struct{ *pulumi.OutputState }

func (GetRulesConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesCondition)(nil)).Elem()
}

func (o GetRulesConditionArrayOutput) ToGetRulesConditionArrayOutput() GetRulesConditionArrayOutput {
	return o
}

func (o GetRulesConditionArrayOutput) ToGetRulesConditionArrayOutputWithContext(ctx context.Context) GetRulesConditionArrayOutput {
	return o
}

func (o GetRulesConditionArrayOutput) Index(i pulumi.IntInput) GetRulesConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRulesCondition {
		return vs[0].([]GetRulesCondition)[vs[1].(int)]
	}).(GetRulesConditionOutput)
}

type GetRulesFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetRulesFilterInput is an input type that accepts GetRulesFilterArgs and GetRulesFilterOutput values.
// You can construct a concrete instance of `GetRulesFilterInput` via:
//
//	GetRulesFilterArgs{...}
type GetRulesFilterInput interface {
	pulumi.Input

	ToGetRulesFilterOutput() GetRulesFilterOutput
	ToGetRulesFilterOutputWithContext(context.Context) GetRulesFilterOutput
}

type GetRulesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRulesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesFilter)(nil)).Elem()
}

func (i GetRulesFilterArgs) ToGetRulesFilterOutput() GetRulesFilterOutput {
	return i.ToGetRulesFilterOutputWithContext(context.Background())
}

func (i GetRulesFilterArgs) ToGetRulesFilterOutputWithContext(ctx context.Context) GetRulesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesFilterOutput)
}

// GetRulesFilterArrayInput is an input type that accepts GetRulesFilterArray and GetRulesFilterArrayOutput values.
// You can construct a concrete instance of `GetRulesFilterArrayInput` via:
//
//	GetRulesFilterArray{ GetRulesFilterArgs{...} }
type GetRulesFilterArrayInput interface {
	pulumi.Input

	ToGetRulesFilterArrayOutput() GetRulesFilterArrayOutput
	ToGetRulesFilterArrayOutputWithContext(context.Context) GetRulesFilterArrayOutput
}

type GetRulesFilterArray []GetRulesFilterInput

func (GetRulesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesFilter)(nil)).Elem()
}

func (i GetRulesFilterArray) ToGetRulesFilterArrayOutput() GetRulesFilterArrayOutput {
	return i.ToGetRulesFilterArrayOutputWithContext(context.Background())
}

func (i GetRulesFilterArray) ToGetRulesFilterArrayOutputWithContext(ctx context.Context) GetRulesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesFilterArrayOutput)
}

type GetRulesFilterOutput struct{ *pulumi.OutputState }

func (GetRulesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesFilter)(nil)).Elem()
}

func (o GetRulesFilterOutput) ToGetRulesFilterOutput() GetRulesFilterOutput {
	return o
}

func (o GetRulesFilterOutput) ToGetRulesFilterOutputWithContext(ctx context.Context) GetRulesFilterOutput {
	return o
}

func (o GetRulesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRulesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRulesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRulesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRulesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesFilter)(nil)).Elem()
}

func (o GetRulesFilterArrayOutput) ToGetRulesFilterArrayOutput() GetRulesFilterArrayOutput {
	return o
}

func (o GetRulesFilterArrayOutput) ToGetRulesFilterArrayOutputWithContext(ctx context.Context) GetRulesFilterArrayOutput {
	return o
}

func (o GetRulesFilterArrayOutput) Index(i pulumi.IntInput) GetRulesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRulesFilter {
		return vs[0].([]GetRulesFilter)[vs[1].(int)]
	}).(GetRulesFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionsFilterInput)(nil)).Elem(), GetActionsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionsFilterArrayInput)(nil)).Elem(), GetActionsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionsValuesFilterInput)(nil)).Elem(), GetActionsValuesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionsValuesFilterArrayInput)(nil)).Elem(), GetActionsValuesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConditionsFilterInput)(nil)).Elem(), GetConditionsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConditionsFilterArrayInput)(nil)).Elem(), GetConditionsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConditionsOperatorsFilterInput)(nil)).Elem(), GetConditionsOperatorsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConditionsOperatorsFilterArrayInput)(nil)).Elem(), GetConditionsOperatorsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConditionsValuesFilterInput)(nil)).Elem(), GetConditionsValuesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConditionsValuesFilterArrayInput)(nil)).Elem(), GetConditionsValuesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceEnforcementPointInput)(nil)).Elem(), GetInstanceEnforcementPointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceEnforcementPointPtrInput)(nil)).Elem(), GetInstanceEnforcementPointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceEnforcementPointResourceInput)(nil)).Elem(), GetInstanceEnforcementPointResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceEnforcementPointResourceArrayInput)(nil)).Elem(), GetInstanceEnforcementPointResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceEnforcementPointSessionExpiryFixedInput)(nil)).Elem(), GetInstanceEnforcementPointSessionExpiryFixedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceEnforcementPointSessionExpiryFixedPtrInput)(nil)).Elem(), GetInstanceEnforcementPointSessionExpiryFixedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceEnforcementPointSessionExpiryInactivityInput)(nil)).Elem(), GetInstanceEnforcementPointSessionExpiryInactivityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceEnforcementPointSessionExpiryInactivityPtrInput)(nil)).Elem(), GetInstanceEnforcementPointSessionExpiryInactivityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceParametersInput)(nil)).Elem(), GetInstanceParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceParametersPtrInput)(nil)).Elem(), GetInstanceParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceProvisioningInput)(nil)).Elem(), GetInstanceProvisioningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceProvisioningPtrInput)(nil)).Elem(), GetInstanceProvisioningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesActionInput)(nil)).Elem(), GetRulesActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesActionArrayInput)(nil)).Elem(), GetRulesActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesConditionInput)(nil)).Elem(), GetRulesConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesConditionArrayInput)(nil)).Elem(), GetRulesConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesFilterInput)(nil)).Elem(), GetRulesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesFilterArrayInput)(nil)).Elem(), GetRulesFilterArray{})
	pulumi.RegisterOutputType(GetActionsFilterOutput{})
	pulumi.RegisterOutputType(GetActionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetActionsValuesFilterOutput{})
	pulumi.RegisterOutputType(GetActionsValuesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetConditionsFilterOutput{})
	pulumi.RegisterOutputType(GetConditionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetConditionsOperatorsFilterOutput{})
	pulumi.RegisterOutputType(GetConditionsOperatorsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetConditionsValuesFilterOutput{})
	pulumi.RegisterOutputType(GetConditionsValuesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceEnforcementPointOutput{})
	pulumi.RegisterOutputType(GetInstanceEnforcementPointPtrOutput{})
	pulumi.RegisterOutputType(GetInstanceEnforcementPointResourceOutput{})
	pulumi.RegisterOutputType(GetInstanceEnforcementPointResourceArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceEnforcementPointSessionExpiryFixedOutput{})
	pulumi.RegisterOutputType(GetInstanceEnforcementPointSessionExpiryFixedPtrOutput{})
	pulumi.RegisterOutputType(GetInstanceEnforcementPointSessionExpiryInactivityOutput{})
	pulumi.RegisterOutputType(GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput{})
	pulumi.RegisterOutputType(GetInstanceParametersOutput{})
	pulumi.RegisterOutputType(GetInstanceParametersPtrOutput{})
	pulumi.RegisterOutputType(GetInstanceProvisioningOutput{})
	pulumi.RegisterOutputType(GetInstanceProvisioningPtrOutput{})
	pulumi.RegisterOutputType(GetRulesActionOutput{})
	pulumi.RegisterOutputType(GetRulesActionArrayOutput{})
	pulumi.RegisterOutputType(GetRulesConditionOutput{})
	pulumi.RegisterOutputType(GetRulesConditionArrayOutput{})
	pulumi.RegisterOutputType(GetRulesFilterOutput{})
	pulumi.RegisterOutputType(GetRulesFilterArrayOutput{})
}
