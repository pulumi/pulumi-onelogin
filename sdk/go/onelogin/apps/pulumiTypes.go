// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apps

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetActionsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetActionsFilterInput is an input type that accepts GetActionsFilterArgs and GetActionsFilterOutput values.
// You can construct a concrete instance of `GetActionsFilterInput` via:
//
//	GetActionsFilterArgs{...}
type GetActionsFilterInput interface {
	pulumi.Input

	ToGetActionsFilterOutput() GetActionsFilterOutput
	ToGetActionsFilterOutputWithContext(context.Context) GetActionsFilterOutput
}

type GetActionsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetActionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionsFilter)(nil)).Elem()
}

func (i GetActionsFilterArgs) ToGetActionsFilterOutput() GetActionsFilterOutput {
	return i.ToGetActionsFilterOutputWithContext(context.Background())
}

func (i GetActionsFilterArgs) ToGetActionsFilterOutputWithContext(ctx context.Context) GetActionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionsFilterOutput)
}

// GetActionsFilterArrayInput is an input type that accepts GetActionsFilterArray and GetActionsFilterArrayOutput values.
// You can construct a concrete instance of `GetActionsFilterArrayInput` via:
//
//	GetActionsFilterArray{ GetActionsFilterArgs{...} }
type GetActionsFilterArrayInput interface {
	pulumi.Input

	ToGetActionsFilterArrayOutput() GetActionsFilterArrayOutput
	ToGetActionsFilterArrayOutputWithContext(context.Context) GetActionsFilterArrayOutput
}

type GetActionsFilterArray []GetActionsFilterInput

func (GetActionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetActionsFilter)(nil)).Elem()
}

func (i GetActionsFilterArray) ToGetActionsFilterArrayOutput() GetActionsFilterArrayOutput {
	return i.ToGetActionsFilterArrayOutputWithContext(context.Background())
}

func (i GetActionsFilterArray) ToGetActionsFilterArrayOutputWithContext(ctx context.Context) GetActionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionsFilterArrayOutput)
}

type GetActionsFilterOutput struct{ *pulumi.OutputState }

func (GetActionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionsFilter)(nil)).Elem()
}

func (o GetActionsFilterOutput) ToGetActionsFilterOutput() GetActionsFilterOutput {
	return o
}

func (o GetActionsFilterOutput) ToGetActionsFilterOutputWithContext(ctx context.Context) GetActionsFilterOutput {
	return o
}

func (o GetActionsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetActionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetActionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetActionsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetActionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetActionsFilter)(nil)).Elem()
}

func (o GetActionsFilterArrayOutput) ToGetActionsFilterArrayOutput() GetActionsFilterArrayOutput {
	return o
}

func (o GetActionsFilterArrayOutput) ToGetActionsFilterArrayOutputWithContext(ctx context.Context) GetActionsFilterArrayOutput {
	return o
}

func (o GetActionsFilterArrayOutput) Index(i pulumi.IntInput) GetActionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetActionsFilter {
		return vs[0].([]GetActionsFilter)[vs[1].(int)]
	}).(GetActionsFilterOutput)
}

type GetActionsValuesFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetActionsValuesFilterInput is an input type that accepts GetActionsValuesFilterArgs and GetActionsValuesFilterOutput values.
// You can construct a concrete instance of `GetActionsValuesFilterInput` via:
//
//	GetActionsValuesFilterArgs{...}
type GetActionsValuesFilterInput interface {
	pulumi.Input

	ToGetActionsValuesFilterOutput() GetActionsValuesFilterOutput
	ToGetActionsValuesFilterOutputWithContext(context.Context) GetActionsValuesFilterOutput
}

type GetActionsValuesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetActionsValuesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionsValuesFilter)(nil)).Elem()
}

func (i GetActionsValuesFilterArgs) ToGetActionsValuesFilterOutput() GetActionsValuesFilterOutput {
	return i.ToGetActionsValuesFilterOutputWithContext(context.Background())
}

func (i GetActionsValuesFilterArgs) ToGetActionsValuesFilterOutputWithContext(ctx context.Context) GetActionsValuesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionsValuesFilterOutput)
}

// GetActionsValuesFilterArrayInput is an input type that accepts GetActionsValuesFilterArray and GetActionsValuesFilterArrayOutput values.
// You can construct a concrete instance of `GetActionsValuesFilterArrayInput` via:
//
//	GetActionsValuesFilterArray{ GetActionsValuesFilterArgs{...} }
type GetActionsValuesFilterArrayInput interface {
	pulumi.Input

	ToGetActionsValuesFilterArrayOutput() GetActionsValuesFilterArrayOutput
	ToGetActionsValuesFilterArrayOutputWithContext(context.Context) GetActionsValuesFilterArrayOutput
}

type GetActionsValuesFilterArray []GetActionsValuesFilterInput

func (GetActionsValuesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetActionsValuesFilter)(nil)).Elem()
}

func (i GetActionsValuesFilterArray) ToGetActionsValuesFilterArrayOutput() GetActionsValuesFilterArrayOutput {
	return i.ToGetActionsValuesFilterArrayOutputWithContext(context.Background())
}

func (i GetActionsValuesFilterArray) ToGetActionsValuesFilterArrayOutputWithContext(ctx context.Context) GetActionsValuesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionsValuesFilterArrayOutput)
}

type GetActionsValuesFilterOutput struct{ *pulumi.OutputState }

func (GetActionsValuesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionsValuesFilter)(nil)).Elem()
}

func (o GetActionsValuesFilterOutput) ToGetActionsValuesFilterOutput() GetActionsValuesFilterOutput {
	return o
}

func (o GetActionsValuesFilterOutput) ToGetActionsValuesFilterOutputWithContext(ctx context.Context) GetActionsValuesFilterOutput {
	return o
}

func (o GetActionsValuesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionsValuesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetActionsValuesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetActionsValuesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetActionsValuesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetActionsValuesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetActionsValuesFilter)(nil)).Elem()
}

func (o GetActionsValuesFilterArrayOutput) ToGetActionsValuesFilterArrayOutput() GetActionsValuesFilterArrayOutput {
	return o
}

func (o GetActionsValuesFilterArrayOutput) ToGetActionsValuesFilterArrayOutputWithContext(ctx context.Context) GetActionsValuesFilterArrayOutput {
	return o
}

func (o GetActionsValuesFilterArrayOutput) Index(i pulumi.IntInput) GetActionsValuesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetActionsValuesFilter {
		return vs[0].([]GetActionsValuesFilter)[vs[1].(int)]
	}).(GetActionsValuesFilterOutput)
}

type GetConditionsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetConditionsFilterInput is an input type that accepts GetConditionsFilterArgs and GetConditionsFilterOutput values.
// You can construct a concrete instance of `GetConditionsFilterInput` via:
//
//	GetConditionsFilterArgs{...}
type GetConditionsFilterInput interface {
	pulumi.Input

	ToGetConditionsFilterOutput() GetConditionsFilterOutput
	ToGetConditionsFilterOutputWithContext(context.Context) GetConditionsFilterOutput
}

type GetConditionsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetConditionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConditionsFilter)(nil)).Elem()
}

func (i GetConditionsFilterArgs) ToGetConditionsFilterOutput() GetConditionsFilterOutput {
	return i.ToGetConditionsFilterOutputWithContext(context.Background())
}

func (i GetConditionsFilterArgs) ToGetConditionsFilterOutputWithContext(ctx context.Context) GetConditionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConditionsFilterOutput)
}

// GetConditionsFilterArrayInput is an input type that accepts GetConditionsFilterArray and GetConditionsFilterArrayOutput values.
// You can construct a concrete instance of `GetConditionsFilterArrayInput` via:
//
//	GetConditionsFilterArray{ GetConditionsFilterArgs{...} }
type GetConditionsFilterArrayInput interface {
	pulumi.Input

	ToGetConditionsFilterArrayOutput() GetConditionsFilterArrayOutput
	ToGetConditionsFilterArrayOutputWithContext(context.Context) GetConditionsFilterArrayOutput
}

type GetConditionsFilterArray []GetConditionsFilterInput

func (GetConditionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConditionsFilter)(nil)).Elem()
}

func (i GetConditionsFilterArray) ToGetConditionsFilterArrayOutput() GetConditionsFilterArrayOutput {
	return i.ToGetConditionsFilterArrayOutputWithContext(context.Background())
}

func (i GetConditionsFilterArray) ToGetConditionsFilterArrayOutputWithContext(ctx context.Context) GetConditionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConditionsFilterArrayOutput)
}

type GetConditionsFilterOutput struct{ *pulumi.OutputState }

func (GetConditionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConditionsFilter)(nil)).Elem()
}

func (o GetConditionsFilterOutput) ToGetConditionsFilterOutput() GetConditionsFilterOutput {
	return o
}

func (o GetConditionsFilterOutput) ToGetConditionsFilterOutputWithContext(ctx context.Context) GetConditionsFilterOutput {
	return o
}

func (o GetConditionsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConditionsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetConditionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConditionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetConditionsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetConditionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConditionsFilter)(nil)).Elem()
}

func (o GetConditionsFilterArrayOutput) ToGetConditionsFilterArrayOutput() GetConditionsFilterArrayOutput {
	return o
}

func (o GetConditionsFilterArrayOutput) ToGetConditionsFilterArrayOutputWithContext(ctx context.Context) GetConditionsFilterArrayOutput {
	return o
}

func (o GetConditionsFilterArrayOutput) Index(i pulumi.IntInput) GetConditionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConditionsFilter {
		return vs[0].([]GetConditionsFilter)[vs[1].(int)]
	}).(GetConditionsFilterOutput)
}

type GetConditionsOperatorsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetConditionsOperatorsFilterInput is an input type that accepts GetConditionsOperatorsFilterArgs and GetConditionsOperatorsFilterOutput values.
// You can construct a concrete instance of `GetConditionsOperatorsFilterInput` via:
//
//	GetConditionsOperatorsFilterArgs{...}
type GetConditionsOperatorsFilterInput interface {
	pulumi.Input

	ToGetConditionsOperatorsFilterOutput() GetConditionsOperatorsFilterOutput
	ToGetConditionsOperatorsFilterOutputWithContext(context.Context) GetConditionsOperatorsFilterOutput
}

type GetConditionsOperatorsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetConditionsOperatorsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConditionsOperatorsFilter)(nil)).Elem()
}

func (i GetConditionsOperatorsFilterArgs) ToGetConditionsOperatorsFilterOutput() GetConditionsOperatorsFilterOutput {
	return i.ToGetConditionsOperatorsFilterOutputWithContext(context.Background())
}

func (i GetConditionsOperatorsFilterArgs) ToGetConditionsOperatorsFilterOutputWithContext(ctx context.Context) GetConditionsOperatorsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConditionsOperatorsFilterOutput)
}

// GetConditionsOperatorsFilterArrayInput is an input type that accepts GetConditionsOperatorsFilterArray and GetConditionsOperatorsFilterArrayOutput values.
// You can construct a concrete instance of `GetConditionsOperatorsFilterArrayInput` via:
//
//	GetConditionsOperatorsFilterArray{ GetConditionsOperatorsFilterArgs{...} }
type GetConditionsOperatorsFilterArrayInput interface {
	pulumi.Input

	ToGetConditionsOperatorsFilterArrayOutput() GetConditionsOperatorsFilterArrayOutput
	ToGetConditionsOperatorsFilterArrayOutputWithContext(context.Context) GetConditionsOperatorsFilterArrayOutput
}

type GetConditionsOperatorsFilterArray []GetConditionsOperatorsFilterInput

func (GetConditionsOperatorsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConditionsOperatorsFilter)(nil)).Elem()
}

func (i GetConditionsOperatorsFilterArray) ToGetConditionsOperatorsFilterArrayOutput() GetConditionsOperatorsFilterArrayOutput {
	return i.ToGetConditionsOperatorsFilterArrayOutputWithContext(context.Background())
}

func (i GetConditionsOperatorsFilterArray) ToGetConditionsOperatorsFilterArrayOutputWithContext(ctx context.Context) GetConditionsOperatorsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConditionsOperatorsFilterArrayOutput)
}

type GetConditionsOperatorsFilterOutput struct{ *pulumi.OutputState }

func (GetConditionsOperatorsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConditionsOperatorsFilter)(nil)).Elem()
}

func (o GetConditionsOperatorsFilterOutput) ToGetConditionsOperatorsFilterOutput() GetConditionsOperatorsFilterOutput {
	return o
}

func (o GetConditionsOperatorsFilterOutput) ToGetConditionsOperatorsFilterOutputWithContext(ctx context.Context) GetConditionsOperatorsFilterOutput {
	return o
}

func (o GetConditionsOperatorsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConditionsOperatorsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetConditionsOperatorsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConditionsOperatorsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetConditionsOperatorsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetConditionsOperatorsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConditionsOperatorsFilter)(nil)).Elem()
}

func (o GetConditionsOperatorsFilterArrayOutput) ToGetConditionsOperatorsFilterArrayOutput() GetConditionsOperatorsFilterArrayOutput {
	return o
}

func (o GetConditionsOperatorsFilterArrayOutput) ToGetConditionsOperatorsFilterArrayOutputWithContext(ctx context.Context) GetConditionsOperatorsFilterArrayOutput {
	return o
}

func (o GetConditionsOperatorsFilterArrayOutput) Index(i pulumi.IntInput) GetConditionsOperatorsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConditionsOperatorsFilter {
		return vs[0].([]GetConditionsOperatorsFilter)[vs[1].(int)]
	}).(GetConditionsOperatorsFilterOutput)
}

type GetConditionsValuesFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetConditionsValuesFilterInput is an input type that accepts GetConditionsValuesFilterArgs and GetConditionsValuesFilterOutput values.
// You can construct a concrete instance of `GetConditionsValuesFilterInput` via:
//
//	GetConditionsValuesFilterArgs{...}
type GetConditionsValuesFilterInput interface {
	pulumi.Input

	ToGetConditionsValuesFilterOutput() GetConditionsValuesFilterOutput
	ToGetConditionsValuesFilterOutputWithContext(context.Context) GetConditionsValuesFilterOutput
}

type GetConditionsValuesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetConditionsValuesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConditionsValuesFilter)(nil)).Elem()
}

func (i GetConditionsValuesFilterArgs) ToGetConditionsValuesFilterOutput() GetConditionsValuesFilterOutput {
	return i.ToGetConditionsValuesFilterOutputWithContext(context.Background())
}

func (i GetConditionsValuesFilterArgs) ToGetConditionsValuesFilterOutputWithContext(ctx context.Context) GetConditionsValuesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConditionsValuesFilterOutput)
}

// GetConditionsValuesFilterArrayInput is an input type that accepts GetConditionsValuesFilterArray and GetConditionsValuesFilterArrayOutput values.
// You can construct a concrete instance of `GetConditionsValuesFilterArrayInput` via:
//
//	GetConditionsValuesFilterArray{ GetConditionsValuesFilterArgs{...} }
type GetConditionsValuesFilterArrayInput interface {
	pulumi.Input

	ToGetConditionsValuesFilterArrayOutput() GetConditionsValuesFilterArrayOutput
	ToGetConditionsValuesFilterArrayOutputWithContext(context.Context) GetConditionsValuesFilterArrayOutput
}

type GetConditionsValuesFilterArray []GetConditionsValuesFilterInput

func (GetConditionsValuesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConditionsValuesFilter)(nil)).Elem()
}

func (i GetConditionsValuesFilterArray) ToGetConditionsValuesFilterArrayOutput() GetConditionsValuesFilterArrayOutput {
	return i.ToGetConditionsValuesFilterArrayOutputWithContext(context.Background())
}

func (i GetConditionsValuesFilterArray) ToGetConditionsValuesFilterArrayOutputWithContext(ctx context.Context) GetConditionsValuesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConditionsValuesFilterArrayOutput)
}

type GetConditionsValuesFilterOutput struct{ *pulumi.OutputState }

func (GetConditionsValuesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConditionsValuesFilter)(nil)).Elem()
}

func (o GetConditionsValuesFilterOutput) ToGetConditionsValuesFilterOutput() GetConditionsValuesFilterOutput {
	return o
}

func (o GetConditionsValuesFilterOutput) ToGetConditionsValuesFilterOutputWithContext(ctx context.Context) GetConditionsValuesFilterOutput {
	return o
}

func (o GetConditionsValuesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConditionsValuesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetConditionsValuesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConditionsValuesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetConditionsValuesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetConditionsValuesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConditionsValuesFilter)(nil)).Elem()
}

func (o GetConditionsValuesFilterArrayOutput) ToGetConditionsValuesFilterArrayOutput() GetConditionsValuesFilterArrayOutput {
	return o
}

func (o GetConditionsValuesFilterArrayOutput) ToGetConditionsValuesFilterArrayOutputWithContext(ctx context.Context) GetConditionsValuesFilterArrayOutput {
	return o
}

func (o GetConditionsValuesFilterArrayOutput) Index(i pulumi.IntInput) GetConditionsValuesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConditionsValuesFilter {
		return vs[0].([]GetConditionsValuesFilter)[vs[1].(int)]
	}).(GetConditionsValuesFilterOutput)
}

type GetInstanceProvisioning struct {
	Enabled bool `pulumi:"enabled"`
}

// GetInstanceProvisioningInput is an input type that accepts GetInstanceProvisioningArgs and GetInstanceProvisioningOutput values.
// You can construct a concrete instance of `GetInstanceProvisioningInput` via:
//
//	GetInstanceProvisioningArgs{...}
type GetInstanceProvisioningInput interface {
	pulumi.Input

	ToGetInstanceProvisioningOutput() GetInstanceProvisioningOutput
	ToGetInstanceProvisioningOutputWithContext(context.Context) GetInstanceProvisioningOutput
}

type GetInstanceProvisioningArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetInstanceProvisioningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceProvisioning)(nil)).Elem()
}

func (i GetInstanceProvisioningArgs) ToGetInstanceProvisioningOutput() GetInstanceProvisioningOutput {
	return i.ToGetInstanceProvisioningOutputWithContext(context.Background())
}

func (i GetInstanceProvisioningArgs) ToGetInstanceProvisioningOutputWithContext(ctx context.Context) GetInstanceProvisioningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceProvisioningOutput)
}

func (i GetInstanceProvisioningArgs) ToGetInstanceProvisioningPtrOutput() GetInstanceProvisioningPtrOutput {
	return i.ToGetInstanceProvisioningPtrOutputWithContext(context.Background())
}

func (i GetInstanceProvisioningArgs) ToGetInstanceProvisioningPtrOutputWithContext(ctx context.Context) GetInstanceProvisioningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceProvisioningOutput).ToGetInstanceProvisioningPtrOutputWithContext(ctx)
}

// GetInstanceProvisioningPtrInput is an input type that accepts GetInstanceProvisioningArgs, GetInstanceProvisioningPtr and GetInstanceProvisioningPtrOutput values.
// You can construct a concrete instance of `GetInstanceProvisioningPtrInput` via:
//
//	        GetInstanceProvisioningArgs{...}
//
//	or:
//
//	        nil
type GetInstanceProvisioningPtrInput interface {
	pulumi.Input

	ToGetInstanceProvisioningPtrOutput() GetInstanceProvisioningPtrOutput
	ToGetInstanceProvisioningPtrOutputWithContext(context.Context) GetInstanceProvisioningPtrOutput
}

type getInstanceProvisioningPtrType GetInstanceProvisioningArgs

func GetInstanceProvisioningPtr(v *GetInstanceProvisioningArgs) GetInstanceProvisioningPtrInput {
	return (*getInstanceProvisioningPtrType)(v)
}

func (*getInstanceProvisioningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceProvisioning)(nil)).Elem()
}

func (i *getInstanceProvisioningPtrType) ToGetInstanceProvisioningPtrOutput() GetInstanceProvisioningPtrOutput {
	return i.ToGetInstanceProvisioningPtrOutputWithContext(context.Background())
}

func (i *getInstanceProvisioningPtrType) ToGetInstanceProvisioningPtrOutputWithContext(ctx context.Context) GetInstanceProvisioningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceProvisioningPtrOutput)
}

type GetInstanceProvisioningOutput struct{ *pulumi.OutputState }

func (GetInstanceProvisioningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceProvisioning)(nil)).Elem()
}

func (o GetInstanceProvisioningOutput) ToGetInstanceProvisioningOutput() GetInstanceProvisioningOutput {
	return o
}

func (o GetInstanceProvisioningOutput) ToGetInstanceProvisioningOutputWithContext(ctx context.Context) GetInstanceProvisioningOutput {
	return o
}

func (o GetInstanceProvisioningOutput) ToGetInstanceProvisioningPtrOutput() GetInstanceProvisioningPtrOutput {
	return o.ToGetInstanceProvisioningPtrOutputWithContext(context.Background())
}

func (o GetInstanceProvisioningOutput) ToGetInstanceProvisioningPtrOutputWithContext(ctx context.Context) GetInstanceProvisioningPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetInstanceProvisioning) *GetInstanceProvisioning {
		return &v
	}).(GetInstanceProvisioningPtrOutput)
}

func (o GetInstanceProvisioningOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceProvisioning) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetInstanceProvisioningPtrOutput struct{ *pulumi.OutputState }

func (GetInstanceProvisioningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceProvisioning)(nil)).Elem()
}

func (o GetInstanceProvisioningPtrOutput) ToGetInstanceProvisioningPtrOutput() GetInstanceProvisioningPtrOutput {
	return o
}

func (o GetInstanceProvisioningPtrOutput) ToGetInstanceProvisioningPtrOutputWithContext(ctx context.Context) GetInstanceProvisioningPtrOutput {
	return o
}

func (o GetInstanceProvisioningPtrOutput) Elem() GetInstanceProvisioningOutput {
	return o.ApplyT(func(v *GetInstanceProvisioning) GetInstanceProvisioning {
		if v != nil {
			return *v
		}
		var ret GetInstanceProvisioning
		return ret
	}).(GetInstanceProvisioningOutput)
}

func (o GetInstanceProvisioningPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetInstanceProvisioning) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type GetRulesAction struct {
	Action string   `pulumi:"action"`
	Values []string `pulumi:"values"`
}

// GetRulesActionInput is an input type that accepts GetRulesActionArgs and GetRulesActionOutput values.
// You can construct a concrete instance of `GetRulesActionInput` via:
//
//	GetRulesActionArgs{...}
type GetRulesActionInput interface {
	pulumi.Input

	ToGetRulesActionOutput() GetRulesActionOutput
	ToGetRulesActionOutputWithContext(context.Context) GetRulesActionOutput
}

type GetRulesActionArgs struct {
	Action pulumi.StringInput      `pulumi:"action"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRulesActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesAction)(nil)).Elem()
}

func (i GetRulesActionArgs) ToGetRulesActionOutput() GetRulesActionOutput {
	return i.ToGetRulesActionOutputWithContext(context.Background())
}

func (i GetRulesActionArgs) ToGetRulesActionOutputWithContext(ctx context.Context) GetRulesActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesActionOutput)
}

// GetRulesActionArrayInput is an input type that accepts GetRulesActionArray and GetRulesActionArrayOutput values.
// You can construct a concrete instance of `GetRulesActionArrayInput` via:
//
//	GetRulesActionArray{ GetRulesActionArgs{...} }
type GetRulesActionArrayInput interface {
	pulumi.Input

	ToGetRulesActionArrayOutput() GetRulesActionArrayOutput
	ToGetRulesActionArrayOutputWithContext(context.Context) GetRulesActionArrayOutput
}

type GetRulesActionArray []GetRulesActionInput

func (GetRulesActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesAction)(nil)).Elem()
}

func (i GetRulesActionArray) ToGetRulesActionArrayOutput() GetRulesActionArrayOutput {
	return i.ToGetRulesActionArrayOutputWithContext(context.Background())
}

func (i GetRulesActionArray) ToGetRulesActionArrayOutputWithContext(ctx context.Context) GetRulesActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesActionArrayOutput)
}

type GetRulesActionOutput struct{ *pulumi.OutputState }

func (GetRulesActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesAction)(nil)).Elem()
}

func (o GetRulesActionOutput) ToGetRulesActionOutput() GetRulesActionOutput {
	return o
}

func (o GetRulesActionOutput) ToGetRulesActionOutputWithContext(ctx context.Context) GetRulesActionOutput {
	return o
}

func (o GetRulesActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesAction) string { return v.Action }).(pulumi.StringOutput)
}

func (o GetRulesActionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRulesAction) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRulesActionArrayOutput struct{ *pulumi.OutputState }

func (GetRulesActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesAction)(nil)).Elem()
}

func (o GetRulesActionArrayOutput) ToGetRulesActionArrayOutput() GetRulesActionArrayOutput {
	return o
}

func (o GetRulesActionArrayOutput) ToGetRulesActionArrayOutputWithContext(ctx context.Context) GetRulesActionArrayOutput {
	return o
}

func (o GetRulesActionArrayOutput) Index(i pulumi.IntInput) GetRulesActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRulesAction {
		return vs[0].([]GetRulesAction)[vs[1].(int)]
	}).(GetRulesActionOutput)
}

type GetRulesCondition struct {
	Operator string `pulumi:"operator"`
	Source   string `pulumi:"source"`
	Value    string `pulumi:"value"`
}

// GetRulesConditionInput is an input type that accepts GetRulesConditionArgs and GetRulesConditionOutput values.
// You can construct a concrete instance of `GetRulesConditionInput` via:
//
//	GetRulesConditionArgs{...}
type GetRulesConditionInput interface {
	pulumi.Input

	ToGetRulesConditionOutput() GetRulesConditionOutput
	ToGetRulesConditionOutputWithContext(context.Context) GetRulesConditionOutput
}

type GetRulesConditionArgs struct {
	Operator pulumi.StringInput `pulumi:"operator"`
	Source   pulumi.StringInput `pulumi:"source"`
	Value    pulumi.StringInput `pulumi:"value"`
}

func (GetRulesConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesCondition)(nil)).Elem()
}

func (i GetRulesConditionArgs) ToGetRulesConditionOutput() GetRulesConditionOutput {
	return i.ToGetRulesConditionOutputWithContext(context.Background())
}

func (i GetRulesConditionArgs) ToGetRulesConditionOutputWithContext(ctx context.Context) GetRulesConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesConditionOutput)
}

// GetRulesConditionArrayInput is an input type that accepts GetRulesConditionArray and GetRulesConditionArrayOutput values.
// You can construct a concrete instance of `GetRulesConditionArrayInput` via:
//
//	GetRulesConditionArray{ GetRulesConditionArgs{...} }
type GetRulesConditionArrayInput interface {
	pulumi.Input

	ToGetRulesConditionArrayOutput() GetRulesConditionArrayOutput
	ToGetRulesConditionArrayOutputWithContext(context.Context) GetRulesConditionArrayOutput
}

type GetRulesConditionArray []GetRulesConditionInput

func (GetRulesConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesCondition)(nil)).Elem()
}

func (i GetRulesConditionArray) ToGetRulesConditionArrayOutput() GetRulesConditionArrayOutput {
	return i.ToGetRulesConditionArrayOutputWithContext(context.Background())
}

func (i GetRulesConditionArray) ToGetRulesConditionArrayOutputWithContext(ctx context.Context) GetRulesConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesConditionArrayOutput)
}

type GetRulesConditionOutput struct{ *pulumi.OutputState }

func (GetRulesConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesCondition)(nil)).Elem()
}

func (o GetRulesConditionOutput) ToGetRulesConditionOutput() GetRulesConditionOutput {
	return o
}

func (o GetRulesConditionOutput) ToGetRulesConditionOutputWithContext(ctx context.Context) GetRulesConditionOutput {
	return o
}

func (o GetRulesConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesCondition) string { return v.Operator }).(pulumi.StringOutput)
}

func (o GetRulesConditionOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesCondition) string { return v.Source }).(pulumi.StringOutput)
}

func (o GetRulesConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesCondition) string { return v.Value }).(pulumi.StringOutput)
}

type GetRulesConditionArrayOutput struct{ *pulumi.OutputState }

func (GetRulesConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesCondition)(nil)).Elem()
}

func (o GetRulesConditionArrayOutput) ToGetRulesConditionArrayOutput() GetRulesConditionArrayOutput {
	return o
}

func (o GetRulesConditionArrayOutput) ToGetRulesConditionArrayOutputWithContext(ctx context.Context) GetRulesConditionArrayOutput {
	return o
}

func (o GetRulesConditionArrayOutput) Index(i pulumi.IntInput) GetRulesConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRulesCondition {
		return vs[0].([]GetRulesCondition)[vs[1].(int)]
	}).(GetRulesConditionOutput)
}

type GetRulesFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetRulesFilterInput is an input type that accepts GetRulesFilterArgs and GetRulesFilterOutput values.
// You can construct a concrete instance of `GetRulesFilterInput` via:
//
//	GetRulesFilterArgs{...}
type GetRulesFilterInput interface {
	pulumi.Input

	ToGetRulesFilterOutput() GetRulesFilterOutput
	ToGetRulesFilterOutputWithContext(context.Context) GetRulesFilterOutput
}

type GetRulesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRulesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesFilter)(nil)).Elem()
}

func (i GetRulesFilterArgs) ToGetRulesFilterOutput() GetRulesFilterOutput {
	return i.ToGetRulesFilterOutputWithContext(context.Background())
}

func (i GetRulesFilterArgs) ToGetRulesFilterOutputWithContext(ctx context.Context) GetRulesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesFilterOutput)
}

// GetRulesFilterArrayInput is an input type that accepts GetRulesFilterArray and GetRulesFilterArrayOutput values.
// You can construct a concrete instance of `GetRulesFilterArrayInput` via:
//
//	GetRulesFilterArray{ GetRulesFilterArgs{...} }
type GetRulesFilterArrayInput interface {
	pulumi.Input

	ToGetRulesFilterArrayOutput() GetRulesFilterArrayOutput
	ToGetRulesFilterArrayOutputWithContext(context.Context) GetRulesFilterArrayOutput
}

type GetRulesFilterArray []GetRulesFilterInput

func (GetRulesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesFilter)(nil)).Elem()
}

func (i GetRulesFilterArray) ToGetRulesFilterArrayOutput() GetRulesFilterArrayOutput {
	return i.ToGetRulesFilterArrayOutputWithContext(context.Background())
}

func (i GetRulesFilterArray) ToGetRulesFilterArrayOutputWithContext(ctx context.Context) GetRulesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesFilterArrayOutput)
}

type GetRulesFilterOutput struct{ *pulumi.OutputState }

func (GetRulesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesFilter)(nil)).Elem()
}

func (o GetRulesFilterOutput) ToGetRulesFilterOutput() GetRulesFilterOutput {
	return o
}

func (o GetRulesFilterOutput) ToGetRulesFilterOutputWithContext(ctx context.Context) GetRulesFilterOutput {
	return o
}

func (o GetRulesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRulesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRulesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRulesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRulesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesFilter)(nil)).Elem()
}

func (o GetRulesFilterArrayOutput) ToGetRulesFilterArrayOutput() GetRulesFilterArrayOutput {
	return o
}

func (o GetRulesFilterArrayOutput) ToGetRulesFilterArrayOutputWithContext(ctx context.Context) GetRulesFilterArrayOutput {
	return o
}

func (o GetRulesFilterArrayOutput) Index(i pulumi.IntInput) GetRulesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRulesFilter {
		return vs[0].([]GetRulesFilter)[vs[1].(int)]
	}).(GetRulesFilterOutput)
}

type GetUsersFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetUsersFilterInput is an input type that accepts GetUsersFilterArgs and GetUsersFilterOutput values.
// You can construct a concrete instance of `GetUsersFilterInput` via:
//
//	GetUsersFilterArgs{...}
type GetUsersFilterInput interface {
	pulumi.Input

	ToGetUsersFilterOutput() GetUsersFilterOutput
	ToGetUsersFilterOutputWithContext(context.Context) GetUsersFilterOutput
}

type GetUsersFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetUsersFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersFilter)(nil)).Elem()
}

func (i GetUsersFilterArgs) ToGetUsersFilterOutput() GetUsersFilterOutput {
	return i.ToGetUsersFilterOutputWithContext(context.Background())
}

func (i GetUsersFilterArgs) ToGetUsersFilterOutputWithContext(ctx context.Context) GetUsersFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersFilterOutput)
}

// GetUsersFilterArrayInput is an input type that accepts GetUsersFilterArray and GetUsersFilterArrayOutput values.
// You can construct a concrete instance of `GetUsersFilterArrayInput` via:
//
//	GetUsersFilterArray{ GetUsersFilterArgs{...} }
type GetUsersFilterArrayInput interface {
	pulumi.Input

	ToGetUsersFilterArrayOutput() GetUsersFilterArrayOutput
	ToGetUsersFilterArrayOutputWithContext(context.Context) GetUsersFilterArrayOutput
}

type GetUsersFilterArray []GetUsersFilterInput

func (GetUsersFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersFilter)(nil)).Elem()
}

func (i GetUsersFilterArray) ToGetUsersFilterArrayOutput() GetUsersFilterArrayOutput {
	return i.ToGetUsersFilterArrayOutputWithContext(context.Background())
}

func (i GetUsersFilterArray) ToGetUsersFilterArrayOutputWithContext(ctx context.Context) GetUsersFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersFilterArrayOutput)
}

type GetUsersFilterOutput struct{ *pulumi.OutputState }

func (GetUsersFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersFilter)(nil)).Elem()
}

func (o GetUsersFilterOutput) ToGetUsersFilterOutput() GetUsersFilterOutput {
	return o
}

func (o GetUsersFilterOutput) ToGetUsersFilterOutputWithContext(ctx context.Context) GetUsersFilterOutput {
	return o
}

func (o GetUsersFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetUsersFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUsersFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetUsersFilterArrayOutput struct{ *pulumi.OutputState }

func (GetUsersFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersFilter)(nil)).Elem()
}

func (o GetUsersFilterArrayOutput) ToGetUsersFilterArrayOutput() GetUsersFilterArrayOutput {
	return o
}

func (o GetUsersFilterArrayOutput) ToGetUsersFilterArrayOutputWithContext(ctx context.Context) GetUsersFilterArrayOutput {
	return o
}

func (o GetUsersFilterArrayOutput) Index(i pulumi.IntInput) GetUsersFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersFilter {
		return vs[0].([]GetUsersFilter)[vs[1].(int)]
	}).(GetUsersFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionsFilterInput)(nil)).Elem(), GetActionsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionsFilterArrayInput)(nil)).Elem(), GetActionsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionsValuesFilterInput)(nil)).Elem(), GetActionsValuesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionsValuesFilterArrayInput)(nil)).Elem(), GetActionsValuesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConditionsFilterInput)(nil)).Elem(), GetConditionsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConditionsFilterArrayInput)(nil)).Elem(), GetConditionsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConditionsOperatorsFilterInput)(nil)).Elem(), GetConditionsOperatorsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConditionsOperatorsFilterArrayInput)(nil)).Elem(), GetConditionsOperatorsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConditionsValuesFilterInput)(nil)).Elem(), GetConditionsValuesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConditionsValuesFilterArrayInput)(nil)).Elem(), GetConditionsValuesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceProvisioningInput)(nil)).Elem(), GetInstanceProvisioningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceProvisioningPtrInput)(nil)).Elem(), GetInstanceProvisioningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesActionInput)(nil)).Elem(), GetRulesActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesActionArrayInput)(nil)).Elem(), GetRulesActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesConditionInput)(nil)).Elem(), GetRulesConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesConditionArrayInput)(nil)).Elem(), GetRulesConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesFilterInput)(nil)).Elem(), GetRulesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesFilterArrayInput)(nil)).Elem(), GetRulesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersFilterInput)(nil)).Elem(), GetUsersFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersFilterArrayInput)(nil)).Elem(), GetUsersFilterArray{})
	pulumi.RegisterOutputType(GetActionsFilterOutput{})
	pulumi.RegisterOutputType(GetActionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetActionsValuesFilterOutput{})
	pulumi.RegisterOutputType(GetActionsValuesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetConditionsFilterOutput{})
	pulumi.RegisterOutputType(GetConditionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetConditionsOperatorsFilterOutput{})
	pulumi.RegisterOutputType(GetConditionsOperatorsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetConditionsValuesFilterOutput{})
	pulumi.RegisterOutputType(GetConditionsValuesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceProvisioningOutput{})
	pulumi.RegisterOutputType(GetInstanceProvisioningPtrOutput{})
	pulumi.RegisterOutputType(GetRulesActionOutput{})
	pulumi.RegisterOutputType(GetRulesActionArrayOutput{})
	pulumi.RegisterOutputType(GetRulesConditionOutput{})
	pulumi.RegisterOutputType(GetRulesConditionArrayOutput{})
	pulumi.RegisterOutputType(GetRulesFilterOutput{})
	pulumi.RegisterOutputType(GetRulesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetUsersFilterOutput{})
	pulumi.RegisterOutputType(GetUsersFilterArrayOutput{})
}
