// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apps

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-onelogin/sdk/go/onelogin/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type RulesAction struct {
	// The action to apply
	Action *string `pulumi:"action"`
	// Only applicable to provisioned and set_* actions. Items in the array will be a plain text string or valid value for the selected action.
	Values []string `pulumi:"values"`
}

// RulesActionInput is an input type that accepts RulesActionArgs and RulesActionOutput values.
// You can construct a concrete instance of `RulesActionInput` via:
//
//	RulesActionArgs{...}
type RulesActionInput interface {
	pulumi.Input

	ToRulesActionOutput() RulesActionOutput
	ToRulesActionOutputWithContext(context.Context) RulesActionOutput
}

type RulesActionArgs struct {
	// The action to apply
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Only applicable to provisioned and set_* actions. Items in the array will be a plain text string or valid value for the selected action.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (RulesActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesAction)(nil)).Elem()
}

func (i RulesActionArgs) ToRulesActionOutput() RulesActionOutput {
	return i.ToRulesActionOutputWithContext(context.Background())
}

func (i RulesActionArgs) ToRulesActionOutputWithContext(ctx context.Context) RulesActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesActionOutput)
}

// RulesActionArrayInput is an input type that accepts RulesActionArray and RulesActionArrayOutput values.
// You can construct a concrete instance of `RulesActionArrayInput` via:
//
//	RulesActionArray{ RulesActionArgs{...} }
type RulesActionArrayInput interface {
	pulumi.Input

	ToRulesActionArrayOutput() RulesActionArrayOutput
	ToRulesActionArrayOutputWithContext(context.Context) RulesActionArrayOutput
}

type RulesActionArray []RulesActionInput

func (RulesActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesAction)(nil)).Elem()
}

func (i RulesActionArray) ToRulesActionArrayOutput() RulesActionArrayOutput {
	return i.ToRulesActionArrayOutputWithContext(context.Background())
}

func (i RulesActionArray) ToRulesActionArrayOutputWithContext(ctx context.Context) RulesActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesActionArrayOutput)
}

type RulesActionOutput struct{ *pulumi.OutputState }

func (RulesActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesAction)(nil)).Elem()
}

func (o RulesActionOutput) ToRulesActionOutput() RulesActionOutput {
	return o
}

func (o RulesActionOutput) ToRulesActionOutputWithContext(ctx context.Context) RulesActionOutput {
	return o
}

// The action to apply
func (o RulesActionOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesAction) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Only applicable to provisioned and set_* actions. Items in the array will be a plain text string or valid value for the selected action.
func (o RulesActionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RulesAction) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RulesActionArrayOutput struct{ *pulumi.OutputState }

func (RulesActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesAction)(nil)).Elem()
}

func (o RulesActionArrayOutput) ToRulesActionArrayOutput() RulesActionArrayOutput {
	return o
}

func (o RulesActionArrayOutput) ToRulesActionArrayOutputWithContext(ctx context.Context) RulesActionArrayOutput {
	return o
}

func (o RulesActionArrayOutput) Index(i pulumi.IntInput) RulesActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RulesAction {
		return vs[0].([]RulesAction)[vs[1].(int)]
	}).(RulesActionOutput)
}

type RulesCondition struct {
	// A valid operator for the selected condition source
	Operator *string `pulumi:"operator"`
	// source field to check.
	Source *string `pulumi:"source"`
	// A plain text string or valid value for the selected  condition source
	Value *string `pulumi:"value"`
}

// RulesConditionInput is an input type that accepts RulesConditionArgs and RulesConditionOutput values.
// You can construct a concrete instance of `RulesConditionInput` via:
//
//	RulesConditionArgs{...}
type RulesConditionInput interface {
	pulumi.Input

	ToRulesConditionOutput() RulesConditionOutput
	ToRulesConditionOutputWithContext(context.Context) RulesConditionOutput
}

type RulesConditionArgs struct {
	// A valid operator for the selected condition source
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// source field to check.
	Source pulumi.StringPtrInput `pulumi:"source"`
	// A plain text string or valid value for the selected  condition source
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (RulesConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesCondition)(nil)).Elem()
}

func (i RulesConditionArgs) ToRulesConditionOutput() RulesConditionOutput {
	return i.ToRulesConditionOutputWithContext(context.Background())
}

func (i RulesConditionArgs) ToRulesConditionOutputWithContext(ctx context.Context) RulesConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesConditionOutput)
}

// RulesConditionArrayInput is an input type that accepts RulesConditionArray and RulesConditionArrayOutput values.
// You can construct a concrete instance of `RulesConditionArrayInput` via:
//
//	RulesConditionArray{ RulesConditionArgs{...} }
type RulesConditionArrayInput interface {
	pulumi.Input

	ToRulesConditionArrayOutput() RulesConditionArrayOutput
	ToRulesConditionArrayOutputWithContext(context.Context) RulesConditionArrayOutput
}

type RulesConditionArray []RulesConditionInput

func (RulesConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesCondition)(nil)).Elem()
}

func (i RulesConditionArray) ToRulesConditionArrayOutput() RulesConditionArrayOutput {
	return i.ToRulesConditionArrayOutputWithContext(context.Background())
}

func (i RulesConditionArray) ToRulesConditionArrayOutputWithContext(ctx context.Context) RulesConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesConditionArrayOutput)
}

type RulesConditionOutput struct{ *pulumi.OutputState }

func (RulesConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesCondition)(nil)).Elem()
}

func (o RulesConditionOutput) ToRulesConditionOutput() RulesConditionOutput {
	return o
}

func (o RulesConditionOutput) ToRulesConditionOutputWithContext(ctx context.Context) RulesConditionOutput {
	return o
}

// A valid operator for the selected condition source
func (o RulesConditionOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesCondition) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// source field to check.
func (o RulesConditionOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesCondition) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// A plain text string or valid value for the selected  condition source
func (o RulesConditionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesCondition) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RulesConditionArrayOutput struct{ *pulumi.OutputState }

func (RulesConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesCondition)(nil)).Elem()
}

func (o RulesConditionArrayOutput) ToRulesConditionArrayOutput() RulesConditionArrayOutput {
	return o
}

func (o RulesConditionArrayOutput) ToRulesConditionArrayOutputWithContext(ctx context.Context) RulesConditionArrayOutput {
	return o
}

func (o RulesConditionArrayOutput) Index(i pulumi.IntInput) RulesConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RulesCondition {
		return vs[0].([]RulesCondition)[vs[1].(int)]
	}).(RulesConditionOutput)
}

type GetActionsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetActionsFilterInput is an input type that accepts GetActionsFilterArgs and GetActionsFilterOutput values.
// You can construct a concrete instance of `GetActionsFilterInput` via:
//
//	GetActionsFilterArgs{...}
type GetActionsFilterInput interface {
	pulumi.Input

	ToGetActionsFilterOutput() GetActionsFilterOutput
	ToGetActionsFilterOutputWithContext(context.Context) GetActionsFilterOutput
}

type GetActionsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetActionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionsFilter)(nil)).Elem()
}

func (i GetActionsFilterArgs) ToGetActionsFilterOutput() GetActionsFilterOutput {
	return i.ToGetActionsFilterOutputWithContext(context.Background())
}

func (i GetActionsFilterArgs) ToGetActionsFilterOutputWithContext(ctx context.Context) GetActionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionsFilterOutput)
}

// GetActionsFilterArrayInput is an input type that accepts GetActionsFilterArray and GetActionsFilterArrayOutput values.
// You can construct a concrete instance of `GetActionsFilterArrayInput` via:
//
//	GetActionsFilterArray{ GetActionsFilterArgs{...} }
type GetActionsFilterArrayInput interface {
	pulumi.Input

	ToGetActionsFilterArrayOutput() GetActionsFilterArrayOutput
	ToGetActionsFilterArrayOutputWithContext(context.Context) GetActionsFilterArrayOutput
}

type GetActionsFilterArray []GetActionsFilterInput

func (GetActionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetActionsFilter)(nil)).Elem()
}

func (i GetActionsFilterArray) ToGetActionsFilterArrayOutput() GetActionsFilterArrayOutput {
	return i.ToGetActionsFilterArrayOutputWithContext(context.Background())
}

func (i GetActionsFilterArray) ToGetActionsFilterArrayOutputWithContext(ctx context.Context) GetActionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionsFilterArrayOutput)
}

type GetActionsFilterOutput struct{ *pulumi.OutputState }

func (GetActionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionsFilter)(nil)).Elem()
}

func (o GetActionsFilterOutput) ToGetActionsFilterOutput() GetActionsFilterOutput {
	return o
}

func (o GetActionsFilterOutput) ToGetActionsFilterOutputWithContext(ctx context.Context) GetActionsFilterOutput {
	return o
}

func (o GetActionsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetActionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetActionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetActionsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetActionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetActionsFilter)(nil)).Elem()
}

func (o GetActionsFilterArrayOutput) ToGetActionsFilterArrayOutput() GetActionsFilterArrayOutput {
	return o
}

func (o GetActionsFilterArrayOutput) ToGetActionsFilterArrayOutputWithContext(ctx context.Context) GetActionsFilterArrayOutput {
	return o
}

func (o GetActionsFilterArrayOutput) Index(i pulumi.IntInput) GetActionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetActionsFilter {
		return vs[0].([]GetActionsFilter)[vs[1].(int)]
	}).(GetActionsFilterOutput)
}

type GetActionsValuesFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetActionsValuesFilterInput is an input type that accepts GetActionsValuesFilterArgs and GetActionsValuesFilterOutput values.
// You can construct a concrete instance of `GetActionsValuesFilterInput` via:
//
//	GetActionsValuesFilterArgs{...}
type GetActionsValuesFilterInput interface {
	pulumi.Input

	ToGetActionsValuesFilterOutput() GetActionsValuesFilterOutput
	ToGetActionsValuesFilterOutputWithContext(context.Context) GetActionsValuesFilterOutput
}

type GetActionsValuesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetActionsValuesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionsValuesFilter)(nil)).Elem()
}

func (i GetActionsValuesFilterArgs) ToGetActionsValuesFilterOutput() GetActionsValuesFilterOutput {
	return i.ToGetActionsValuesFilterOutputWithContext(context.Background())
}

func (i GetActionsValuesFilterArgs) ToGetActionsValuesFilterOutputWithContext(ctx context.Context) GetActionsValuesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionsValuesFilterOutput)
}

// GetActionsValuesFilterArrayInput is an input type that accepts GetActionsValuesFilterArray and GetActionsValuesFilterArrayOutput values.
// You can construct a concrete instance of `GetActionsValuesFilterArrayInput` via:
//
//	GetActionsValuesFilterArray{ GetActionsValuesFilterArgs{...} }
type GetActionsValuesFilterArrayInput interface {
	pulumi.Input

	ToGetActionsValuesFilterArrayOutput() GetActionsValuesFilterArrayOutput
	ToGetActionsValuesFilterArrayOutputWithContext(context.Context) GetActionsValuesFilterArrayOutput
}

type GetActionsValuesFilterArray []GetActionsValuesFilterInput

func (GetActionsValuesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetActionsValuesFilter)(nil)).Elem()
}

func (i GetActionsValuesFilterArray) ToGetActionsValuesFilterArrayOutput() GetActionsValuesFilterArrayOutput {
	return i.ToGetActionsValuesFilterArrayOutputWithContext(context.Background())
}

func (i GetActionsValuesFilterArray) ToGetActionsValuesFilterArrayOutputWithContext(ctx context.Context) GetActionsValuesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionsValuesFilterArrayOutput)
}

type GetActionsValuesFilterOutput struct{ *pulumi.OutputState }

func (GetActionsValuesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionsValuesFilter)(nil)).Elem()
}

func (o GetActionsValuesFilterOutput) ToGetActionsValuesFilterOutput() GetActionsValuesFilterOutput {
	return o
}

func (o GetActionsValuesFilterOutput) ToGetActionsValuesFilterOutputWithContext(ctx context.Context) GetActionsValuesFilterOutput {
	return o
}

func (o GetActionsValuesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionsValuesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetActionsValuesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetActionsValuesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetActionsValuesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetActionsValuesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetActionsValuesFilter)(nil)).Elem()
}

func (o GetActionsValuesFilterArrayOutput) ToGetActionsValuesFilterArrayOutput() GetActionsValuesFilterArrayOutput {
	return o
}

func (o GetActionsValuesFilterArrayOutput) ToGetActionsValuesFilterArrayOutputWithContext(ctx context.Context) GetActionsValuesFilterArrayOutput {
	return o
}

func (o GetActionsValuesFilterArrayOutput) Index(i pulumi.IntInput) GetActionsValuesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetActionsValuesFilter {
		return vs[0].([]GetActionsValuesFilter)[vs[1].(int)]
	}).(GetActionsValuesFilterOutput)
}

type GetConditionsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetConditionsFilterInput is an input type that accepts GetConditionsFilterArgs and GetConditionsFilterOutput values.
// You can construct a concrete instance of `GetConditionsFilterInput` via:
//
//	GetConditionsFilterArgs{...}
type GetConditionsFilterInput interface {
	pulumi.Input

	ToGetConditionsFilterOutput() GetConditionsFilterOutput
	ToGetConditionsFilterOutputWithContext(context.Context) GetConditionsFilterOutput
}

type GetConditionsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetConditionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConditionsFilter)(nil)).Elem()
}

func (i GetConditionsFilterArgs) ToGetConditionsFilterOutput() GetConditionsFilterOutput {
	return i.ToGetConditionsFilterOutputWithContext(context.Background())
}

func (i GetConditionsFilterArgs) ToGetConditionsFilterOutputWithContext(ctx context.Context) GetConditionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConditionsFilterOutput)
}

// GetConditionsFilterArrayInput is an input type that accepts GetConditionsFilterArray and GetConditionsFilterArrayOutput values.
// You can construct a concrete instance of `GetConditionsFilterArrayInput` via:
//
//	GetConditionsFilterArray{ GetConditionsFilterArgs{...} }
type GetConditionsFilterArrayInput interface {
	pulumi.Input

	ToGetConditionsFilterArrayOutput() GetConditionsFilterArrayOutput
	ToGetConditionsFilterArrayOutputWithContext(context.Context) GetConditionsFilterArrayOutput
}

type GetConditionsFilterArray []GetConditionsFilterInput

func (GetConditionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConditionsFilter)(nil)).Elem()
}

func (i GetConditionsFilterArray) ToGetConditionsFilterArrayOutput() GetConditionsFilterArrayOutput {
	return i.ToGetConditionsFilterArrayOutputWithContext(context.Background())
}

func (i GetConditionsFilterArray) ToGetConditionsFilterArrayOutputWithContext(ctx context.Context) GetConditionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConditionsFilterArrayOutput)
}

type GetConditionsFilterOutput struct{ *pulumi.OutputState }

func (GetConditionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConditionsFilter)(nil)).Elem()
}

func (o GetConditionsFilterOutput) ToGetConditionsFilterOutput() GetConditionsFilterOutput {
	return o
}

func (o GetConditionsFilterOutput) ToGetConditionsFilterOutputWithContext(ctx context.Context) GetConditionsFilterOutput {
	return o
}

func (o GetConditionsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConditionsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetConditionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConditionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetConditionsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetConditionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConditionsFilter)(nil)).Elem()
}

func (o GetConditionsFilterArrayOutput) ToGetConditionsFilterArrayOutput() GetConditionsFilterArrayOutput {
	return o
}

func (o GetConditionsFilterArrayOutput) ToGetConditionsFilterArrayOutputWithContext(ctx context.Context) GetConditionsFilterArrayOutput {
	return o
}

func (o GetConditionsFilterArrayOutput) Index(i pulumi.IntInput) GetConditionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConditionsFilter {
		return vs[0].([]GetConditionsFilter)[vs[1].(int)]
	}).(GetConditionsFilterOutput)
}

type GetConditionsOperatorsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetConditionsOperatorsFilterInput is an input type that accepts GetConditionsOperatorsFilterArgs and GetConditionsOperatorsFilterOutput values.
// You can construct a concrete instance of `GetConditionsOperatorsFilterInput` via:
//
//	GetConditionsOperatorsFilterArgs{...}
type GetConditionsOperatorsFilterInput interface {
	pulumi.Input

	ToGetConditionsOperatorsFilterOutput() GetConditionsOperatorsFilterOutput
	ToGetConditionsOperatorsFilterOutputWithContext(context.Context) GetConditionsOperatorsFilterOutput
}

type GetConditionsOperatorsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetConditionsOperatorsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConditionsOperatorsFilter)(nil)).Elem()
}

func (i GetConditionsOperatorsFilterArgs) ToGetConditionsOperatorsFilterOutput() GetConditionsOperatorsFilterOutput {
	return i.ToGetConditionsOperatorsFilterOutputWithContext(context.Background())
}

func (i GetConditionsOperatorsFilterArgs) ToGetConditionsOperatorsFilterOutputWithContext(ctx context.Context) GetConditionsOperatorsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConditionsOperatorsFilterOutput)
}

// GetConditionsOperatorsFilterArrayInput is an input type that accepts GetConditionsOperatorsFilterArray and GetConditionsOperatorsFilterArrayOutput values.
// You can construct a concrete instance of `GetConditionsOperatorsFilterArrayInput` via:
//
//	GetConditionsOperatorsFilterArray{ GetConditionsOperatorsFilterArgs{...} }
type GetConditionsOperatorsFilterArrayInput interface {
	pulumi.Input

	ToGetConditionsOperatorsFilterArrayOutput() GetConditionsOperatorsFilterArrayOutput
	ToGetConditionsOperatorsFilterArrayOutputWithContext(context.Context) GetConditionsOperatorsFilterArrayOutput
}

type GetConditionsOperatorsFilterArray []GetConditionsOperatorsFilterInput

func (GetConditionsOperatorsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConditionsOperatorsFilter)(nil)).Elem()
}

func (i GetConditionsOperatorsFilterArray) ToGetConditionsOperatorsFilterArrayOutput() GetConditionsOperatorsFilterArrayOutput {
	return i.ToGetConditionsOperatorsFilterArrayOutputWithContext(context.Background())
}

func (i GetConditionsOperatorsFilterArray) ToGetConditionsOperatorsFilterArrayOutputWithContext(ctx context.Context) GetConditionsOperatorsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConditionsOperatorsFilterArrayOutput)
}

type GetConditionsOperatorsFilterOutput struct{ *pulumi.OutputState }

func (GetConditionsOperatorsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConditionsOperatorsFilter)(nil)).Elem()
}

func (o GetConditionsOperatorsFilterOutput) ToGetConditionsOperatorsFilterOutput() GetConditionsOperatorsFilterOutput {
	return o
}

func (o GetConditionsOperatorsFilterOutput) ToGetConditionsOperatorsFilterOutputWithContext(ctx context.Context) GetConditionsOperatorsFilterOutput {
	return o
}

func (o GetConditionsOperatorsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConditionsOperatorsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetConditionsOperatorsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConditionsOperatorsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetConditionsOperatorsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetConditionsOperatorsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConditionsOperatorsFilter)(nil)).Elem()
}

func (o GetConditionsOperatorsFilterArrayOutput) ToGetConditionsOperatorsFilterArrayOutput() GetConditionsOperatorsFilterArrayOutput {
	return o
}

func (o GetConditionsOperatorsFilterArrayOutput) ToGetConditionsOperatorsFilterArrayOutputWithContext(ctx context.Context) GetConditionsOperatorsFilterArrayOutput {
	return o
}

func (o GetConditionsOperatorsFilterArrayOutput) Index(i pulumi.IntInput) GetConditionsOperatorsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConditionsOperatorsFilter {
		return vs[0].([]GetConditionsOperatorsFilter)[vs[1].(int)]
	}).(GetConditionsOperatorsFilterOutput)
}

type GetInstanceConfiguration struct {
	// OIDC Apps only Number of minutes the refresh token will be valid for.
	AccessTokenExpirationMinutes int `pulumi:"accessTokenExpirationMinutes"`
	// OIDC Apps only The OpenId Connect Client Id. Note that clientSecret is only returned after Creating an App.
	LoginUrl       string `pulumi:"loginUrl"`
	OidcApiVersion string `pulumi:"oidcApiVersion"`
	// OIDC Apps Only
	//   - 0: Web
	//   - 1: Native/Mobile
	OidcApplicationType int `pulumi:"oidcApplicationType"`
	// OIDC Apps only
	OidcEncryptionKey string `pulumi:"oidcEncryptionKey"`
	// OIDC Apps only
	PostLogoutRedirectUri string `pulumi:"postLogoutRedirectUri"`
	// OIDC Apps only Comma or newline separated list of valid redirect uris for the OpenId Connect Authorization Code flow.
	RedirectUri string `pulumi:"redirectUri"`
	// Number of minutes the refresh token will be valid for.
	RefreshTokenExpirationMinutes int `pulumi:"refreshTokenExpirationMinutes"`
	// OIDC Apps only
	//  - 0: Basic
	//  - 1: POST
	//  - 2: None / PKCE
	TokenEndpointAuthMethod int `pulumi:"tokenEndpointAuthMethod"`
}

// GetInstanceConfigurationInput is an input type that accepts GetInstanceConfigurationArgs and GetInstanceConfigurationOutput values.
// You can construct a concrete instance of `GetInstanceConfigurationInput` via:
//
//	GetInstanceConfigurationArgs{...}
type GetInstanceConfigurationInput interface {
	pulumi.Input

	ToGetInstanceConfigurationOutput() GetInstanceConfigurationOutput
	ToGetInstanceConfigurationOutputWithContext(context.Context) GetInstanceConfigurationOutput
}

type GetInstanceConfigurationArgs struct {
	// OIDC Apps only Number of minutes the refresh token will be valid for.
	AccessTokenExpirationMinutes pulumi.IntInput `pulumi:"accessTokenExpirationMinutes"`
	// OIDC Apps only The OpenId Connect Client Id. Note that clientSecret is only returned after Creating an App.
	LoginUrl       pulumi.StringInput `pulumi:"loginUrl"`
	OidcApiVersion pulumi.StringInput `pulumi:"oidcApiVersion"`
	// OIDC Apps Only
	//   - 0: Web
	//   - 1: Native/Mobile
	OidcApplicationType pulumi.IntInput `pulumi:"oidcApplicationType"`
	// OIDC Apps only
	OidcEncryptionKey pulumi.StringInput `pulumi:"oidcEncryptionKey"`
	// OIDC Apps only
	PostLogoutRedirectUri pulumi.StringInput `pulumi:"postLogoutRedirectUri"`
	// OIDC Apps only Comma or newline separated list of valid redirect uris for the OpenId Connect Authorization Code flow.
	RedirectUri pulumi.StringInput `pulumi:"redirectUri"`
	// Number of minutes the refresh token will be valid for.
	RefreshTokenExpirationMinutes pulumi.IntInput `pulumi:"refreshTokenExpirationMinutes"`
	// OIDC Apps only
	//  - 0: Basic
	//  - 1: POST
	//  - 2: None / PKCE
	TokenEndpointAuthMethod pulumi.IntInput `pulumi:"tokenEndpointAuthMethod"`
}

func (GetInstanceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceConfiguration)(nil)).Elem()
}

func (i GetInstanceConfigurationArgs) ToGetInstanceConfigurationOutput() GetInstanceConfigurationOutput {
	return i.ToGetInstanceConfigurationOutputWithContext(context.Background())
}

func (i GetInstanceConfigurationArgs) ToGetInstanceConfigurationOutputWithContext(ctx context.Context) GetInstanceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceConfigurationOutput)
}

func (i GetInstanceConfigurationArgs) ToGetInstanceConfigurationPtrOutput() GetInstanceConfigurationPtrOutput {
	return i.ToGetInstanceConfigurationPtrOutputWithContext(context.Background())
}

func (i GetInstanceConfigurationArgs) ToGetInstanceConfigurationPtrOutputWithContext(ctx context.Context) GetInstanceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceConfigurationOutput).ToGetInstanceConfigurationPtrOutputWithContext(ctx)
}

// GetInstanceConfigurationPtrInput is an input type that accepts GetInstanceConfigurationArgs, GetInstanceConfigurationPtr and GetInstanceConfigurationPtrOutput values.
// You can construct a concrete instance of `GetInstanceConfigurationPtrInput` via:
//
//	        GetInstanceConfigurationArgs{...}
//
//	or:
//
//	        nil
type GetInstanceConfigurationPtrInput interface {
	pulumi.Input

	ToGetInstanceConfigurationPtrOutput() GetInstanceConfigurationPtrOutput
	ToGetInstanceConfigurationPtrOutputWithContext(context.Context) GetInstanceConfigurationPtrOutput
}

type getInstanceConfigurationPtrType GetInstanceConfigurationArgs

func GetInstanceConfigurationPtr(v *GetInstanceConfigurationArgs) GetInstanceConfigurationPtrInput {
	return (*getInstanceConfigurationPtrType)(v)
}

func (*getInstanceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceConfiguration)(nil)).Elem()
}

func (i *getInstanceConfigurationPtrType) ToGetInstanceConfigurationPtrOutput() GetInstanceConfigurationPtrOutput {
	return i.ToGetInstanceConfigurationPtrOutputWithContext(context.Background())
}

func (i *getInstanceConfigurationPtrType) ToGetInstanceConfigurationPtrOutputWithContext(ctx context.Context) GetInstanceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceConfigurationPtrOutput)
}

type GetInstanceConfigurationOutput struct{ *pulumi.OutputState }

func (GetInstanceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceConfiguration)(nil)).Elem()
}

func (o GetInstanceConfigurationOutput) ToGetInstanceConfigurationOutput() GetInstanceConfigurationOutput {
	return o
}

func (o GetInstanceConfigurationOutput) ToGetInstanceConfigurationOutputWithContext(ctx context.Context) GetInstanceConfigurationOutput {
	return o
}

func (o GetInstanceConfigurationOutput) ToGetInstanceConfigurationPtrOutput() GetInstanceConfigurationPtrOutput {
	return o.ToGetInstanceConfigurationPtrOutputWithContext(context.Background())
}

func (o GetInstanceConfigurationOutput) ToGetInstanceConfigurationPtrOutputWithContext(ctx context.Context) GetInstanceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetInstanceConfiguration) *GetInstanceConfiguration {
		return &v
	}).(GetInstanceConfigurationPtrOutput)
}

// OIDC Apps only Number of minutes the refresh token will be valid for.
func (o GetInstanceConfigurationOutput) AccessTokenExpirationMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceConfiguration) int { return v.AccessTokenExpirationMinutes }).(pulumi.IntOutput)
}

// OIDC Apps only The OpenId Connect Client Id. Note that clientSecret is only returned after Creating an App.
func (o GetInstanceConfigurationOutput) LoginUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceConfiguration) string { return v.LoginUrl }).(pulumi.StringOutput)
}

func (o GetInstanceConfigurationOutput) OidcApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceConfiguration) string { return v.OidcApiVersion }).(pulumi.StringOutput)
}

// OIDC Apps Only
//   - 0: Web
//   - 1: Native/Mobile
func (o GetInstanceConfigurationOutput) OidcApplicationType() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceConfiguration) int { return v.OidcApplicationType }).(pulumi.IntOutput)
}

// OIDC Apps only
func (o GetInstanceConfigurationOutput) OidcEncryptionKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceConfiguration) string { return v.OidcEncryptionKey }).(pulumi.StringOutput)
}

// OIDC Apps only
func (o GetInstanceConfigurationOutput) PostLogoutRedirectUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceConfiguration) string { return v.PostLogoutRedirectUri }).(pulumi.StringOutput)
}

// OIDC Apps only Comma or newline separated list of valid redirect uris for the OpenId Connect Authorization Code flow.
func (o GetInstanceConfigurationOutput) RedirectUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceConfiguration) string { return v.RedirectUri }).(pulumi.StringOutput)
}

// Number of minutes the refresh token will be valid for.
func (o GetInstanceConfigurationOutput) RefreshTokenExpirationMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceConfiguration) int { return v.RefreshTokenExpirationMinutes }).(pulumi.IntOutput)
}

// OIDC Apps only
//   - 0: Basic
//   - 1: POST
//   - 2: None / PKCE
func (o GetInstanceConfigurationOutput) TokenEndpointAuthMethod() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceConfiguration) int { return v.TokenEndpointAuthMethod }).(pulumi.IntOutput)
}

type GetInstanceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (GetInstanceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceConfiguration)(nil)).Elem()
}

func (o GetInstanceConfigurationPtrOutput) ToGetInstanceConfigurationPtrOutput() GetInstanceConfigurationPtrOutput {
	return o
}

func (o GetInstanceConfigurationPtrOutput) ToGetInstanceConfigurationPtrOutputWithContext(ctx context.Context) GetInstanceConfigurationPtrOutput {
	return o
}

func (o GetInstanceConfigurationPtrOutput) Elem() GetInstanceConfigurationOutput {
	return o.ApplyT(func(v *GetInstanceConfiguration) GetInstanceConfiguration {
		if v != nil {
			return *v
		}
		var ret GetInstanceConfiguration
		return ret
	}).(GetInstanceConfigurationOutput)
}

// OIDC Apps only Number of minutes the refresh token will be valid for.
func (o GetInstanceConfigurationPtrOutput) AccessTokenExpirationMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetInstanceConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.AccessTokenExpirationMinutes
	}).(pulumi.IntPtrOutput)
}

// OIDC Apps only The OpenId Connect Client Id. Note that clientSecret is only returned after Creating an App.
func (o GetInstanceConfigurationPtrOutput) LoginUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.LoginUrl
	}).(pulumi.StringPtrOutput)
}

func (o GetInstanceConfigurationPtrOutput) OidcApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.OidcApiVersion
	}).(pulumi.StringPtrOutput)
}

// OIDC Apps Only
//   - 0: Web
//   - 1: Native/Mobile
func (o GetInstanceConfigurationPtrOutput) OidcApplicationType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetInstanceConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.OidcApplicationType
	}).(pulumi.IntPtrOutput)
}

// OIDC Apps only
func (o GetInstanceConfigurationPtrOutput) OidcEncryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.OidcEncryptionKey
	}).(pulumi.StringPtrOutput)
}

// OIDC Apps only
func (o GetInstanceConfigurationPtrOutput) PostLogoutRedirectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.PostLogoutRedirectUri
	}).(pulumi.StringPtrOutput)
}

// OIDC Apps only Comma or newline separated list of valid redirect uris for the OpenId Connect Authorization Code flow.
func (o GetInstanceConfigurationPtrOutput) RedirectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RedirectUri
	}).(pulumi.StringPtrOutput)
}

// Number of minutes the refresh token will be valid for.
func (o GetInstanceConfigurationPtrOutput) RefreshTokenExpirationMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetInstanceConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.RefreshTokenExpirationMinutes
	}).(pulumi.IntPtrOutput)
}

// OIDC Apps only
//   - 0: Basic
//   - 1: POST
//   - 2: None / PKCE
func (o GetInstanceConfigurationPtrOutput) TokenEndpointAuthMethod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetInstanceConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.TokenEndpointAuthMethod
	}).(pulumi.IntPtrOutput)
}

type GetInstanceEnforcementPoint struct {
	// The URL path evaluation is case insensitive by default. Resources hosted on web servers such as Apache, NGINX and Java EE are case sensitive paths. Web servers such as Microsoft IIS are not case-sensitive.
	CaseSensitive bool `pulumi:"caseSensitive"`
	// If access is conditional, the conditions that must evaluate to true to allow access to a resource. For example, to require the user must be authenticated and have either the role Admin or User
	Conditions string `pulumi:"conditions"`
	// The root path to the application, often the name of the application. Can be any name, path or just a slash (“/”). The context root uniquely identifies the application within the enforcement point.
	ContextRoot string `pulumi:"contextRoot"`
	// The location within the context root to which the browser will be redirected for IdP-initiated single sign-on. For example, the landing page might be an index page in the context root such as index.html or default.aspx. The landing page cannot begin with a slash and must use valid URL characters.
	LandingPage string `pulumi:"landingPage"`
	// Specify to always `allow`, `deny` access to resources, of if access is `conditional`.
	Permissions string `pulumi:"permissions"`
	// Require user authentication to access any resource protected by this enforcement point.
	RequireSitewideAuthentication bool `pulumi:"requireSitewideAuthentication"`
	// Array of resource objects
	Resources []GetInstanceEnforcementPointResource `pulumi:"resources"`
	// unit: - 0 = Seconds - 1 = Minutes - 2 = Hours value: - When Unit = 0 or 1 value must be 0-60 - When Unit = 2 value must be 0-24
	SessionExpiryFixed GetInstanceEnforcementPointSessionExpiryFixed `pulumi:"sessionExpiryFixed"`
	// unit: - 0 = Seconds - 1 = Minutes - 2 = Hours value: - When Unit = 0 or 1 value must be 0-60 - When Unit = 2 value must be 0-24
	SessionExpiryInactivity GetInstanceEnforcementPointSessionExpiryInactivity `pulumi:"sessionExpiryInactivity"`
	// A fully-qualified URL to the internal application including scheme, authority and path. The target host authority must be an IP address, not a hostname.
	Target string `pulumi:"target"`
	// Can only be set on create. Access Gateway Token.
	Token string `pulumi:"token"`
	// Use the target host header as opposed to the original gateway or upstream host header.
	UseTargetHostHeader bool `pulumi:"useTargetHostHeader"`
	// A comma-delimited list of one or more virtual hosts that map to applications assigned to the enforcement point. A VHOST may be a host name or an IP address. VHOST distinguish between applications that are at the same context root.
	Vhost string `pulumi:"vhost"`
}

// GetInstanceEnforcementPointInput is an input type that accepts GetInstanceEnforcementPointArgs and GetInstanceEnforcementPointOutput values.
// You can construct a concrete instance of `GetInstanceEnforcementPointInput` via:
//
//	GetInstanceEnforcementPointArgs{...}
type GetInstanceEnforcementPointInput interface {
	pulumi.Input

	ToGetInstanceEnforcementPointOutput() GetInstanceEnforcementPointOutput
	ToGetInstanceEnforcementPointOutputWithContext(context.Context) GetInstanceEnforcementPointOutput
}

type GetInstanceEnforcementPointArgs struct {
	// The URL path evaluation is case insensitive by default. Resources hosted on web servers such as Apache, NGINX and Java EE are case sensitive paths. Web servers such as Microsoft IIS are not case-sensitive.
	CaseSensitive pulumi.BoolInput `pulumi:"caseSensitive"`
	// If access is conditional, the conditions that must evaluate to true to allow access to a resource. For example, to require the user must be authenticated and have either the role Admin or User
	Conditions pulumi.StringInput `pulumi:"conditions"`
	// The root path to the application, often the name of the application. Can be any name, path or just a slash (“/”). The context root uniquely identifies the application within the enforcement point.
	ContextRoot pulumi.StringInput `pulumi:"contextRoot"`
	// The location within the context root to which the browser will be redirected for IdP-initiated single sign-on. For example, the landing page might be an index page in the context root such as index.html or default.aspx. The landing page cannot begin with a slash and must use valid URL characters.
	LandingPage pulumi.StringInput `pulumi:"landingPage"`
	// Specify to always `allow`, `deny` access to resources, of if access is `conditional`.
	Permissions pulumi.StringInput `pulumi:"permissions"`
	// Require user authentication to access any resource protected by this enforcement point.
	RequireSitewideAuthentication pulumi.BoolInput `pulumi:"requireSitewideAuthentication"`
	// Array of resource objects
	Resources GetInstanceEnforcementPointResourceArrayInput `pulumi:"resources"`
	// unit: - 0 = Seconds - 1 = Minutes - 2 = Hours value: - When Unit = 0 or 1 value must be 0-60 - When Unit = 2 value must be 0-24
	SessionExpiryFixed GetInstanceEnforcementPointSessionExpiryFixedInput `pulumi:"sessionExpiryFixed"`
	// unit: - 0 = Seconds - 1 = Minutes - 2 = Hours value: - When Unit = 0 or 1 value must be 0-60 - When Unit = 2 value must be 0-24
	SessionExpiryInactivity GetInstanceEnforcementPointSessionExpiryInactivityInput `pulumi:"sessionExpiryInactivity"`
	// A fully-qualified URL to the internal application including scheme, authority and path. The target host authority must be an IP address, not a hostname.
	Target pulumi.StringInput `pulumi:"target"`
	// Can only be set on create. Access Gateway Token.
	Token pulumi.StringInput `pulumi:"token"`
	// Use the target host header as opposed to the original gateway or upstream host header.
	UseTargetHostHeader pulumi.BoolInput `pulumi:"useTargetHostHeader"`
	// A comma-delimited list of one or more virtual hosts that map to applications assigned to the enforcement point. A VHOST may be a host name or an IP address. VHOST distinguish between applications that are at the same context root.
	Vhost pulumi.StringInput `pulumi:"vhost"`
}

func (GetInstanceEnforcementPointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEnforcementPoint)(nil)).Elem()
}

func (i GetInstanceEnforcementPointArgs) ToGetInstanceEnforcementPointOutput() GetInstanceEnforcementPointOutput {
	return i.ToGetInstanceEnforcementPointOutputWithContext(context.Background())
}

func (i GetInstanceEnforcementPointArgs) ToGetInstanceEnforcementPointOutputWithContext(ctx context.Context) GetInstanceEnforcementPointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEnforcementPointOutput)
}

func (i GetInstanceEnforcementPointArgs) ToGetInstanceEnforcementPointPtrOutput() GetInstanceEnforcementPointPtrOutput {
	return i.ToGetInstanceEnforcementPointPtrOutputWithContext(context.Background())
}

func (i GetInstanceEnforcementPointArgs) ToGetInstanceEnforcementPointPtrOutputWithContext(ctx context.Context) GetInstanceEnforcementPointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEnforcementPointOutput).ToGetInstanceEnforcementPointPtrOutputWithContext(ctx)
}

// GetInstanceEnforcementPointPtrInput is an input type that accepts GetInstanceEnforcementPointArgs, GetInstanceEnforcementPointPtr and GetInstanceEnforcementPointPtrOutput values.
// You can construct a concrete instance of `GetInstanceEnforcementPointPtrInput` via:
//
//	        GetInstanceEnforcementPointArgs{...}
//
//	or:
//
//	        nil
type GetInstanceEnforcementPointPtrInput interface {
	pulumi.Input

	ToGetInstanceEnforcementPointPtrOutput() GetInstanceEnforcementPointPtrOutput
	ToGetInstanceEnforcementPointPtrOutputWithContext(context.Context) GetInstanceEnforcementPointPtrOutput
}

type getInstanceEnforcementPointPtrType GetInstanceEnforcementPointArgs

func GetInstanceEnforcementPointPtr(v *GetInstanceEnforcementPointArgs) GetInstanceEnforcementPointPtrInput {
	return (*getInstanceEnforcementPointPtrType)(v)
}

func (*getInstanceEnforcementPointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceEnforcementPoint)(nil)).Elem()
}

func (i *getInstanceEnforcementPointPtrType) ToGetInstanceEnforcementPointPtrOutput() GetInstanceEnforcementPointPtrOutput {
	return i.ToGetInstanceEnforcementPointPtrOutputWithContext(context.Background())
}

func (i *getInstanceEnforcementPointPtrType) ToGetInstanceEnforcementPointPtrOutputWithContext(ctx context.Context) GetInstanceEnforcementPointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEnforcementPointPtrOutput)
}

type GetInstanceEnforcementPointOutput struct{ *pulumi.OutputState }

func (GetInstanceEnforcementPointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEnforcementPoint)(nil)).Elem()
}

func (o GetInstanceEnforcementPointOutput) ToGetInstanceEnforcementPointOutput() GetInstanceEnforcementPointOutput {
	return o
}

func (o GetInstanceEnforcementPointOutput) ToGetInstanceEnforcementPointOutputWithContext(ctx context.Context) GetInstanceEnforcementPointOutput {
	return o
}

func (o GetInstanceEnforcementPointOutput) ToGetInstanceEnforcementPointPtrOutput() GetInstanceEnforcementPointPtrOutput {
	return o.ToGetInstanceEnforcementPointPtrOutputWithContext(context.Background())
}

func (o GetInstanceEnforcementPointOutput) ToGetInstanceEnforcementPointPtrOutputWithContext(ctx context.Context) GetInstanceEnforcementPointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetInstanceEnforcementPoint) *GetInstanceEnforcementPoint {
		return &v
	}).(GetInstanceEnforcementPointPtrOutput)
}

// The URL path evaluation is case insensitive by default. Resources hosted on web servers such as Apache, NGINX and Java EE are case sensitive paths. Web servers such as Microsoft IIS are not case-sensitive.
func (o GetInstanceEnforcementPointOutput) CaseSensitive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPoint) bool { return v.CaseSensitive }).(pulumi.BoolOutput)
}

// If access is conditional, the conditions that must evaluate to true to allow access to a resource. For example, to require the user must be authenticated and have either the role Admin or User
func (o GetInstanceEnforcementPointOutput) Conditions() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPoint) string { return v.Conditions }).(pulumi.StringOutput)
}

// The root path to the application, often the name of the application. Can be any name, path or just a slash (“/”). The context root uniquely identifies the application within the enforcement point.
func (o GetInstanceEnforcementPointOutput) ContextRoot() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPoint) string { return v.ContextRoot }).(pulumi.StringOutput)
}

// The location within the context root to which the browser will be redirected for IdP-initiated single sign-on. For example, the landing page might be an index page in the context root such as index.html or default.aspx. The landing page cannot begin with a slash and must use valid URL characters.
func (o GetInstanceEnforcementPointOutput) LandingPage() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPoint) string { return v.LandingPage }).(pulumi.StringOutput)
}

// Specify to always `allow`, `deny` access to resources, of if access is `conditional`.
func (o GetInstanceEnforcementPointOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPoint) string { return v.Permissions }).(pulumi.StringOutput)
}

// Require user authentication to access any resource protected by this enforcement point.
func (o GetInstanceEnforcementPointOutput) RequireSitewideAuthentication() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPoint) bool { return v.RequireSitewideAuthentication }).(pulumi.BoolOutput)
}

// Array of resource objects
func (o GetInstanceEnforcementPointOutput) Resources() GetInstanceEnforcementPointResourceArrayOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPoint) []GetInstanceEnforcementPointResource { return v.Resources }).(GetInstanceEnforcementPointResourceArrayOutput)
}

// unit: - 0 = Seconds - 1 = Minutes - 2 = Hours value: - When Unit = 0 or 1 value must be 0-60 - When Unit = 2 value must be 0-24
func (o GetInstanceEnforcementPointOutput) SessionExpiryFixed() GetInstanceEnforcementPointSessionExpiryFixedOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPoint) GetInstanceEnforcementPointSessionExpiryFixed {
		return v.SessionExpiryFixed
	}).(GetInstanceEnforcementPointSessionExpiryFixedOutput)
}

// unit: - 0 = Seconds - 1 = Minutes - 2 = Hours value: - When Unit = 0 or 1 value must be 0-60 - When Unit = 2 value must be 0-24
func (o GetInstanceEnforcementPointOutput) SessionExpiryInactivity() GetInstanceEnforcementPointSessionExpiryInactivityOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPoint) GetInstanceEnforcementPointSessionExpiryInactivity {
		return v.SessionExpiryInactivity
	}).(GetInstanceEnforcementPointSessionExpiryInactivityOutput)
}

// A fully-qualified URL to the internal application including scheme, authority and path. The target host authority must be an IP address, not a hostname.
func (o GetInstanceEnforcementPointOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPoint) string { return v.Target }).(pulumi.StringOutput)
}

// Can only be set on create. Access Gateway Token.
func (o GetInstanceEnforcementPointOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPoint) string { return v.Token }).(pulumi.StringOutput)
}

// Use the target host header as opposed to the original gateway or upstream host header.
func (o GetInstanceEnforcementPointOutput) UseTargetHostHeader() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPoint) bool { return v.UseTargetHostHeader }).(pulumi.BoolOutput)
}

// A comma-delimited list of one or more virtual hosts that map to applications assigned to the enforcement point. A VHOST may be a host name or an IP address. VHOST distinguish between applications that are at the same context root.
func (o GetInstanceEnforcementPointOutput) Vhost() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPoint) string { return v.Vhost }).(pulumi.StringOutput)
}

type GetInstanceEnforcementPointPtrOutput struct{ *pulumi.OutputState }

func (GetInstanceEnforcementPointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceEnforcementPoint)(nil)).Elem()
}

func (o GetInstanceEnforcementPointPtrOutput) ToGetInstanceEnforcementPointPtrOutput() GetInstanceEnforcementPointPtrOutput {
	return o
}

func (o GetInstanceEnforcementPointPtrOutput) ToGetInstanceEnforcementPointPtrOutputWithContext(ctx context.Context) GetInstanceEnforcementPointPtrOutput {
	return o
}

func (o GetInstanceEnforcementPointPtrOutput) Elem() GetInstanceEnforcementPointOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPoint) GetInstanceEnforcementPoint {
		if v != nil {
			return *v
		}
		var ret GetInstanceEnforcementPoint
		return ret
	}).(GetInstanceEnforcementPointOutput)
}

// The URL path evaluation is case insensitive by default. Resources hosted on web servers such as Apache, NGINX and Java EE are case sensitive paths. Web servers such as Microsoft IIS are not case-sensitive.
func (o GetInstanceEnforcementPointPtrOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPoint) *bool {
		if v == nil {
			return nil
		}
		return &v.CaseSensitive
	}).(pulumi.BoolPtrOutput)
}

// If access is conditional, the conditions that must evaluate to true to allow access to a resource. For example, to require the user must be authenticated and have either the role Admin or User
func (o GetInstanceEnforcementPointPtrOutput) Conditions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPoint) *string {
		if v == nil {
			return nil
		}
		return &v.Conditions
	}).(pulumi.StringPtrOutput)
}

// The root path to the application, often the name of the application. Can be any name, path or just a slash (“/”). The context root uniquely identifies the application within the enforcement point.
func (o GetInstanceEnforcementPointPtrOutput) ContextRoot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPoint) *string {
		if v == nil {
			return nil
		}
		return &v.ContextRoot
	}).(pulumi.StringPtrOutput)
}

// The location within the context root to which the browser will be redirected for IdP-initiated single sign-on. For example, the landing page might be an index page in the context root such as index.html or default.aspx. The landing page cannot begin with a slash and must use valid URL characters.
func (o GetInstanceEnforcementPointPtrOutput) LandingPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPoint) *string {
		if v == nil {
			return nil
		}
		return &v.LandingPage
	}).(pulumi.StringPtrOutput)
}

// Specify to always `allow`, `deny` access to resources, of if access is `conditional`.
func (o GetInstanceEnforcementPointPtrOutput) Permissions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPoint) *string {
		if v == nil {
			return nil
		}
		return &v.Permissions
	}).(pulumi.StringPtrOutput)
}

// Require user authentication to access any resource protected by this enforcement point.
func (o GetInstanceEnforcementPointPtrOutput) RequireSitewideAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPoint) *bool {
		if v == nil {
			return nil
		}
		return &v.RequireSitewideAuthentication
	}).(pulumi.BoolPtrOutput)
}

// Array of resource objects
func (o GetInstanceEnforcementPointPtrOutput) Resources() GetInstanceEnforcementPointResourceArrayOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPoint) []GetInstanceEnforcementPointResource {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(GetInstanceEnforcementPointResourceArrayOutput)
}

// unit: - 0 = Seconds - 1 = Minutes - 2 = Hours value: - When Unit = 0 or 1 value must be 0-60 - When Unit = 2 value must be 0-24
func (o GetInstanceEnforcementPointPtrOutput) SessionExpiryFixed() GetInstanceEnforcementPointSessionExpiryFixedPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPoint) *GetInstanceEnforcementPointSessionExpiryFixed {
		if v == nil {
			return nil
		}
		return &v.SessionExpiryFixed
	}).(GetInstanceEnforcementPointSessionExpiryFixedPtrOutput)
}

// unit: - 0 = Seconds - 1 = Minutes - 2 = Hours value: - When Unit = 0 or 1 value must be 0-60 - When Unit = 2 value must be 0-24
func (o GetInstanceEnforcementPointPtrOutput) SessionExpiryInactivity() GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPoint) *GetInstanceEnforcementPointSessionExpiryInactivity {
		if v == nil {
			return nil
		}
		return &v.SessionExpiryInactivity
	}).(GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput)
}

// A fully-qualified URL to the internal application including scheme, authority and path. The target host authority must be an IP address, not a hostname.
func (o GetInstanceEnforcementPointPtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPoint) *string {
		if v == nil {
			return nil
		}
		return &v.Target
	}).(pulumi.StringPtrOutput)
}

// Can only be set on create. Access Gateway Token.
func (o GetInstanceEnforcementPointPtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPoint) *string {
		if v == nil {
			return nil
		}
		return &v.Token
	}).(pulumi.StringPtrOutput)
}

// Use the target host header as opposed to the original gateway or upstream host header.
func (o GetInstanceEnforcementPointPtrOutput) UseTargetHostHeader() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPoint) *bool {
		if v == nil {
			return nil
		}
		return &v.UseTargetHostHeader
	}).(pulumi.BoolPtrOutput)
}

// A comma-delimited list of one or more virtual hosts that map to applications assigned to the enforcement point. A VHOST may be a host name or an IP address. VHOST distinguish between applications that are at the same context root.
func (o GetInstanceEnforcementPointPtrOutput) Vhost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPoint) *string {
		if v == nil {
			return nil
		}
		return &v.Vhost
	}).(pulumi.StringPtrOutput)
}

type GetInstanceEnforcementPointResource struct {
	// required if permission == "conditions"
	Conditions  string `pulumi:"conditions"`
	IsPathRegex bool   `pulumi:"isPathRegex"`
	Path        string `pulumi:"path"`
	Permission  string `pulumi:"permission"`
	RequireAuth bool   `pulumi:"requireAuth"`
}

// GetInstanceEnforcementPointResourceInput is an input type that accepts GetInstanceEnforcementPointResourceArgs and GetInstanceEnforcementPointResourceOutput values.
// You can construct a concrete instance of `GetInstanceEnforcementPointResourceInput` via:
//
//	GetInstanceEnforcementPointResourceArgs{...}
type GetInstanceEnforcementPointResourceInput interface {
	pulumi.Input

	ToGetInstanceEnforcementPointResourceOutput() GetInstanceEnforcementPointResourceOutput
	ToGetInstanceEnforcementPointResourceOutputWithContext(context.Context) GetInstanceEnforcementPointResourceOutput
}

type GetInstanceEnforcementPointResourceArgs struct {
	// required if permission == "conditions"
	Conditions  pulumi.StringInput `pulumi:"conditions"`
	IsPathRegex pulumi.BoolInput   `pulumi:"isPathRegex"`
	Path        pulumi.StringInput `pulumi:"path"`
	Permission  pulumi.StringInput `pulumi:"permission"`
	RequireAuth pulumi.BoolInput   `pulumi:"requireAuth"`
}

func (GetInstanceEnforcementPointResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEnforcementPointResource)(nil)).Elem()
}

func (i GetInstanceEnforcementPointResourceArgs) ToGetInstanceEnforcementPointResourceOutput() GetInstanceEnforcementPointResourceOutput {
	return i.ToGetInstanceEnforcementPointResourceOutputWithContext(context.Background())
}

func (i GetInstanceEnforcementPointResourceArgs) ToGetInstanceEnforcementPointResourceOutputWithContext(ctx context.Context) GetInstanceEnforcementPointResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEnforcementPointResourceOutput)
}

// GetInstanceEnforcementPointResourceArrayInput is an input type that accepts GetInstanceEnforcementPointResourceArray and GetInstanceEnforcementPointResourceArrayOutput values.
// You can construct a concrete instance of `GetInstanceEnforcementPointResourceArrayInput` via:
//
//	GetInstanceEnforcementPointResourceArray{ GetInstanceEnforcementPointResourceArgs{...} }
type GetInstanceEnforcementPointResourceArrayInput interface {
	pulumi.Input

	ToGetInstanceEnforcementPointResourceArrayOutput() GetInstanceEnforcementPointResourceArrayOutput
	ToGetInstanceEnforcementPointResourceArrayOutputWithContext(context.Context) GetInstanceEnforcementPointResourceArrayOutput
}

type GetInstanceEnforcementPointResourceArray []GetInstanceEnforcementPointResourceInput

func (GetInstanceEnforcementPointResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceEnforcementPointResource)(nil)).Elem()
}

func (i GetInstanceEnforcementPointResourceArray) ToGetInstanceEnforcementPointResourceArrayOutput() GetInstanceEnforcementPointResourceArrayOutput {
	return i.ToGetInstanceEnforcementPointResourceArrayOutputWithContext(context.Background())
}

func (i GetInstanceEnforcementPointResourceArray) ToGetInstanceEnforcementPointResourceArrayOutputWithContext(ctx context.Context) GetInstanceEnforcementPointResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEnforcementPointResourceArrayOutput)
}

type GetInstanceEnforcementPointResourceOutput struct{ *pulumi.OutputState }

func (GetInstanceEnforcementPointResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEnforcementPointResource)(nil)).Elem()
}

func (o GetInstanceEnforcementPointResourceOutput) ToGetInstanceEnforcementPointResourceOutput() GetInstanceEnforcementPointResourceOutput {
	return o
}

func (o GetInstanceEnforcementPointResourceOutput) ToGetInstanceEnforcementPointResourceOutputWithContext(ctx context.Context) GetInstanceEnforcementPointResourceOutput {
	return o
}

// required if permission == "conditions"
func (o GetInstanceEnforcementPointResourceOutput) Conditions() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPointResource) string { return v.Conditions }).(pulumi.StringOutput)
}

func (o GetInstanceEnforcementPointResourceOutput) IsPathRegex() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPointResource) bool { return v.IsPathRegex }).(pulumi.BoolOutput)
}

func (o GetInstanceEnforcementPointResourceOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPointResource) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetInstanceEnforcementPointResourceOutput) Permission() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPointResource) string { return v.Permission }).(pulumi.StringOutput)
}

func (o GetInstanceEnforcementPointResourceOutput) RequireAuth() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPointResource) bool { return v.RequireAuth }).(pulumi.BoolOutput)
}

type GetInstanceEnforcementPointResourceArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceEnforcementPointResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceEnforcementPointResource)(nil)).Elem()
}

func (o GetInstanceEnforcementPointResourceArrayOutput) ToGetInstanceEnforcementPointResourceArrayOutput() GetInstanceEnforcementPointResourceArrayOutput {
	return o
}

func (o GetInstanceEnforcementPointResourceArrayOutput) ToGetInstanceEnforcementPointResourceArrayOutputWithContext(ctx context.Context) GetInstanceEnforcementPointResourceArrayOutput {
	return o
}

func (o GetInstanceEnforcementPointResourceArrayOutput) Index(i pulumi.IntInput) GetInstanceEnforcementPointResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceEnforcementPointResource {
		return vs[0].([]GetInstanceEnforcementPointResource)[vs[1].(int)]
	}).(GetInstanceEnforcementPointResourceOutput)
}

type GetInstanceEnforcementPointSessionExpiryFixed struct {
	Unit  int `pulumi:"unit"`
	Value int `pulumi:"value"`
}

// GetInstanceEnforcementPointSessionExpiryFixedInput is an input type that accepts GetInstanceEnforcementPointSessionExpiryFixedArgs and GetInstanceEnforcementPointSessionExpiryFixedOutput values.
// You can construct a concrete instance of `GetInstanceEnforcementPointSessionExpiryFixedInput` via:
//
//	GetInstanceEnforcementPointSessionExpiryFixedArgs{...}
type GetInstanceEnforcementPointSessionExpiryFixedInput interface {
	pulumi.Input

	ToGetInstanceEnforcementPointSessionExpiryFixedOutput() GetInstanceEnforcementPointSessionExpiryFixedOutput
	ToGetInstanceEnforcementPointSessionExpiryFixedOutputWithContext(context.Context) GetInstanceEnforcementPointSessionExpiryFixedOutput
}

type GetInstanceEnforcementPointSessionExpiryFixedArgs struct {
	Unit  pulumi.IntInput `pulumi:"unit"`
	Value pulumi.IntInput `pulumi:"value"`
}

func (GetInstanceEnforcementPointSessionExpiryFixedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEnforcementPointSessionExpiryFixed)(nil)).Elem()
}

func (i GetInstanceEnforcementPointSessionExpiryFixedArgs) ToGetInstanceEnforcementPointSessionExpiryFixedOutput() GetInstanceEnforcementPointSessionExpiryFixedOutput {
	return i.ToGetInstanceEnforcementPointSessionExpiryFixedOutputWithContext(context.Background())
}

func (i GetInstanceEnforcementPointSessionExpiryFixedArgs) ToGetInstanceEnforcementPointSessionExpiryFixedOutputWithContext(ctx context.Context) GetInstanceEnforcementPointSessionExpiryFixedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEnforcementPointSessionExpiryFixedOutput)
}

func (i GetInstanceEnforcementPointSessionExpiryFixedArgs) ToGetInstanceEnforcementPointSessionExpiryFixedPtrOutput() GetInstanceEnforcementPointSessionExpiryFixedPtrOutput {
	return i.ToGetInstanceEnforcementPointSessionExpiryFixedPtrOutputWithContext(context.Background())
}

func (i GetInstanceEnforcementPointSessionExpiryFixedArgs) ToGetInstanceEnforcementPointSessionExpiryFixedPtrOutputWithContext(ctx context.Context) GetInstanceEnforcementPointSessionExpiryFixedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEnforcementPointSessionExpiryFixedOutput).ToGetInstanceEnforcementPointSessionExpiryFixedPtrOutputWithContext(ctx)
}

// GetInstanceEnforcementPointSessionExpiryFixedPtrInput is an input type that accepts GetInstanceEnforcementPointSessionExpiryFixedArgs, GetInstanceEnforcementPointSessionExpiryFixedPtr and GetInstanceEnforcementPointSessionExpiryFixedPtrOutput values.
// You can construct a concrete instance of `GetInstanceEnforcementPointSessionExpiryFixedPtrInput` via:
//
//	        GetInstanceEnforcementPointSessionExpiryFixedArgs{...}
//
//	or:
//
//	        nil
type GetInstanceEnforcementPointSessionExpiryFixedPtrInput interface {
	pulumi.Input

	ToGetInstanceEnforcementPointSessionExpiryFixedPtrOutput() GetInstanceEnforcementPointSessionExpiryFixedPtrOutput
	ToGetInstanceEnforcementPointSessionExpiryFixedPtrOutputWithContext(context.Context) GetInstanceEnforcementPointSessionExpiryFixedPtrOutput
}

type getInstanceEnforcementPointSessionExpiryFixedPtrType GetInstanceEnforcementPointSessionExpiryFixedArgs

func GetInstanceEnforcementPointSessionExpiryFixedPtr(v *GetInstanceEnforcementPointSessionExpiryFixedArgs) GetInstanceEnforcementPointSessionExpiryFixedPtrInput {
	return (*getInstanceEnforcementPointSessionExpiryFixedPtrType)(v)
}

func (*getInstanceEnforcementPointSessionExpiryFixedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceEnforcementPointSessionExpiryFixed)(nil)).Elem()
}

func (i *getInstanceEnforcementPointSessionExpiryFixedPtrType) ToGetInstanceEnforcementPointSessionExpiryFixedPtrOutput() GetInstanceEnforcementPointSessionExpiryFixedPtrOutput {
	return i.ToGetInstanceEnforcementPointSessionExpiryFixedPtrOutputWithContext(context.Background())
}

func (i *getInstanceEnforcementPointSessionExpiryFixedPtrType) ToGetInstanceEnforcementPointSessionExpiryFixedPtrOutputWithContext(ctx context.Context) GetInstanceEnforcementPointSessionExpiryFixedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEnforcementPointSessionExpiryFixedPtrOutput)
}

type GetInstanceEnforcementPointSessionExpiryFixedOutput struct{ *pulumi.OutputState }

func (GetInstanceEnforcementPointSessionExpiryFixedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEnforcementPointSessionExpiryFixed)(nil)).Elem()
}

func (o GetInstanceEnforcementPointSessionExpiryFixedOutput) ToGetInstanceEnforcementPointSessionExpiryFixedOutput() GetInstanceEnforcementPointSessionExpiryFixedOutput {
	return o
}

func (o GetInstanceEnforcementPointSessionExpiryFixedOutput) ToGetInstanceEnforcementPointSessionExpiryFixedOutputWithContext(ctx context.Context) GetInstanceEnforcementPointSessionExpiryFixedOutput {
	return o
}

func (o GetInstanceEnforcementPointSessionExpiryFixedOutput) ToGetInstanceEnforcementPointSessionExpiryFixedPtrOutput() GetInstanceEnforcementPointSessionExpiryFixedPtrOutput {
	return o.ToGetInstanceEnforcementPointSessionExpiryFixedPtrOutputWithContext(context.Background())
}

func (o GetInstanceEnforcementPointSessionExpiryFixedOutput) ToGetInstanceEnforcementPointSessionExpiryFixedPtrOutputWithContext(ctx context.Context) GetInstanceEnforcementPointSessionExpiryFixedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetInstanceEnforcementPointSessionExpiryFixed) *GetInstanceEnforcementPointSessionExpiryFixed {
		return &v
	}).(GetInstanceEnforcementPointSessionExpiryFixedPtrOutput)
}

func (o GetInstanceEnforcementPointSessionExpiryFixedOutput) Unit() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPointSessionExpiryFixed) int { return v.Unit }).(pulumi.IntOutput)
}

func (o GetInstanceEnforcementPointSessionExpiryFixedOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPointSessionExpiryFixed) int { return v.Value }).(pulumi.IntOutput)
}

type GetInstanceEnforcementPointSessionExpiryFixedPtrOutput struct{ *pulumi.OutputState }

func (GetInstanceEnforcementPointSessionExpiryFixedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceEnforcementPointSessionExpiryFixed)(nil)).Elem()
}

func (o GetInstanceEnforcementPointSessionExpiryFixedPtrOutput) ToGetInstanceEnforcementPointSessionExpiryFixedPtrOutput() GetInstanceEnforcementPointSessionExpiryFixedPtrOutput {
	return o
}

func (o GetInstanceEnforcementPointSessionExpiryFixedPtrOutput) ToGetInstanceEnforcementPointSessionExpiryFixedPtrOutputWithContext(ctx context.Context) GetInstanceEnforcementPointSessionExpiryFixedPtrOutput {
	return o
}

func (o GetInstanceEnforcementPointSessionExpiryFixedPtrOutput) Elem() GetInstanceEnforcementPointSessionExpiryFixedOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPointSessionExpiryFixed) GetInstanceEnforcementPointSessionExpiryFixed {
		if v != nil {
			return *v
		}
		var ret GetInstanceEnforcementPointSessionExpiryFixed
		return ret
	}).(GetInstanceEnforcementPointSessionExpiryFixedOutput)
}

func (o GetInstanceEnforcementPointSessionExpiryFixedPtrOutput) Unit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPointSessionExpiryFixed) *int {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.IntPtrOutput)
}

func (o GetInstanceEnforcementPointSessionExpiryFixedPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPointSessionExpiryFixed) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type GetInstanceEnforcementPointSessionExpiryInactivity struct {
	Unit  int `pulumi:"unit"`
	Value int `pulumi:"value"`
}

// GetInstanceEnforcementPointSessionExpiryInactivityInput is an input type that accepts GetInstanceEnforcementPointSessionExpiryInactivityArgs and GetInstanceEnforcementPointSessionExpiryInactivityOutput values.
// You can construct a concrete instance of `GetInstanceEnforcementPointSessionExpiryInactivityInput` via:
//
//	GetInstanceEnforcementPointSessionExpiryInactivityArgs{...}
type GetInstanceEnforcementPointSessionExpiryInactivityInput interface {
	pulumi.Input

	ToGetInstanceEnforcementPointSessionExpiryInactivityOutput() GetInstanceEnforcementPointSessionExpiryInactivityOutput
	ToGetInstanceEnforcementPointSessionExpiryInactivityOutputWithContext(context.Context) GetInstanceEnforcementPointSessionExpiryInactivityOutput
}

type GetInstanceEnforcementPointSessionExpiryInactivityArgs struct {
	Unit  pulumi.IntInput `pulumi:"unit"`
	Value pulumi.IntInput `pulumi:"value"`
}

func (GetInstanceEnforcementPointSessionExpiryInactivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEnforcementPointSessionExpiryInactivity)(nil)).Elem()
}

func (i GetInstanceEnforcementPointSessionExpiryInactivityArgs) ToGetInstanceEnforcementPointSessionExpiryInactivityOutput() GetInstanceEnforcementPointSessionExpiryInactivityOutput {
	return i.ToGetInstanceEnforcementPointSessionExpiryInactivityOutputWithContext(context.Background())
}

func (i GetInstanceEnforcementPointSessionExpiryInactivityArgs) ToGetInstanceEnforcementPointSessionExpiryInactivityOutputWithContext(ctx context.Context) GetInstanceEnforcementPointSessionExpiryInactivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEnforcementPointSessionExpiryInactivityOutput)
}

func (i GetInstanceEnforcementPointSessionExpiryInactivityArgs) ToGetInstanceEnforcementPointSessionExpiryInactivityPtrOutput() GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput {
	return i.ToGetInstanceEnforcementPointSessionExpiryInactivityPtrOutputWithContext(context.Background())
}

func (i GetInstanceEnforcementPointSessionExpiryInactivityArgs) ToGetInstanceEnforcementPointSessionExpiryInactivityPtrOutputWithContext(ctx context.Context) GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEnforcementPointSessionExpiryInactivityOutput).ToGetInstanceEnforcementPointSessionExpiryInactivityPtrOutputWithContext(ctx)
}

// GetInstanceEnforcementPointSessionExpiryInactivityPtrInput is an input type that accepts GetInstanceEnforcementPointSessionExpiryInactivityArgs, GetInstanceEnforcementPointSessionExpiryInactivityPtr and GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput values.
// You can construct a concrete instance of `GetInstanceEnforcementPointSessionExpiryInactivityPtrInput` via:
//
//	        GetInstanceEnforcementPointSessionExpiryInactivityArgs{...}
//
//	or:
//
//	        nil
type GetInstanceEnforcementPointSessionExpiryInactivityPtrInput interface {
	pulumi.Input

	ToGetInstanceEnforcementPointSessionExpiryInactivityPtrOutput() GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput
	ToGetInstanceEnforcementPointSessionExpiryInactivityPtrOutputWithContext(context.Context) GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput
}

type getInstanceEnforcementPointSessionExpiryInactivityPtrType GetInstanceEnforcementPointSessionExpiryInactivityArgs

func GetInstanceEnforcementPointSessionExpiryInactivityPtr(v *GetInstanceEnforcementPointSessionExpiryInactivityArgs) GetInstanceEnforcementPointSessionExpiryInactivityPtrInput {
	return (*getInstanceEnforcementPointSessionExpiryInactivityPtrType)(v)
}

func (*getInstanceEnforcementPointSessionExpiryInactivityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceEnforcementPointSessionExpiryInactivity)(nil)).Elem()
}

func (i *getInstanceEnforcementPointSessionExpiryInactivityPtrType) ToGetInstanceEnforcementPointSessionExpiryInactivityPtrOutput() GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput {
	return i.ToGetInstanceEnforcementPointSessionExpiryInactivityPtrOutputWithContext(context.Background())
}

func (i *getInstanceEnforcementPointSessionExpiryInactivityPtrType) ToGetInstanceEnforcementPointSessionExpiryInactivityPtrOutputWithContext(ctx context.Context) GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput)
}

type GetInstanceEnforcementPointSessionExpiryInactivityOutput struct{ *pulumi.OutputState }

func (GetInstanceEnforcementPointSessionExpiryInactivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEnforcementPointSessionExpiryInactivity)(nil)).Elem()
}

func (o GetInstanceEnforcementPointSessionExpiryInactivityOutput) ToGetInstanceEnforcementPointSessionExpiryInactivityOutput() GetInstanceEnforcementPointSessionExpiryInactivityOutput {
	return o
}

func (o GetInstanceEnforcementPointSessionExpiryInactivityOutput) ToGetInstanceEnforcementPointSessionExpiryInactivityOutputWithContext(ctx context.Context) GetInstanceEnforcementPointSessionExpiryInactivityOutput {
	return o
}

func (o GetInstanceEnforcementPointSessionExpiryInactivityOutput) ToGetInstanceEnforcementPointSessionExpiryInactivityPtrOutput() GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput {
	return o.ToGetInstanceEnforcementPointSessionExpiryInactivityPtrOutputWithContext(context.Background())
}

func (o GetInstanceEnforcementPointSessionExpiryInactivityOutput) ToGetInstanceEnforcementPointSessionExpiryInactivityPtrOutputWithContext(ctx context.Context) GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetInstanceEnforcementPointSessionExpiryInactivity) *GetInstanceEnforcementPointSessionExpiryInactivity {
		return &v
	}).(GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput)
}

func (o GetInstanceEnforcementPointSessionExpiryInactivityOutput) Unit() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPointSessionExpiryInactivity) int { return v.Unit }).(pulumi.IntOutput)
}

func (o GetInstanceEnforcementPointSessionExpiryInactivityOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceEnforcementPointSessionExpiryInactivity) int { return v.Value }).(pulumi.IntOutput)
}

type GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput struct{ *pulumi.OutputState }

func (GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceEnforcementPointSessionExpiryInactivity)(nil)).Elem()
}

func (o GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput) ToGetInstanceEnforcementPointSessionExpiryInactivityPtrOutput() GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput {
	return o
}

func (o GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput) ToGetInstanceEnforcementPointSessionExpiryInactivityPtrOutputWithContext(ctx context.Context) GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput {
	return o
}

func (o GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput) Elem() GetInstanceEnforcementPointSessionExpiryInactivityOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPointSessionExpiryInactivity) GetInstanceEnforcementPointSessionExpiryInactivity {
		if v != nil {
			return *v
		}
		var ret GetInstanceEnforcementPointSessionExpiryInactivity
		return ret
	}).(GetInstanceEnforcementPointSessionExpiryInactivityOutput)
}

func (o GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput) Unit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPointSessionExpiryInactivity) *int {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.IntPtrOutput)
}

func (o GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetInstanceEnforcementPointSessionExpiryInactivity) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type GetInstanceParameters struct {
	Groups GetInstanceParametersGroups `pulumi:"groups"`
}

// GetInstanceParametersInput is an input type that accepts GetInstanceParametersArgs and GetInstanceParametersOutput values.
// You can construct a concrete instance of `GetInstanceParametersInput` via:
//
//	GetInstanceParametersArgs{...}
type GetInstanceParametersInput interface {
	pulumi.Input

	ToGetInstanceParametersOutput() GetInstanceParametersOutput
	ToGetInstanceParametersOutputWithContext(context.Context) GetInstanceParametersOutput
}

type GetInstanceParametersArgs struct {
	Groups GetInstanceParametersGroupsInput `pulumi:"groups"`
}

func (GetInstanceParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceParameters)(nil)).Elem()
}

func (i GetInstanceParametersArgs) ToGetInstanceParametersOutput() GetInstanceParametersOutput {
	return i.ToGetInstanceParametersOutputWithContext(context.Background())
}

func (i GetInstanceParametersArgs) ToGetInstanceParametersOutputWithContext(ctx context.Context) GetInstanceParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceParametersOutput)
}

func (i GetInstanceParametersArgs) ToGetInstanceParametersPtrOutput() GetInstanceParametersPtrOutput {
	return i.ToGetInstanceParametersPtrOutputWithContext(context.Background())
}

func (i GetInstanceParametersArgs) ToGetInstanceParametersPtrOutputWithContext(ctx context.Context) GetInstanceParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceParametersOutput).ToGetInstanceParametersPtrOutputWithContext(ctx)
}

// GetInstanceParametersPtrInput is an input type that accepts GetInstanceParametersArgs, GetInstanceParametersPtr and GetInstanceParametersPtrOutput values.
// You can construct a concrete instance of `GetInstanceParametersPtrInput` via:
//
//	        GetInstanceParametersArgs{...}
//
//	or:
//
//	        nil
type GetInstanceParametersPtrInput interface {
	pulumi.Input

	ToGetInstanceParametersPtrOutput() GetInstanceParametersPtrOutput
	ToGetInstanceParametersPtrOutputWithContext(context.Context) GetInstanceParametersPtrOutput
}

type getInstanceParametersPtrType GetInstanceParametersArgs

func GetInstanceParametersPtr(v *GetInstanceParametersArgs) GetInstanceParametersPtrInput {
	return (*getInstanceParametersPtrType)(v)
}

func (*getInstanceParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceParameters)(nil)).Elem()
}

func (i *getInstanceParametersPtrType) ToGetInstanceParametersPtrOutput() GetInstanceParametersPtrOutput {
	return i.ToGetInstanceParametersPtrOutputWithContext(context.Background())
}

func (i *getInstanceParametersPtrType) ToGetInstanceParametersPtrOutputWithContext(ctx context.Context) GetInstanceParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceParametersPtrOutput)
}

type GetInstanceParametersOutput struct{ *pulumi.OutputState }

func (GetInstanceParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceParameters)(nil)).Elem()
}

func (o GetInstanceParametersOutput) ToGetInstanceParametersOutput() GetInstanceParametersOutput {
	return o
}

func (o GetInstanceParametersOutput) ToGetInstanceParametersOutputWithContext(ctx context.Context) GetInstanceParametersOutput {
	return o
}

func (o GetInstanceParametersOutput) ToGetInstanceParametersPtrOutput() GetInstanceParametersPtrOutput {
	return o.ToGetInstanceParametersPtrOutputWithContext(context.Background())
}

func (o GetInstanceParametersOutput) ToGetInstanceParametersPtrOutputWithContext(ctx context.Context) GetInstanceParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetInstanceParameters) *GetInstanceParameters {
		return &v
	}).(GetInstanceParametersPtrOutput)
}

func (o GetInstanceParametersOutput) Groups() GetInstanceParametersGroupsOutput {
	return o.ApplyT(func(v GetInstanceParameters) GetInstanceParametersGroups { return v.Groups }).(GetInstanceParametersGroupsOutput)
}

type GetInstanceParametersPtrOutput struct{ *pulumi.OutputState }

func (GetInstanceParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceParameters)(nil)).Elem()
}

func (o GetInstanceParametersPtrOutput) ToGetInstanceParametersPtrOutput() GetInstanceParametersPtrOutput {
	return o
}

func (o GetInstanceParametersPtrOutput) ToGetInstanceParametersPtrOutputWithContext(ctx context.Context) GetInstanceParametersPtrOutput {
	return o
}

func (o GetInstanceParametersPtrOutput) Elem() GetInstanceParametersOutput {
	return o.ApplyT(func(v *GetInstanceParameters) GetInstanceParameters {
		if v != nil {
			return *v
		}
		var ret GetInstanceParameters
		return ret
	}).(GetInstanceParametersOutput)
}

func (o GetInstanceParametersPtrOutput) Groups() GetInstanceParametersGroupsPtrOutput {
	return o.ApplyT(func(v *GetInstanceParameters) *GetInstanceParametersGroups {
		if v == nil {
			return nil
		}
		return &v.Groups
	}).(GetInstanceParametersGroupsPtrOutput)
}

type GetInstanceParametersGroups struct {
	AttributesTransformations string `pulumi:"attributesTransformations"`
	DefaultValues             string `pulumi:"defaultValues"`
	Id                        int    `pulumi:"id"`
	Label                     string `pulumi:"label"`
	ProvisionedEntitlements   bool   `pulumi:"provisionedEntitlements"`
	SkipIfBlank               bool   `pulumi:"skipIfBlank"`
	UserAttributeMacros       string `pulumi:"userAttributeMacros"`
	UserAttributeMappings     string `pulumi:"userAttributeMappings"`
	Values                    string `pulumi:"values"`
}

// GetInstanceParametersGroupsInput is an input type that accepts GetInstanceParametersGroupsArgs and GetInstanceParametersGroupsOutput values.
// You can construct a concrete instance of `GetInstanceParametersGroupsInput` via:
//
//	GetInstanceParametersGroupsArgs{...}
type GetInstanceParametersGroupsInput interface {
	pulumi.Input

	ToGetInstanceParametersGroupsOutput() GetInstanceParametersGroupsOutput
	ToGetInstanceParametersGroupsOutputWithContext(context.Context) GetInstanceParametersGroupsOutput
}

type GetInstanceParametersGroupsArgs struct {
	AttributesTransformations pulumi.StringInput `pulumi:"attributesTransformations"`
	DefaultValues             pulumi.StringInput `pulumi:"defaultValues"`
	Id                        pulumi.IntInput    `pulumi:"id"`
	Label                     pulumi.StringInput `pulumi:"label"`
	ProvisionedEntitlements   pulumi.BoolInput   `pulumi:"provisionedEntitlements"`
	SkipIfBlank               pulumi.BoolInput   `pulumi:"skipIfBlank"`
	UserAttributeMacros       pulumi.StringInput `pulumi:"userAttributeMacros"`
	UserAttributeMappings     pulumi.StringInput `pulumi:"userAttributeMappings"`
	Values                    pulumi.StringInput `pulumi:"values"`
}

func (GetInstanceParametersGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceParametersGroups)(nil)).Elem()
}

func (i GetInstanceParametersGroupsArgs) ToGetInstanceParametersGroupsOutput() GetInstanceParametersGroupsOutput {
	return i.ToGetInstanceParametersGroupsOutputWithContext(context.Background())
}

func (i GetInstanceParametersGroupsArgs) ToGetInstanceParametersGroupsOutputWithContext(ctx context.Context) GetInstanceParametersGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceParametersGroupsOutput)
}

func (i GetInstanceParametersGroupsArgs) ToGetInstanceParametersGroupsPtrOutput() GetInstanceParametersGroupsPtrOutput {
	return i.ToGetInstanceParametersGroupsPtrOutputWithContext(context.Background())
}

func (i GetInstanceParametersGroupsArgs) ToGetInstanceParametersGroupsPtrOutputWithContext(ctx context.Context) GetInstanceParametersGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceParametersGroupsOutput).ToGetInstanceParametersGroupsPtrOutputWithContext(ctx)
}

// GetInstanceParametersGroupsPtrInput is an input type that accepts GetInstanceParametersGroupsArgs, GetInstanceParametersGroupsPtr and GetInstanceParametersGroupsPtrOutput values.
// You can construct a concrete instance of `GetInstanceParametersGroupsPtrInput` via:
//
//	        GetInstanceParametersGroupsArgs{...}
//
//	or:
//
//	        nil
type GetInstanceParametersGroupsPtrInput interface {
	pulumi.Input

	ToGetInstanceParametersGroupsPtrOutput() GetInstanceParametersGroupsPtrOutput
	ToGetInstanceParametersGroupsPtrOutputWithContext(context.Context) GetInstanceParametersGroupsPtrOutput
}

type getInstanceParametersGroupsPtrType GetInstanceParametersGroupsArgs

func GetInstanceParametersGroupsPtr(v *GetInstanceParametersGroupsArgs) GetInstanceParametersGroupsPtrInput {
	return (*getInstanceParametersGroupsPtrType)(v)
}

func (*getInstanceParametersGroupsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceParametersGroups)(nil)).Elem()
}

func (i *getInstanceParametersGroupsPtrType) ToGetInstanceParametersGroupsPtrOutput() GetInstanceParametersGroupsPtrOutput {
	return i.ToGetInstanceParametersGroupsPtrOutputWithContext(context.Background())
}

func (i *getInstanceParametersGroupsPtrType) ToGetInstanceParametersGroupsPtrOutputWithContext(ctx context.Context) GetInstanceParametersGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceParametersGroupsPtrOutput)
}

type GetInstanceParametersGroupsOutput struct{ *pulumi.OutputState }

func (GetInstanceParametersGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceParametersGroups)(nil)).Elem()
}

func (o GetInstanceParametersGroupsOutput) ToGetInstanceParametersGroupsOutput() GetInstanceParametersGroupsOutput {
	return o
}

func (o GetInstanceParametersGroupsOutput) ToGetInstanceParametersGroupsOutputWithContext(ctx context.Context) GetInstanceParametersGroupsOutput {
	return o
}

func (o GetInstanceParametersGroupsOutput) ToGetInstanceParametersGroupsPtrOutput() GetInstanceParametersGroupsPtrOutput {
	return o.ToGetInstanceParametersGroupsPtrOutputWithContext(context.Background())
}

func (o GetInstanceParametersGroupsOutput) ToGetInstanceParametersGroupsPtrOutputWithContext(ctx context.Context) GetInstanceParametersGroupsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetInstanceParametersGroups) *GetInstanceParametersGroups {
		return &v
	}).(GetInstanceParametersGroupsPtrOutput)
}

func (o GetInstanceParametersGroupsOutput) AttributesTransformations() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParametersGroups) string { return v.AttributesTransformations }).(pulumi.StringOutput)
}

func (o GetInstanceParametersGroupsOutput) DefaultValues() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParametersGroups) string { return v.DefaultValues }).(pulumi.StringOutput)
}

func (o GetInstanceParametersGroupsOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceParametersGroups) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetInstanceParametersGroupsOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParametersGroups) string { return v.Label }).(pulumi.StringOutput)
}

func (o GetInstanceParametersGroupsOutput) ProvisionedEntitlements() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceParametersGroups) bool { return v.ProvisionedEntitlements }).(pulumi.BoolOutput)
}

func (o GetInstanceParametersGroupsOutput) SkipIfBlank() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceParametersGroups) bool { return v.SkipIfBlank }).(pulumi.BoolOutput)
}

func (o GetInstanceParametersGroupsOutput) UserAttributeMacros() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParametersGroups) string { return v.UserAttributeMacros }).(pulumi.StringOutput)
}

func (o GetInstanceParametersGroupsOutput) UserAttributeMappings() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParametersGroups) string { return v.UserAttributeMappings }).(pulumi.StringOutput)
}

func (o GetInstanceParametersGroupsOutput) Values() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParametersGroups) string { return v.Values }).(pulumi.StringOutput)
}

type GetInstanceParametersGroupsPtrOutput struct{ *pulumi.OutputState }

func (GetInstanceParametersGroupsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceParametersGroups)(nil)).Elem()
}

func (o GetInstanceParametersGroupsPtrOutput) ToGetInstanceParametersGroupsPtrOutput() GetInstanceParametersGroupsPtrOutput {
	return o
}

func (o GetInstanceParametersGroupsPtrOutput) ToGetInstanceParametersGroupsPtrOutputWithContext(ctx context.Context) GetInstanceParametersGroupsPtrOutput {
	return o
}

func (o GetInstanceParametersGroupsPtrOutput) Elem() GetInstanceParametersGroupsOutput {
	return o.ApplyT(func(v *GetInstanceParametersGroups) GetInstanceParametersGroups {
		if v != nil {
			return *v
		}
		var ret GetInstanceParametersGroups
		return ret
	}).(GetInstanceParametersGroupsOutput)
}

func (o GetInstanceParametersGroupsPtrOutput) AttributesTransformations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceParametersGroups) *string {
		if v == nil {
			return nil
		}
		return &v.AttributesTransformations
	}).(pulumi.StringPtrOutput)
}

func (o GetInstanceParametersGroupsPtrOutput) DefaultValues() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceParametersGroups) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultValues
	}).(pulumi.StringPtrOutput)
}

func (o GetInstanceParametersGroupsPtrOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetInstanceParametersGroups) *int {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.IntPtrOutput)
}

func (o GetInstanceParametersGroupsPtrOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceParametersGroups) *string {
		if v == nil {
			return nil
		}
		return &v.Label
	}).(pulumi.StringPtrOutput)
}

func (o GetInstanceParametersGroupsPtrOutput) ProvisionedEntitlements() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetInstanceParametersGroups) *bool {
		if v == nil {
			return nil
		}
		return &v.ProvisionedEntitlements
	}).(pulumi.BoolPtrOutput)
}

func (o GetInstanceParametersGroupsPtrOutput) SkipIfBlank() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetInstanceParametersGroups) *bool {
		if v == nil {
			return nil
		}
		return &v.SkipIfBlank
	}).(pulumi.BoolPtrOutput)
}

func (o GetInstanceParametersGroupsPtrOutput) UserAttributeMacros() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceParametersGroups) *string {
		if v == nil {
			return nil
		}
		return &v.UserAttributeMacros
	}).(pulumi.StringPtrOutput)
}

func (o GetInstanceParametersGroupsPtrOutput) UserAttributeMappings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceParametersGroups) *string {
		if v == nil {
			return nil
		}
		return &v.UserAttributeMappings
	}).(pulumi.StringPtrOutput)
}

func (o GetInstanceParametersGroupsPtrOutput) Values() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceParametersGroups) *string {
		if v == nil {
			return nil
		}
		return &v.Values
	}).(pulumi.StringPtrOutput)
}

type GetInstanceProvisioning struct {
	Enabled bool   `pulumi:"enabled"`
	Status  string `pulumi:"status"`
}

// GetInstanceProvisioningInput is an input type that accepts GetInstanceProvisioningArgs and GetInstanceProvisioningOutput values.
// You can construct a concrete instance of `GetInstanceProvisioningInput` via:
//
//	GetInstanceProvisioningArgs{...}
type GetInstanceProvisioningInput interface {
	pulumi.Input

	ToGetInstanceProvisioningOutput() GetInstanceProvisioningOutput
	ToGetInstanceProvisioningOutputWithContext(context.Context) GetInstanceProvisioningOutput
}

type GetInstanceProvisioningArgs struct {
	Enabled pulumi.BoolInput   `pulumi:"enabled"`
	Status  pulumi.StringInput `pulumi:"status"`
}

func (GetInstanceProvisioningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceProvisioning)(nil)).Elem()
}

func (i GetInstanceProvisioningArgs) ToGetInstanceProvisioningOutput() GetInstanceProvisioningOutput {
	return i.ToGetInstanceProvisioningOutputWithContext(context.Background())
}

func (i GetInstanceProvisioningArgs) ToGetInstanceProvisioningOutputWithContext(ctx context.Context) GetInstanceProvisioningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceProvisioningOutput)
}

func (i GetInstanceProvisioningArgs) ToGetInstanceProvisioningPtrOutput() GetInstanceProvisioningPtrOutput {
	return i.ToGetInstanceProvisioningPtrOutputWithContext(context.Background())
}

func (i GetInstanceProvisioningArgs) ToGetInstanceProvisioningPtrOutputWithContext(ctx context.Context) GetInstanceProvisioningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceProvisioningOutput).ToGetInstanceProvisioningPtrOutputWithContext(ctx)
}

// GetInstanceProvisioningPtrInput is an input type that accepts GetInstanceProvisioningArgs, GetInstanceProvisioningPtr and GetInstanceProvisioningPtrOutput values.
// You can construct a concrete instance of `GetInstanceProvisioningPtrInput` via:
//
//	        GetInstanceProvisioningArgs{...}
//
//	or:
//
//	        nil
type GetInstanceProvisioningPtrInput interface {
	pulumi.Input

	ToGetInstanceProvisioningPtrOutput() GetInstanceProvisioningPtrOutput
	ToGetInstanceProvisioningPtrOutputWithContext(context.Context) GetInstanceProvisioningPtrOutput
}

type getInstanceProvisioningPtrType GetInstanceProvisioningArgs

func GetInstanceProvisioningPtr(v *GetInstanceProvisioningArgs) GetInstanceProvisioningPtrInput {
	return (*getInstanceProvisioningPtrType)(v)
}

func (*getInstanceProvisioningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceProvisioning)(nil)).Elem()
}

func (i *getInstanceProvisioningPtrType) ToGetInstanceProvisioningPtrOutput() GetInstanceProvisioningPtrOutput {
	return i.ToGetInstanceProvisioningPtrOutputWithContext(context.Background())
}

func (i *getInstanceProvisioningPtrType) ToGetInstanceProvisioningPtrOutputWithContext(ctx context.Context) GetInstanceProvisioningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceProvisioningPtrOutput)
}

type GetInstanceProvisioningOutput struct{ *pulumi.OutputState }

func (GetInstanceProvisioningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceProvisioning)(nil)).Elem()
}

func (o GetInstanceProvisioningOutput) ToGetInstanceProvisioningOutput() GetInstanceProvisioningOutput {
	return o
}

func (o GetInstanceProvisioningOutput) ToGetInstanceProvisioningOutputWithContext(ctx context.Context) GetInstanceProvisioningOutput {
	return o
}

func (o GetInstanceProvisioningOutput) ToGetInstanceProvisioningPtrOutput() GetInstanceProvisioningPtrOutput {
	return o.ToGetInstanceProvisioningPtrOutputWithContext(context.Background())
}

func (o GetInstanceProvisioningOutput) ToGetInstanceProvisioningPtrOutputWithContext(ctx context.Context) GetInstanceProvisioningPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetInstanceProvisioning) *GetInstanceProvisioning {
		return &v
	}).(GetInstanceProvisioningPtrOutput)
}

func (o GetInstanceProvisioningOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceProvisioning) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetInstanceProvisioningOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceProvisioning) string { return v.Status }).(pulumi.StringOutput)
}

type GetInstanceProvisioningPtrOutput struct{ *pulumi.OutputState }

func (GetInstanceProvisioningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceProvisioning)(nil)).Elem()
}

func (o GetInstanceProvisioningPtrOutput) ToGetInstanceProvisioningPtrOutput() GetInstanceProvisioningPtrOutput {
	return o
}

func (o GetInstanceProvisioningPtrOutput) ToGetInstanceProvisioningPtrOutputWithContext(ctx context.Context) GetInstanceProvisioningPtrOutput {
	return o
}

func (o GetInstanceProvisioningPtrOutput) Elem() GetInstanceProvisioningOutput {
	return o.ApplyT(func(v *GetInstanceProvisioning) GetInstanceProvisioning {
		if v != nil {
			return *v
		}
		var ret GetInstanceProvisioning
		return ret
	}).(GetInstanceProvisioningOutput)
}

func (o GetInstanceProvisioningPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetInstanceProvisioning) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o GetInstanceProvisioningPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceProvisioning) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

type GetInstanceSso struct {
	// App Name.	This is only returned after Creating a SAML App.
	AcsUrl string `pulumi:"acsUrl"`
	// The certificate used for signing.	This is only returned after Creating a SAML App.
	Certificate GetInstanceSsoCertificate `pulumi:"certificate"`
	// The OpenId Connect Client Id. Note that clientSecret is only returned after Creating an OIDC App.
	ClientId string `pulumi:"clientId"`
	// OpenId Connet Client Secret
	ClientSecret string `pulumi:"clientSecret"`
	// Issuer of app.	This is only returned after Creating a SAML App.
	Issuer string `pulumi:"issuer"`
	// ID of the apps underlying connector.	This is only returned after Creating a SAML App.
	MetadataUrl string `pulumi:"metadataUrl"`
}

// GetInstanceSsoInput is an input type that accepts GetInstanceSsoArgs and GetInstanceSsoOutput values.
// You can construct a concrete instance of `GetInstanceSsoInput` via:
//
//	GetInstanceSsoArgs{...}
type GetInstanceSsoInput interface {
	pulumi.Input

	ToGetInstanceSsoOutput() GetInstanceSsoOutput
	ToGetInstanceSsoOutputWithContext(context.Context) GetInstanceSsoOutput
}

type GetInstanceSsoArgs struct {
	// App Name.	This is only returned after Creating a SAML App.
	AcsUrl pulumi.StringInput `pulumi:"acsUrl"`
	// The certificate used for signing.	This is only returned after Creating a SAML App.
	Certificate GetInstanceSsoCertificateInput `pulumi:"certificate"`
	// The OpenId Connect Client Id. Note that clientSecret is only returned after Creating an OIDC App.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// OpenId Connet Client Secret
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// Issuer of app.	This is only returned after Creating a SAML App.
	Issuer pulumi.StringInput `pulumi:"issuer"`
	// ID of the apps underlying connector.	This is only returned after Creating a SAML App.
	MetadataUrl pulumi.StringInput `pulumi:"metadataUrl"`
}

func (GetInstanceSsoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceSso)(nil)).Elem()
}

func (i GetInstanceSsoArgs) ToGetInstanceSsoOutput() GetInstanceSsoOutput {
	return i.ToGetInstanceSsoOutputWithContext(context.Background())
}

func (i GetInstanceSsoArgs) ToGetInstanceSsoOutputWithContext(ctx context.Context) GetInstanceSsoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceSsoOutput)
}

func (i GetInstanceSsoArgs) ToGetInstanceSsoPtrOutput() GetInstanceSsoPtrOutput {
	return i.ToGetInstanceSsoPtrOutputWithContext(context.Background())
}

func (i GetInstanceSsoArgs) ToGetInstanceSsoPtrOutputWithContext(ctx context.Context) GetInstanceSsoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceSsoOutput).ToGetInstanceSsoPtrOutputWithContext(ctx)
}

// GetInstanceSsoPtrInput is an input type that accepts GetInstanceSsoArgs, GetInstanceSsoPtr and GetInstanceSsoPtrOutput values.
// You can construct a concrete instance of `GetInstanceSsoPtrInput` via:
//
//	        GetInstanceSsoArgs{...}
//
//	or:
//
//	        nil
type GetInstanceSsoPtrInput interface {
	pulumi.Input

	ToGetInstanceSsoPtrOutput() GetInstanceSsoPtrOutput
	ToGetInstanceSsoPtrOutputWithContext(context.Context) GetInstanceSsoPtrOutput
}

type getInstanceSsoPtrType GetInstanceSsoArgs

func GetInstanceSsoPtr(v *GetInstanceSsoArgs) GetInstanceSsoPtrInput {
	return (*getInstanceSsoPtrType)(v)
}

func (*getInstanceSsoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceSso)(nil)).Elem()
}

func (i *getInstanceSsoPtrType) ToGetInstanceSsoPtrOutput() GetInstanceSsoPtrOutput {
	return i.ToGetInstanceSsoPtrOutputWithContext(context.Background())
}

func (i *getInstanceSsoPtrType) ToGetInstanceSsoPtrOutputWithContext(ctx context.Context) GetInstanceSsoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceSsoPtrOutput)
}

type GetInstanceSsoOutput struct{ *pulumi.OutputState }

func (GetInstanceSsoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceSso)(nil)).Elem()
}

func (o GetInstanceSsoOutput) ToGetInstanceSsoOutput() GetInstanceSsoOutput {
	return o
}

func (o GetInstanceSsoOutput) ToGetInstanceSsoOutputWithContext(ctx context.Context) GetInstanceSsoOutput {
	return o
}

func (o GetInstanceSsoOutput) ToGetInstanceSsoPtrOutput() GetInstanceSsoPtrOutput {
	return o.ToGetInstanceSsoPtrOutputWithContext(context.Background())
}

func (o GetInstanceSsoOutput) ToGetInstanceSsoPtrOutputWithContext(ctx context.Context) GetInstanceSsoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetInstanceSso) *GetInstanceSso {
		return &v
	}).(GetInstanceSsoPtrOutput)
}

// App Name.	This is only returned after Creating a SAML App.
func (o GetInstanceSsoOutput) AcsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSso) string { return v.AcsUrl }).(pulumi.StringOutput)
}

// The certificate used for signing.	This is only returned after Creating a SAML App.
func (o GetInstanceSsoOutput) Certificate() GetInstanceSsoCertificateOutput {
	return o.ApplyT(func(v GetInstanceSso) GetInstanceSsoCertificate { return v.Certificate }).(GetInstanceSsoCertificateOutput)
}

// The OpenId Connect Client Id. Note that clientSecret is only returned after Creating an OIDC App.
func (o GetInstanceSsoOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSso) string { return v.ClientId }).(pulumi.StringOutput)
}

// OpenId Connet Client Secret
func (o GetInstanceSsoOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSso) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// Issuer of app.	This is only returned after Creating a SAML App.
func (o GetInstanceSsoOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSso) string { return v.Issuer }).(pulumi.StringOutput)
}

// ID of the apps underlying connector.	This is only returned after Creating a SAML App.
func (o GetInstanceSsoOutput) MetadataUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSso) string { return v.MetadataUrl }).(pulumi.StringOutput)
}

type GetInstanceSsoPtrOutput struct{ *pulumi.OutputState }

func (GetInstanceSsoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceSso)(nil)).Elem()
}

func (o GetInstanceSsoPtrOutput) ToGetInstanceSsoPtrOutput() GetInstanceSsoPtrOutput {
	return o
}

func (o GetInstanceSsoPtrOutput) ToGetInstanceSsoPtrOutputWithContext(ctx context.Context) GetInstanceSsoPtrOutput {
	return o
}

func (o GetInstanceSsoPtrOutput) Elem() GetInstanceSsoOutput {
	return o.ApplyT(func(v *GetInstanceSso) GetInstanceSso {
		if v != nil {
			return *v
		}
		var ret GetInstanceSso
		return ret
	}).(GetInstanceSsoOutput)
}

// App Name.	This is only returned after Creating a SAML App.
func (o GetInstanceSsoPtrOutput) AcsUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceSso) *string {
		if v == nil {
			return nil
		}
		return &v.AcsUrl
	}).(pulumi.StringPtrOutput)
}

// The certificate used for signing.	This is only returned after Creating a SAML App.
func (o GetInstanceSsoPtrOutput) Certificate() GetInstanceSsoCertificatePtrOutput {
	return o.ApplyT(func(v *GetInstanceSso) *GetInstanceSsoCertificate {
		if v == nil {
			return nil
		}
		return &v.Certificate
	}).(GetInstanceSsoCertificatePtrOutput)
}

// The OpenId Connect Client Id. Note that clientSecret is only returned after Creating an OIDC App.
func (o GetInstanceSsoPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceSso) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// OpenId Connet Client Secret
func (o GetInstanceSsoPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceSso) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Issuer of app.	This is only returned after Creating a SAML App.
func (o GetInstanceSsoPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceSso) *string {
		if v == nil {
			return nil
		}
		return &v.Issuer
	}).(pulumi.StringPtrOutput)
}

// ID of the apps underlying connector.	This is only returned after Creating a SAML App.
func (o GetInstanceSsoPtrOutput) MetadataUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceSso) *string {
		if v == nil {
			return nil
		}
		return &v.MetadataUrl
	}).(pulumi.StringPtrOutput)
}

type GetInstanceSsoCertificate struct {
	Id    int    `pulumi:"id"`
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// GetInstanceSsoCertificateInput is an input type that accepts GetInstanceSsoCertificateArgs and GetInstanceSsoCertificateOutput values.
// You can construct a concrete instance of `GetInstanceSsoCertificateInput` via:
//
//	GetInstanceSsoCertificateArgs{...}
type GetInstanceSsoCertificateInput interface {
	pulumi.Input

	ToGetInstanceSsoCertificateOutput() GetInstanceSsoCertificateOutput
	ToGetInstanceSsoCertificateOutputWithContext(context.Context) GetInstanceSsoCertificateOutput
}

type GetInstanceSsoCertificateArgs struct {
	Id    pulumi.IntInput    `pulumi:"id"`
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetInstanceSsoCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceSsoCertificate)(nil)).Elem()
}

func (i GetInstanceSsoCertificateArgs) ToGetInstanceSsoCertificateOutput() GetInstanceSsoCertificateOutput {
	return i.ToGetInstanceSsoCertificateOutputWithContext(context.Background())
}

func (i GetInstanceSsoCertificateArgs) ToGetInstanceSsoCertificateOutputWithContext(ctx context.Context) GetInstanceSsoCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceSsoCertificateOutput)
}

func (i GetInstanceSsoCertificateArgs) ToGetInstanceSsoCertificatePtrOutput() GetInstanceSsoCertificatePtrOutput {
	return i.ToGetInstanceSsoCertificatePtrOutputWithContext(context.Background())
}

func (i GetInstanceSsoCertificateArgs) ToGetInstanceSsoCertificatePtrOutputWithContext(ctx context.Context) GetInstanceSsoCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceSsoCertificateOutput).ToGetInstanceSsoCertificatePtrOutputWithContext(ctx)
}

// GetInstanceSsoCertificatePtrInput is an input type that accepts GetInstanceSsoCertificateArgs, GetInstanceSsoCertificatePtr and GetInstanceSsoCertificatePtrOutput values.
// You can construct a concrete instance of `GetInstanceSsoCertificatePtrInput` via:
//
//	        GetInstanceSsoCertificateArgs{...}
//
//	or:
//
//	        nil
type GetInstanceSsoCertificatePtrInput interface {
	pulumi.Input

	ToGetInstanceSsoCertificatePtrOutput() GetInstanceSsoCertificatePtrOutput
	ToGetInstanceSsoCertificatePtrOutputWithContext(context.Context) GetInstanceSsoCertificatePtrOutput
}

type getInstanceSsoCertificatePtrType GetInstanceSsoCertificateArgs

func GetInstanceSsoCertificatePtr(v *GetInstanceSsoCertificateArgs) GetInstanceSsoCertificatePtrInput {
	return (*getInstanceSsoCertificatePtrType)(v)
}

func (*getInstanceSsoCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceSsoCertificate)(nil)).Elem()
}

func (i *getInstanceSsoCertificatePtrType) ToGetInstanceSsoCertificatePtrOutput() GetInstanceSsoCertificatePtrOutput {
	return i.ToGetInstanceSsoCertificatePtrOutputWithContext(context.Background())
}

func (i *getInstanceSsoCertificatePtrType) ToGetInstanceSsoCertificatePtrOutputWithContext(ctx context.Context) GetInstanceSsoCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceSsoCertificatePtrOutput)
}

type GetInstanceSsoCertificateOutput struct{ *pulumi.OutputState }

func (GetInstanceSsoCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceSsoCertificate)(nil)).Elem()
}

func (o GetInstanceSsoCertificateOutput) ToGetInstanceSsoCertificateOutput() GetInstanceSsoCertificateOutput {
	return o
}

func (o GetInstanceSsoCertificateOutput) ToGetInstanceSsoCertificateOutputWithContext(ctx context.Context) GetInstanceSsoCertificateOutput {
	return o
}

func (o GetInstanceSsoCertificateOutput) ToGetInstanceSsoCertificatePtrOutput() GetInstanceSsoCertificatePtrOutput {
	return o.ToGetInstanceSsoCertificatePtrOutputWithContext(context.Background())
}

func (o GetInstanceSsoCertificateOutput) ToGetInstanceSsoCertificatePtrOutputWithContext(ctx context.Context) GetInstanceSsoCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetInstanceSsoCertificate) *GetInstanceSsoCertificate {
		return &v
	}).(GetInstanceSsoCertificatePtrOutput)
}

func (o GetInstanceSsoCertificateOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceSsoCertificate) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetInstanceSsoCertificateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSsoCertificate) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetInstanceSsoCertificateOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSsoCertificate) string { return v.Value }).(pulumi.StringOutput)
}

type GetInstanceSsoCertificatePtrOutput struct{ *pulumi.OutputState }

func (GetInstanceSsoCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInstanceSsoCertificate)(nil)).Elem()
}

func (o GetInstanceSsoCertificatePtrOutput) ToGetInstanceSsoCertificatePtrOutput() GetInstanceSsoCertificatePtrOutput {
	return o
}

func (o GetInstanceSsoCertificatePtrOutput) ToGetInstanceSsoCertificatePtrOutputWithContext(ctx context.Context) GetInstanceSsoCertificatePtrOutput {
	return o
}

func (o GetInstanceSsoCertificatePtrOutput) Elem() GetInstanceSsoCertificateOutput {
	return o.ApplyT(func(v *GetInstanceSsoCertificate) GetInstanceSsoCertificate {
		if v != nil {
			return *v
		}
		var ret GetInstanceSsoCertificate
		return ret
	}).(GetInstanceSsoCertificateOutput)
}

func (o GetInstanceSsoCertificatePtrOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetInstanceSsoCertificate) *int {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.IntPtrOutput)
}

func (o GetInstanceSsoCertificatePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceSsoCertificate) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o GetInstanceSsoCertificatePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInstanceSsoCertificate) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type GetRulesAction struct {
	// The action to apply
	Action string `pulumi:"action"`
	// Only applicable to provisioned and set_* actions. Items in the array will be a plain text string or valid value for the selected action.
	Values []string `pulumi:"values"`
}

// GetRulesActionInput is an input type that accepts GetRulesActionArgs and GetRulesActionOutput values.
// You can construct a concrete instance of `GetRulesActionInput` via:
//
//	GetRulesActionArgs{...}
type GetRulesActionInput interface {
	pulumi.Input

	ToGetRulesActionOutput() GetRulesActionOutput
	ToGetRulesActionOutputWithContext(context.Context) GetRulesActionOutput
}

type GetRulesActionArgs struct {
	// The action to apply
	Action pulumi.StringInput `pulumi:"action"`
	// Only applicable to provisioned and set_* actions. Items in the array will be a plain text string or valid value for the selected action.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRulesActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesAction)(nil)).Elem()
}

func (i GetRulesActionArgs) ToGetRulesActionOutput() GetRulesActionOutput {
	return i.ToGetRulesActionOutputWithContext(context.Background())
}

func (i GetRulesActionArgs) ToGetRulesActionOutputWithContext(ctx context.Context) GetRulesActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesActionOutput)
}

// GetRulesActionArrayInput is an input type that accepts GetRulesActionArray and GetRulesActionArrayOutput values.
// You can construct a concrete instance of `GetRulesActionArrayInput` via:
//
//	GetRulesActionArray{ GetRulesActionArgs{...} }
type GetRulesActionArrayInput interface {
	pulumi.Input

	ToGetRulesActionArrayOutput() GetRulesActionArrayOutput
	ToGetRulesActionArrayOutputWithContext(context.Context) GetRulesActionArrayOutput
}

type GetRulesActionArray []GetRulesActionInput

func (GetRulesActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesAction)(nil)).Elem()
}

func (i GetRulesActionArray) ToGetRulesActionArrayOutput() GetRulesActionArrayOutput {
	return i.ToGetRulesActionArrayOutputWithContext(context.Background())
}

func (i GetRulesActionArray) ToGetRulesActionArrayOutputWithContext(ctx context.Context) GetRulesActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesActionArrayOutput)
}

type GetRulesActionOutput struct{ *pulumi.OutputState }

func (GetRulesActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesAction)(nil)).Elem()
}

func (o GetRulesActionOutput) ToGetRulesActionOutput() GetRulesActionOutput {
	return o
}

func (o GetRulesActionOutput) ToGetRulesActionOutputWithContext(ctx context.Context) GetRulesActionOutput {
	return o
}

// The action to apply
func (o GetRulesActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesAction) string { return v.Action }).(pulumi.StringOutput)
}

// Only applicable to provisioned and set_* actions. Items in the array will be a plain text string or valid value for the selected action.
func (o GetRulesActionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRulesAction) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRulesActionArrayOutput struct{ *pulumi.OutputState }

func (GetRulesActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesAction)(nil)).Elem()
}

func (o GetRulesActionArrayOutput) ToGetRulesActionArrayOutput() GetRulesActionArrayOutput {
	return o
}

func (o GetRulesActionArrayOutput) ToGetRulesActionArrayOutputWithContext(ctx context.Context) GetRulesActionArrayOutput {
	return o
}

func (o GetRulesActionArrayOutput) Index(i pulumi.IntInput) GetRulesActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRulesAction {
		return vs[0].([]GetRulesAction)[vs[1].(int)]
	}).(GetRulesActionOutput)
}

type GetRulesCondition struct {
	// A valid operator for the selected condition source
	Operator string `pulumi:"operator"`
	// source field to check.
	Source string `pulumi:"source"`
	// A plain text string or valid value for the selected  condition source
	Value string `pulumi:"value"`
}

// GetRulesConditionInput is an input type that accepts GetRulesConditionArgs and GetRulesConditionOutput values.
// You can construct a concrete instance of `GetRulesConditionInput` via:
//
//	GetRulesConditionArgs{...}
type GetRulesConditionInput interface {
	pulumi.Input

	ToGetRulesConditionOutput() GetRulesConditionOutput
	ToGetRulesConditionOutputWithContext(context.Context) GetRulesConditionOutput
}

type GetRulesConditionArgs struct {
	// A valid operator for the selected condition source
	Operator pulumi.StringInput `pulumi:"operator"`
	// source field to check.
	Source pulumi.StringInput `pulumi:"source"`
	// A plain text string or valid value for the selected  condition source
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetRulesConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesCondition)(nil)).Elem()
}

func (i GetRulesConditionArgs) ToGetRulesConditionOutput() GetRulesConditionOutput {
	return i.ToGetRulesConditionOutputWithContext(context.Background())
}

func (i GetRulesConditionArgs) ToGetRulesConditionOutputWithContext(ctx context.Context) GetRulesConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesConditionOutput)
}

// GetRulesConditionArrayInput is an input type that accepts GetRulesConditionArray and GetRulesConditionArrayOutput values.
// You can construct a concrete instance of `GetRulesConditionArrayInput` via:
//
//	GetRulesConditionArray{ GetRulesConditionArgs{...} }
type GetRulesConditionArrayInput interface {
	pulumi.Input

	ToGetRulesConditionArrayOutput() GetRulesConditionArrayOutput
	ToGetRulesConditionArrayOutputWithContext(context.Context) GetRulesConditionArrayOutput
}

type GetRulesConditionArray []GetRulesConditionInput

func (GetRulesConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesCondition)(nil)).Elem()
}

func (i GetRulesConditionArray) ToGetRulesConditionArrayOutput() GetRulesConditionArrayOutput {
	return i.ToGetRulesConditionArrayOutputWithContext(context.Background())
}

func (i GetRulesConditionArray) ToGetRulesConditionArrayOutputWithContext(ctx context.Context) GetRulesConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesConditionArrayOutput)
}

type GetRulesConditionOutput struct{ *pulumi.OutputState }

func (GetRulesConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesCondition)(nil)).Elem()
}

func (o GetRulesConditionOutput) ToGetRulesConditionOutput() GetRulesConditionOutput {
	return o
}

func (o GetRulesConditionOutput) ToGetRulesConditionOutputWithContext(ctx context.Context) GetRulesConditionOutput {
	return o
}

// A valid operator for the selected condition source
func (o GetRulesConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesCondition) string { return v.Operator }).(pulumi.StringOutput)
}

// source field to check.
func (o GetRulesConditionOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesCondition) string { return v.Source }).(pulumi.StringOutput)
}

// A plain text string or valid value for the selected  condition source
func (o GetRulesConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesCondition) string { return v.Value }).(pulumi.StringOutput)
}

type GetRulesConditionArrayOutput struct{ *pulumi.OutputState }

func (GetRulesConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesCondition)(nil)).Elem()
}

func (o GetRulesConditionArrayOutput) ToGetRulesConditionArrayOutput() GetRulesConditionArrayOutput {
	return o
}

func (o GetRulesConditionArrayOutput) ToGetRulesConditionArrayOutputWithContext(ctx context.Context) GetRulesConditionArrayOutput {
	return o
}

func (o GetRulesConditionArrayOutput) Index(i pulumi.IntInput) GetRulesConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRulesCondition {
		return vs[0].([]GetRulesCondition)[vs[1].(int)]
	}).(GetRulesConditionOutput)
}

type GetRulesFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetRulesFilterInput is an input type that accepts GetRulesFilterArgs and GetRulesFilterOutput values.
// You can construct a concrete instance of `GetRulesFilterInput` via:
//
//	GetRulesFilterArgs{...}
type GetRulesFilterInput interface {
	pulumi.Input

	ToGetRulesFilterOutput() GetRulesFilterOutput
	ToGetRulesFilterOutputWithContext(context.Context) GetRulesFilterOutput
}

type GetRulesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRulesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesFilter)(nil)).Elem()
}

func (i GetRulesFilterArgs) ToGetRulesFilterOutput() GetRulesFilterOutput {
	return i.ToGetRulesFilterOutputWithContext(context.Background())
}

func (i GetRulesFilterArgs) ToGetRulesFilterOutputWithContext(ctx context.Context) GetRulesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesFilterOutput)
}

// GetRulesFilterArrayInput is an input type that accepts GetRulesFilterArray and GetRulesFilterArrayOutput values.
// You can construct a concrete instance of `GetRulesFilterArrayInput` via:
//
//	GetRulesFilterArray{ GetRulesFilterArgs{...} }
type GetRulesFilterArrayInput interface {
	pulumi.Input

	ToGetRulesFilterArrayOutput() GetRulesFilterArrayOutput
	ToGetRulesFilterArrayOutputWithContext(context.Context) GetRulesFilterArrayOutput
}

type GetRulesFilterArray []GetRulesFilterInput

func (GetRulesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesFilter)(nil)).Elem()
}

func (i GetRulesFilterArray) ToGetRulesFilterArrayOutput() GetRulesFilterArrayOutput {
	return i.ToGetRulesFilterArrayOutputWithContext(context.Background())
}

func (i GetRulesFilterArray) ToGetRulesFilterArrayOutputWithContext(ctx context.Context) GetRulesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesFilterArrayOutput)
}

type GetRulesFilterOutput struct{ *pulumi.OutputState }

func (GetRulesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesFilter)(nil)).Elem()
}

func (o GetRulesFilterOutput) ToGetRulesFilterOutput() GetRulesFilterOutput {
	return o
}

func (o GetRulesFilterOutput) ToGetRulesFilterOutputWithContext(ctx context.Context) GetRulesFilterOutput {
	return o
}

func (o GetRulesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRulesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRulesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRulesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRulesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesFilter)(nil)).Elem()
}

func (o GetRulesFilterArrayOutput) ToGetRulesFilterArrayOutput() GetRulesFilterArrayOutput {
	return o
}

func (o GetRulesFilterArrayOutput) ToGetRulesFilterArrayOutputWithContext(ctx context.Context) GetRulesFilterArrayOutput {
	return o
}

func (o GetRulesFilterArrayOutput) Index(i pulumi.IntInput) GetRulesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRulesFilter {
		return vs[0].([]GetRulesFilter)[vs[1].(int)]
	}).(GetRulesFilterOutput)
}

type GetRulesInstanceAction struct {
	// The action to apply
	Action string `pulumi:"action"`
	// Only applicable to provisioned and set_* actions. Items in the array will be a plain text string or valid value for the selected action.
	Values []string `pulumi:"values"`
}

// GetRulesInstanceActionInput is an input type that accepts GetRulesInstanceActionArgs and GetRulesInstanceActionOutput values.
// You can construct a concrete instance of `GetRulesInstanceActionInput` via:
//
//	GetRulesInstanceActionArgs{...}
type GetRulesInstanceActionInput interface {
	pulumi.Input

	ToGetRulesInstanceActionOutput() GetRulesInstanceActionOutput
	ToGetRulesInstanceActionOutputWithContext(context.Context) GetRulesInstanceActionOutput
}

type GetRulesInstanceActionArgs struct {
	// The action to apply
	Action pulumi.StringInput `pulumi:"action"`
	// Only applicable to provisioned and set_* actions. Items in the array will be a plain text string or valid value for the selected action.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRulesInstanceActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesInstanceAction)(nil)).Elem()
}

func (i GetRulesInstanceActionArgs) ToGetRulesInstanceActionOutput() GetRulesInstanceActionOutput {
	return i.ToGetRulesInstanceActionOutputWithContext(context.Background())
}

func (i GetRulesInstanceActionArgs) ToGetRulesInstanceActionOutputWithContext(ctx context.Context) GetRulesInstanceActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesInstanceActionOutput)
}

// GetRulesInstanceActionArrayInput is an input type that accepts GetRulesInstanceActionArray and GetRulesInstanceActionArrayOutput values.
// You can construct a concrete instance of `GetRulesInstanceActionArrayInput` via:
//
//	GetRulesInstanceActionArray{ GetRulesInstanceActionArgs{...} }
type GetRulesInstanceActionArrayInput interface {
	pulumi.Input

	ToGetRulesInstanceActionArrayOutput() GetRulesInstanceActionArrayOutput
	ToGetRulesInstanceActionArrayOutputWithContext(context.Context) GetRulesInstanceActionArrayOutput
}

type GetRulesInstanceActionArray []GetRulesInstanceActionInput

func (GetRulesInstanceActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesInstanceAction)(nil)).Elem()
}

func (i GetRulesInstanceActionArray) ToGetRulesInstanceActionArrayOutput() GetRulesInstanceActionArrayOutput {
	return i.ToGetRulesInstanceActionArrayOutputWithContext(context.Background())
}

func (i GetRulesInstanceActionArray) ToGetRulesInstanceActionArrayOutputWithContext(ctx context.Context) GetRulesInstanceActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesInstanceActionArrayOutput)
}

type GetRulesInstanceActionOutput struct{ *pulumi.OutputState }

func (GetRulesInstanceActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesInstanceAction)(nil)).Elem()
}

func (o GetRulesInstanceActionOutput) ToGetRulesInstanceActionOutput() GetRulesInstanceActionOutput {
	return o
}

func (o GetRulesInstanceActionOutput) ToGetRulesInstanceActionOutputWithContext(ctx context.Context) GetRulesInstanceActionOutput {
	return o
}

// The action to apply
func (o GetRulesInstanceActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesInstanceAction) string { return v.Action }).(pulumi.StringOutput)
}

// Only applicable to provisioned and set_* actions. Items in the array will be a plain text string or valid value for the selected action.
func (o GetRulesInstanceActionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRulesInstanceAction) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRulesInstanceActionArrayOutput struct{ *pulumi.OutputState }

func (GetRulesInstanceActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesInstanceAction)(nil)).Elem()
}

func (o GetRulesInstanceActionArrayOutput) ToGetRulesInstanceActionArrayOutput() GetRulesInstanceActionArrayOutput {
	return o
}

func (o GetRulesInstanceActionArrayOutput) ToGetRulesInstanceActionArrayOutputWithContext(ctx context.Context) GetRulesInstanceActionArrayOutput {
	return o
}

func (o GetRulesInstanceActionArrayOutput) Index(i pulumi.IntInput) GetRulesInstanceActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRulesInstanceAction {
		return vs[0].([]GetRulesInstanceAction)[vs[1].(int)]
	}).(GetRulesInstanceActionOutput)
}

type GetRulesInstanceCondition struct {
	// A valid operator for the selected condition source
	Operator string `pulumi:"operator"`
	// source field to check.
	Source string `pulumi:"source"`
	// A plain text string or valid value for the selected  condition source
	Value string `pulumi:"value"`
}

// GetRulesInstanceConditionInput is an input type that accepts GetRulesInstanceConditionArgs and GetRulesInstanceConditionOutput values.
// You can construct a concrete instance of `GetRulesInstanceConditionInput` via:
//
//	GetRulesInstanceConditionArgs{...}
type GetRulesInstanceConditionInput interface {
	pulumi.Input

	ToGetRulesInstanceConditionOutput() GetRulesInstanceConditionOutput
	ToGetRulesInstanceConditionOutputWithContext(context.Context) GetRulesInstanceConditionOutput
}

type GetRulesInstanceConditionArgs struct {
	// A valid operator for the selected condition source
	Operator pulumi.StringInput `pulumi:"operator"`
	// source field to check.
	Source pulumi.StringInput `pulumi:"source"`
	// A plain text string or valid value for the selected  condition source
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetRulesInstanceConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesInstanceCondition)(nil)).Elem()
}

func (i GetRulesInstanceConditionArgs) ToGetRulesInstanceConditionOutput() GetRulesInstanceConditionOutput {
	return i.ToGetRulesInstanceConditionOutputWithContext(context.Background())
}

func (i GetRulesInstanceConditionArgs) ToGetRulesInstanceConditionOutputWithContext(ctx context.Context) GetRulesInstanceConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesInstanceConditionOutput)
}

// GetRulesInstanceConditionArrayInput is an input type that accepts GetRulesInstanceConditionArray and GetRulesInstanceConditionArrayOutput values.
// You can construct a concrete instance of `GetRulesInstanceConditionArrayInput` via:
//
//	GetRulesInstanceConditionArray{ GetRulesInstanceConditionArgs{...} }
type GetRulesInstanceConditionArrayInput interface {
	pulumi.Input

	ToGetRulesInstanceConditionArrayOutput() GetRulesInstanceConditionArrayOutput
	ToGetRulesInstanceConditionArrayOutputWithContext(context.Context) GetRulesInstanceConditionArrayOutput
}

type GetRulesInstanceConditionArray []GetRulesInstanceConditionInput

func (GetRulesInstanceConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesInstanceCondition)(nil)).Elem()
}

func (i GetRulesInstanceConditionArray) ToGetRulesInstanceConditionArrayOutput() GetRulesInstanceConditionArrayOutput {
	return i.ToGetRulesInstanceConditionArrayOutputWithContext(context.Background())
}

func (i GetRulesInstanceConditionArray) ToGetRulesInstanceConditionArrayOutputWithContext(ctx context.Context) GetRulesInstanceConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesInstanceConditionArrayOutput)
}

type GetRulesInstanceConditionOutput struct{ *pulumi.OutputState }

func (GetRulesInstanceConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesInstanceCondition)(nil)).Elem()
}

func (o GetRulesInstanceConditionOutput) ToGetRulesInstanceConditionOutput() GetRulesInstanceConditionOutput {
	return o
}

func (o GetRulesInstanceConditionOutput) ToGetRulesInstanceConditionOutputWithContext(ctx context.Context) GetRulesInstanceConditionOutput {
	return o
}

// A valid operator for the selected condition source
func (o GetRulesInstanceConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesInstanceCondition) string { return v.Operator }).(pulumi.StringOutput)
}

// source field to check.
func (o GetRulesInstanceConditionOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesInstanceCondition) string { return v.Source }).(pulumi.StringOutput)
}

// A plain text string or valid value for the selected  condition source
func (o GetRulesInstanceConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesInstanceCondition) string { return v.Value }).(pulumi.StringOutput)
}

type GetRulesInstanceConditionArrayOutput struct{ *pulumi.OutputState }

func (GetRulesInstanceConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesInstanceCondition)(nil)).Elem()
}

func (o GetRulesInstanceConditionArrayOutput) ToGetRulesInstanceConditionArrayOutput() GetRulesInstanceConditionArrayOutput {
	return o
}

func (o GetRulesInstanceConditionArrayOutput) ToGetRulesInstanceConditionArrayOutputWithContext(ctx context.Context) GetRulesInstanceConditionArrayOutput {
	return o
}

func (o GetRulesInstanceConditionArrayOutput) Index(i pulumi.IntInput) GetRulesInstanceConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRulesInstanceCondition {
		return vs[0].([]GetRulesInstanceCondition)[vs[1].(int)]
	}).(GetRulesInstanceConditionOutput)
}

type GetUsersFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetUsersFilterInput is an input type that accepts GetUsersFilterArgs and GetUsersFilterOutput values.
// You can construct a concrete instance of `GetUsersFilterInput` via:
//
//	GetUsersFilterArgs{...}
type GetUsersFilterInput interface {
	pulumi.Input

	ToGetUsersFilterOutput() GetUsersFilterOutput
	ToGetUsersFilterOutputWithContext(context.Context) GetUsersFilterOutput
}

type GetUsersFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetUsersFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersFilter)(nil)).Elem()
}

func (i GetUsersFilterArgs) ToGetUsersFilterOutput() GetUsersFilterOutput {
	return i.ToGetUsersFilterOutputWithContext(context.Background())
}

func (i GetUsersFilterArgs) ToGetUsersFilterOutputWithContext(ctx context.Context) GetUsersFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersFilterOutput)
}

// GetUsersFilterArrayInput is an input type that accepts GetUsersFilterArray and GetUsersFilterArrayOutput values.
// You can construct a concrete instance of `GetUsersFilterArrayInput` via:
//
//	GetUsersFilterArray{ GetUsersFilterArgs{...} }
type GetUsersFilterArrayInput interface {
	pulumi.Input

	ToGetUsersFilterArrayOutput() GetUsersFilterArrayOutput
	ToGetUsersFilterArrayOutputWithContext(context.Context) GetUsersFilterArrayOutput
}

type GetUsersFilterArray []GetUsersFilterInput

func (GetUsersFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersFilter)(nil)).Elem()
}

func (i GetUsersFilterArray) ToGetUsersFilterArrayOutput() GetUsersFilterArrayOutput {
	return i.ToGetUsersFilterArrayOutputWithContext(context.Background())
}

func (i GetUsersFilterArray) ToGetUsersFilterArrayOutputWithContext(ctx context.Context) GetUsersFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersFilterArrayOutput)
}

type GetUsersFilterOutput struct{ *pulumi.OutputState }

func (GetUsersFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersFilter)(nil)).Elem()
}

func (o GetUsersFilterOutput) ToGetUsersFilterOutput() GetUsersFilterOutput {
	return o
}

func (o GetUsersFilterOutput) ToGetUsersFilterOutputWithContext(ctx context.Context) GetUsersFilterOutput {
	return o
}

func (o GetUsersFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetUsersFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUsersFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetUsersFilterArrayOutput struct{ *pulumi.OutputState }

func (GetUsersFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersFilter)(nil)).Elem()
}

func (o GetUsersFilterArrayOutput) ToGetUsersFilterArrayOutput() GetUsersFilterArrayOutput {
	return o
}

func (o GetUsersFilterArrayOutput) ToGetUsersFilterArrayOutputWithContext(ctx context.Context) GetUsersFilterArrayOutput {
	return o
}

func (o GetUsersFilterArrayOutput) Index(i pulumi.IntInput) GetUsersFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersFilter {
		return vs[0].([]GetUsersFilter)[vs[1].(int)]
	}).(GetUsersFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RulesActionInput)(nil)).Elem(), RulesActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesActionArrayInput)(nil)).Elem(), RulesActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesConditionInput)(nil)).Elem(), RulesConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesConditionArrayInput)(nil)).Elem(), RulesConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionsFilterInput)(nil)).Elem(), GetActionsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionsFilterArrayInput)(nil)).Elem(), GetActionsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionsValuesFilterInput)(nil)).Elem(), GetActionsValuesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionsValuesFilterArrayInput)(nil)).Elem(), GetActionsValuesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConditionsFilterInput)(nil)).Elem(), GetConditionsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConditionsFilterArrayInput)(nil)).Elem(), GetConditionsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConditionsOperatorsFilterInput)(nil)).Elem(), GetConditionsOperatorsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConditionsOperatorsFilterArrayInput)(nil)).Elem(), GetConditionsOperatorsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceConfigurationInput)(nil)).Elem(), GetInstanceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceConfigurationPtrInput)(nil)).Elem(), GetInstanceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceEnforcementPointInput)(nil)).Elem(), GetInstanceEnforcementPointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceEnforcementPointPtrInput)(nil)).Elem(), GetInstanceEnforcementPointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceEnforcementPointResourceInput)(nil)).Elem(), GetInstanceEnforcementPointResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceEnforcementPointResourceArrayInput)(nil)).Elem(), GetInstanceEnforcementPointResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceEnforcementPointSessionExpiryFixedInput)(nil)).Elem(), GetInstanceEnforcementPointSessionExpiryFixedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceEnforcementPointSessionExpiryFixedPtrInput)(nil)).Elem(), GetInstanceEnforcementPointSessionExpiryFixedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceEnforcementPointSessionExpiryInactivityInput)(nil)).Elem(), GetInstanceEnforcementPointSessionExpiryInactivityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceEnforcementPointSessionExpiryInactivityPtrInput)(nil)).Elem(), GetInstanceEnforcementPointSessionExpiryInactivityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceParametersInput)(nil)).Elem(), GetInstanceParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceParametersPtrInput)(nil)).Elem(), GetInstanceParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceParametersGroupsInput)(nil)).Elem(), GetInstanceParametersGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceParametersGroupsPtrInput)(nil)).Elem(), GetInstanceParametersGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceProvisioningInput)(nil)).Elem(), GetInstanceProvisioningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceProvisioningPtrInput)(nil)).Elem(), GetInstanceProvisioningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceSsoInput)(nil)).Elem(), GetInstanceSsoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceSsoPtrInput)(nil)).Elem(), GetInstanceSsoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceSsoCertificateInput)(nil)).Elem(), GetInstanceSsoCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceSsoCertificatePtrInput)(nil)).Elem(), GetInstanceSsoCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesActionInput)(nil)).Elem(), GetRulesActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesActionArrayInput)(nil)).Elem(), GetRulesActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesConditionInput)(nil)).Elem(), GetRulesConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesConditionArrayInput)(nil)).Elem(), GetRulesConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesFilterInput)(nil)).Elem(), GetRulesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesFilterArrayInput)(nil)).Elem(), GetRulesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesInstanceActionInput)(nil)).Elem(), GetRulesInstanceActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesInstanceActionArrayInput)(nil)).Elem(), GetRulesInstanceActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesInstanceConditionInput)(nil)).Elem(), GetRulesInstanceConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesInstanceConditionArrayInput)(nil)).Elem(), GetRulesInstanceConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersFilterInput)(nil)).Elem(), GetUsersFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersFilterArrayInput)(nil)).Elem(), GetUsersFilterArray{})
	pulumi.RegisterOutputType(RulesActionOutput{})
	pulumi.RegisterOutputType(RulesActionArrayOutput{})
	pulumi.RegisterOutputType(RulesConditionOutput{})
	pulumi.RegisterOutputType(RulesConditionArrayOutput{})
	pulumi.RegisterOutputType(GetActionsFilterOutput{})
	pulumi.RegisterOutputType(GetActionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetActionsValuesFilterOutput{})
	pulumi.RegisterOutputType(GetActionsValuesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetConditionsFilterOutput{})
	pulumi.RegisterOutputType(GetConditionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetConditionsOperatorsFilterOutput{})
	pulumi.RegisterOutputType(GetConditionsOperatorsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceConfigurationOutput{})
	pulumi.RegisterOutputType(GetInstanceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(GetInstanceEnforcementPointOutput{})
	pulumi.RegisterOutputType(GetInstanceEnforcementPointPtrOutput{})
	pulumi.RegisterOutputType(GetInstanceEnforcementPointResourceOutput{})
	pulumi.RegisterOutputType(GetInstanceEnforcementPointResourceArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceEnforcementPointSessionExpiryFixedOutput{})
	pulumi.RegisterOutputType(GetInstanceEnforcementPointSessionExpiryFixedPtrOutput{})
	pulumi.RegisterOutputType(GetInstanceEnforcementPointSessionExpiryInactivityOutput{})
	pulumi.RegisterOutputType(GetInstanceEnforcementPointSessionExpiryInactivityPtrOutput{})
	pulumi.RegisterOutputType(GetInstanceParametersOutput{})
	pulumi.RegisterOutputType(GetInstanceParametersPtrOutput{})
	pulumi.RegisterOutputType(GetInstanceParametersGroupsOutput{})
	pulumi.RegisterOutputType(GetInstanceParametersGroupsPtrOutput{})
	pulumi.RegisterOutputType(GetInstanceProvisioningOutput{})
	pulumi.RegisterOutputType(GetInstanceProvisioningPtrOutput{})
	pulumi.RegisterOutputType(GetInstanceSsoOutput{})
	pulumi.RegisterOutputType(GetInstanceSsoPtrOutput{})
	pulumi.RegisterOutputType(GetInstanceSsoCertificateOutput{})
	pulumi.RegisterOutputType(GetInstanceSsoCertificatePtrOutput{})
	pulumi.RegisterOutputType(GetRulesActionOutput{})
	pulumi.RegisterOutputType(GetRulesActionArrayOutput{})
	pulumi.RegisterOutputType(GetRulesConditionOutput{})
	pulumi.RegisterOutputType(GetRulesConditionArrayOutput{})
	pulumi.RegisterOutputType(GetRulesFilterOutput{})
	pulumi.RegisterOutputType(GetRulesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRulesInstanceActionOutput{})
	pulumi.RegisterOutputType(GetRulesInstanceActionArrayOutput{})
	pulumi.RegisterOutputType(GetRulesInstanceConditionOutput{})
	pulumi.RegisterOutputType(GetRulesInstanceConditionArrayOutput{})
	pulumi.RegisterOutputType(GetUsersFilterOutput{})
	pulumi.RegisterOutputType(GetUsersFilterArrayOutput{})
}
