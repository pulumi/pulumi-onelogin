// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package onelogin

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AppProvisioning struct {
	Enabled *bool `pulumi:"enabled"`
}

// AppProvisioningInput is an input type that accepts AppProvisioningArgs and AppProvisioningOutput values.
// You can construct a concrete instance of `AppProvisioningInput` via:
//
//	AppProvisioningArgs{...}
type AppProvisioningInput interface {
	pulumi.Input

	ToAppProvisioningOutput() AppProvisioningOutput
	ToAppProvisioningOutputWithContext(context.Context) AppProvisioningOutput
}

type AppProvisioningArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (AppProvisioningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProvisioning)(nil)).Elem()
}

func (i AppProvisioningArgs) ToAppProvisioningOutput() AppProvisioningOutput {
	return i.ToAppProvisioningOutputWithContext(context.Background())
}

func (i AppProvisioningArgs) ToAppProvisioningOutputWithContext(ctx context.Context) AppProvisioningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProvisioningOutput)
}

func (i AppProvisioningArgs) ToAppProvisioningPtrOutput() AppProvisioningPtrOutput {
	return i.ToAppProvisioningPtrOutputWithContext(context.Background())
}

func (i AppProvisioningArgs) ToAppProvisioningPtrOutputWithContext(ctx context.Context) AppProvisioningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProvisioningOutput).ToAppProvisioningPtrOutputWithContext(ctx)
}

// AppProvisioningPtrInput is an input type that accepts AppProvisioningArgs, AppProvisioningPtr and AppProvisioningPtrOutput values.
// You can construct a concrete instance of `AppProvisioningPtrInput` via:
//
//	        AppProvisioningArgs{...}
//
//	or:
//
//	        nil
type AppProvisioningPtrInput interface {
	pulumi.Input

	ToAppProvisioningPtrOutput() AppProvisioningPtrOutput
	ToAppProvisioningPtrOutputWithContext(context.Context) AppProvisioningPtrOutput
}

type appProvisioningPtrType AppProvisioningArgs

func AppProvisioningPtr(v *AppProvisioningArgs) AppProvisioningPtrInput {
	return (*appProvisioningPtrType)(v)
}

func (*appProvisioningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppProvisioning)(nil)).Elem()
}

func (i *appProvisioningPtrType) ToAppProvisioningPtrOutput() AppProvisioningPtrOutput {
	return i.ToAppProvisioningPtrOutputWithContext(context.Background())
}

func (i *appProvisioningPtrType) ToAppProvisioningPtrOutputWithContext(ctx context.Context) AppProvisioningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProvisioningPtrOutput)
}

type AppProvisioningOutput struct{ *pulumi.OutputState }

func (AppProvisioningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProvisioning)(nil)).Elem()
}

func (o AppProvisioningOutput) ToAppProvisioningOutput() AppProvisioningOutput {
	return o
}

func (o AppProvisioningOutput) ToAppProvisioningOutputWithContext(ctx context.Context) AppProvisioningOutput {
	return o
}

func (o AppProvisioningOutput) ToAppProvisioningPtrOutput() AppProvisioningPtrOutput {
	return o.ToAppProvisioningPtrOutputWithContext(context.Background())
}

func (o AppProvisioningOutput) ToAppProvisioningPtrOutputWithContext(ctx context.Context) AppProvisioningPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppProvisioning) *AppProvisioning {
		return &v
	}).(AppProvisioningPtrOutput)
}

func (o AppProvisioningOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppProvisioning) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type AppProvisioningPtrOutput struct{ *pulumi.OutputState }

func (AppProvisioningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppProvisioning)(nil)).Elem()
}

func (o AppProvisioningPtrOutput) ToAppProvisioningPtrOutput() AppProvisioningPtrOutput {
	return o
}

func (o AppProvisioningPtrOutput) ToAppProvisioningPtrOutputWithContext(ctx context.Context) AppProvisioningPtrOutput {
	return o
}

func (o AppProvisioningPtrOutput) Elem() AppProvisioningOutput {
	return o.ApplyT(func(v *AppProvisioning) AppProvisioning {
		if v != nil {
			return *v
		}
		var ret AppProvisioning
		return ret
	}).(AppProvisioningOutput)
}

func (o AppProvisioningPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppProvisioning) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ProviderEndpoint struct {
	Apps  *string `pulumi:"apps"`
	Rules *string `pulumi:"rules"`
	Users *string `pulumi:"users"`
}

// ProviderEndpointInput is an input type that accepts ProviderEndpointArgs and ProviderEndpointOutput values.
// You can construct a concrete instance of `ProviderEndpointInput` via:
//
//	ProviderEndpointArgs{...}
type ProviderEndpointInput interface {
	pulumi.Input

	ToProviderEndpointOutput() ProviderEndpointOutput
	ToProviderEndpointOutputWithContext(context.Context) ProviderEndpointOutput
}

type ProviderEndpointArgs struct {
	Apps  pulumi.StringPtrInput `pulumi:"apps"`
	Rules pulumi.StringPtrInput `pulumi:"rules"`
	Users pulumi.StringPtrInput `pulumi:"users"`
}

func (ProviderEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderEndpoint)(nil)).Elem()
}

func (i ProviderEndpointArgs) ToProviderEndpointOutput() ProviderEndpointOutput {
	return i.ToProviderEndpointOutputWithContext(context.Background())
}

func (i ProviderEndpointArgs) ToProviderEndpointOutputWithContext(ctx context.Context) ProviderEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderEndpointOutput)
}

// ProviderEndpointArrayInput is an input type that accepts ProviderEndpointArray and ProviderEndpointArrayOutput values.
// You can construct a concrete instance of `ProviderEndpointArrayInput` via:
//
//	ProviderEndpointArray{ ProviderEndpointArgs{...} }
type ProviderEndpointArrayInput interface {
	pulumi.Input

	ToProviderEndpointArrayOutput() ProviderEndpointArrayOutput
	ToProviderEndpointArrayOutputWithContext(context.Context) ProviderEndpointArrayOutput
}

type ProviderEndpointArray []ProviderEndpointInput

func (ProviderEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderEndpoint)(nil)).Elem()
}

func (i ProviderEndpointArray) ToProviderEndpointArrayOutput() ProviderEndpointArrayOutput {
	return i.ToProviderEndpointArrayOutputWithContext(context.Background())
}

func (i ProviderEndpointArray) ToProviderEndpointArrayOutputWithContext(ctx context.Context) ProviderEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderEndpointArrayOutput)
}

type ProviderEndpointOutput struct{ *pulumi.OutputState }

func (ProviderEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderEndpoint)(nil)).Elem()
}

func (o ProviderEndpointOutput) ToProviderEndpointOutput() ProviderEndpointOutput {
	return o
}

func (o ProviderEndpointOutput) ToProviderEndpointOutputWithContext(ctx context.Context) ProviderEndpointOutput {
	return o
}

func (o ProviderEndpointOutput) Apps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Apps }).(pulumi.StringPtrOutput)
}

func (o ProviderEndpointOutput) Rules() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Rules }).(pulumi.StringPtrOutput)
}

func (o ProviderEndpointOutput) Users() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Users }).(pulumi.StringPtrOutput)
}

type ProviderEndpointArrayOutput struct{ *pulumi.OutputState }

func (ProviderEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderEndpoint)(nil)).Elem()
}

func (o ProviderEndpointArrayOutput) ToProviderEndpointArrayOutput() ProviderEndpointArrayOutput {
	return o
}

func (o ProviderEndpointArrayOutput) ToProviderEndpointArrayOutputWithContext(ctx context.Context) ProviderEndpointArrayOutput {
	return o
}

func (o ProviderEndpointArrayOutput) Index(i pulumi.IntInput) ProviderEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProviderEndpoint {
		return vs[0].([]ProviderEndpoint)[vs[1].(int)]
	}).(ProviderEndpointOutput)
}

type RuleSource struct {
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

// RuleSourceInput is an input type that accepts RuleSourceArgs and RuleSourceOutput values.
// You can construct a concrete instance of `RuleSourceInput` via:
//
//	RuleSourceArgs{...}
type RuleSourceInput interface {
	pulumi.Input

	ToRuleSourceOutput() RuleSourceOutput
	ToRuleSourceOutputWithContext(context.Context) RuleSourceOutput
}

type RuleSourceArgs struct {
	Id   pulumi.StringPtrInput `pulumi:"id"`
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RuleSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleSource)(nil)).Elem()
}

func (i RuleSourceArgs) ToRuleSourceOutput() RuleSourceOutput {
	return i.ToRuleSourceOutputWithContext(context.Background())
}

func (i RuleSourceArgs) ToRuleSourceOutputWithContext(ctx context.Context) RuleSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleSourceOutput)
}

func (i RuleSourceArgs) ToRuleSourcePtrOutput() RuleSourcePtrOutput {
	return i.ToRuleSourcePtrOutputWithContext(context.Background())
}

func (i RuleSourceArgs) ToRuleSourcePtrOutputWithContext(ctx context.Context) RuleSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleSourceOutput).ToRuleSourcePtrOutputWithContext(ctx)
}

// RuleSourcePtrInput is an input type that accepts RuleSourceArgs, RuleSourcePtr and RuleSourcePtrOutput values.
// You can construct a concrete instance of `RuleSourcePtrInput` via:
//
//	        RuleSourceArgs{...}
//
//	or:
//
//	        nil
type RuleSourcePtrInput interface {
	pulumi.Input

	ToRuleSourcePtrOutput() RuleSourcePtrOutput
	ToRuleSourcePtrOutputWithContext(context.Context) RuleSourcePtrOutput
}

type ruleSourcePtrType RuleSourceArgs

func RuleSourcePtr(v *RuleSourceArgs) RuleSourcePtrInput {
	return (*ruleSourcePtrType)(v)
}

func (*ruleSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleSource)(nil)).Elem()
}

func (i *ruleSourcePtrType) ToRuleSourcePtrOutput() RuleSourcePtrOutput {
	return i.ToRuleSourcePtrOutputWithContext(context.Background())
}

func (i *ruleSourcePtrType) ToRuleSourcePtrOutputWithContext(ctx context.Context) RuleSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleSourcePtrOutput)
}

type RuleSourceOutput struct{ *pulumi.OutputState }

func (RuleSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleSource)(nil)).Elem()
}

func (o RuleSourceOutput) ToRuleSourceOutput() RuleSourceOutput {
	return o
}

func (o RuleSourceOutput) ToRuleSourceOutputWithContext(ctx context.Context) RuleSourceOutput {
	return o
}

func (o RuleSourceOutput) ToRuleSourcePtrOutput() RuleSourcePtrOutput {
	return o.ToRuleSourcePtrOutputWithContext(context.Background())
}

func (o RuleSourceOutput) ToRuleSourcePtrOutputWithContext(ctx context.Context) RuleSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleSource) *RuleSource {
		return &v
	}).(RuleSourcePtrOutput)
}

func (o RuleSourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleSource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o RuleSourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleSource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RuleSourcePtrOutput struct{ *pulumi.OutputState }

func (RuleSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleSource)(nil)).Elem()
}

func (o RuleSourcePtrOutput) ToRuleSourcePtrOutput() RuleSourcePtrOutput {
	return o
}

func (o RuleSourcePtrOutput) ToRuleSourcePtrOutputWithContext(ctx context.Context) RuleSourcePtrOutput {
	return o
}

func (o RuleSourcePtrOutput) Elem() RuleSourceOutput {
	return o.ApplyT(func(v *RuleSource) RuleSource {
		if v != nil {
			return *v
		}
		var ret RuleSource
		return ret
	}).(RuleSourceOutput)
}

func (o RuleSourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleSource) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o RuleSourcePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleSource) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type GetMappingsAction struct {
	Action string   `pulumi:"action"`
	Values []string `pulumi:"values"`
}

// GetMappingsActionInput is an input type that accepts GetMappingsActionArgs and GetMappingsActionOutput values.
// You can construct a concrete instance of `GetMappingsActionInput` via:
//
//	GetMappingsActionArgs{...}
type GetMappingsActionInput interface {
	pulumi.Input

	ToGetMappingsActionOutput() GetMappingsActionOutput
	ToGetMappingsActionOutputWithContext(context.Context) GetMappingsActionOutput
}

type GetMappingsActionArgs struct {
	Action pulumi.StringInput      `pulumi:"action"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetMappingsActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMappingsAction)(nil)).Elem()
}

func (i GetMappingsActionArgs) ToGetMappingsActionOutput() GetMappingsActionOutput {
	return i.ToGetMappingsActionOutputWithContext(context.Background())
}

func (i GetMappingsActionArgs) ToGetMappingsActionOutputWithContext(ctx context.Context) GetMappingsActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMappingsActionOutput)
}

// GetMappingsActionArrayInput is an input type that accepts GetMappingsActionArray and GetMappingsActionArrayOutput values.
// You can construct a concrete instance of `GetMappingsActionArrayInput` via:
//
//	GetMappingsActionArray{ GetMappingsActionArgs{...} }
type GetMappingsActionArrayInput interface {
	pulumi.Input

	ToGetMappingsActionArrayOutput() GetMappingsActionArrayOutput
	ToGetMappingsActionArrayOutputWithContext(context.Context) GetMappingsActionArrayOutput
}

type GetMappingsActionArray []GetMappingsActionInput

func (GetMappingsActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMappingsAction)(nil)).Elem()
}

func (i GetMappingsActionArray) ToGetMappingsActionArrayOutput() GetMappingsActionArrayOutput {
	return i.ToGetMappingsActionArrayOutputWithContext(context.Background())
}

func (i GetMappingsActionArray) ToGetMappingsActionArrayOutputWithContext(ctx context.Context) GetMappingsActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMappingsActionArrayOutput)
}

type GetMappingsActionOutput struct{ *pulumi.OutputState }

func (GetMappingsActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMappingsAction)(nil)).Elem()
}

func (o GetMappingsActionOutput) ToGetMappingsActionOutput() GetMappingsActionOutput {
	return o
}

func (o GetMappingsActionOutput) ToGetMappingsActionOutputWithContext(ctx context.Context) GetMappingsActionOutput {
	return o
}

func (o GetMappingsActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetMappingsAction) string { return v.Action }).(pulumi.StringOutput)
}

func (o GetMappingsActionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMappingsAction) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetMappingsActionArrayOutput struct{ *pulumi.OutputState }

func (GetMappingsActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMappingsAction)(nil)).Elem()
}

func (o GetMappingsActionArrayOutput) ToGetMappingsActionArrayOutput() GetMappingsActionArrayOutput {
	return o
}

func (o GetMappingsActionArrayOutput) ToGetMappingsActionArrayOutputWithContext(ctx context.Context) GetMappingsActionArrayOutput {
	return o
}

func (o GetMappingsActionArrayOutput) Index(i pulumi.IntInput) GetMappingsActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMappingsAction {
		return vs[0].([]GetMappingsAction)[vs[1].(int)]
	}).(GetMappingsActionOutput)
}

type GetMappingsCondition struct {
	Operator string `pulumi:"operator"`
	Source   string `pulumi:"source"`
	Value    string `pulumi:"value"`
}

// GetMappingsConditionInput is an input type that accepts GetMappingsConditionArgs and GetMappingsConditionOutput values.
// You can construct a concrete instance of `GetMappingsConditionInput` via:
//
//	GetMappingsConditionArgs{...}
type GetMappingsConditionInput interface {
	pulumi.Input

	ToGetMappingsConditionOutput() GetMappingsConditionOutput
	ToGetMappingsConditionOutputWithContext(context.Context) GetMappingsConditionOutput
}

type GetMappingsConditionArgs struct {
	Operator pulumi.StringInput `pulumi:"operator"`
	Source   pulumi.StringInput `pulumi:"source"`
	Value    pulumi.StringInput `pulumi:"value"`
}

func (GetMappingsConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMappingsCondition)(nil)).Elem()
}

func (i GetMappingsConditionArgs) ToGetMappingsConditionOutput() GetMappingsConditionOutput {
	return i.ToGetMappingsConditionOutputWithContext(context.Background())
}

func (i GetMappingsConditionArgs) ToGetMappingsConditionOutputWithContext(ctx context.Context) GetMappingsConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMappingsConditionOutput)
}

// GetMappingsConditionArrayInput is an input type that accepts GetMappingsConditionArray and GetMappingsConditionArrayOutput values.
// You can construct a concrete instance of `GetMappingsConditionArrayInput` via:
//
//	GetMappingsConditionArray{ GetMappingsConditionArgs{...} }
type GetMappingsConditionArrayInput interface {
	pulumi.Input

	ToGetMappingsConditionArrayOutput() GetMappingsConditionArrayOutput
	ToGetMappingsConditionArrayOutputWithContext(context.Context) GetMappingsConditionArrayOutput
}

type GetMappingsConditionArray []GetMappingsConditionInput

func (GetMappingsConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMappingsCondition)(nil)).Elem()
}

func (i GetMappingsConditionArray) ToGetMappingsConditionArrayOutput() GetMappingsConditionArrayOutput {
	return i.ToGetMappingsConditionArrayOutputWithContext(context.Background())
}

func (i GetMappingsConditionArray) ToGetMappingsConditionArrayOutputWithContext(ctx context.Context) GetMappingsConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMappingsConditionArrayOutput)
}

type GetMappingsConditionOutput struct{ *pulumi.OutputState }

func (GetMappingsConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMappingsCondition)(nil)).Elem()
}

func (o GetMappingsConditionOutput) ToGetMappingsConditionOutput() GetMappingsConditionOutput {
	return o
}

func (o GetMappingsConditionOutput) ToGetMappingsConditionOutputWithContext(ctx context.Context) GetMappingsConditionOutput {
	return o
}

func (o GetMappingsConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetMappingsCondition) string { return v.Operator }).(pulumi.StringOutput)
}

func (o GetMappingsConditionOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetMappingsCondition) string { return v.Source }).(pulumi.StringOutput)
}

func (o GetMappingsConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetMappingsCondition) string { return v.Value }).(pulumi.StringOutput)
}

type GetMappingsConditionArrayOutput struct{ *pulumi.OutputState }

func (GetMappingsConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMappingsCondition)(nil)).Elem()
}

func (o GetMappingsConditionArrayOutput) ToGetMappingsConditionArrayOutput() GetMappingsConditionArrayOutput {
	return o
}

func (o GetMappingsConditionArrayOutput) ToGetMappingsConditionArrayOutputWithContext(ctx context.Context) GetMappingsConditionArrayOutput {
	return o
}

func (o GetMappingsConditionArrayOutput) Index(i pulumi.IntInput) GetMappingsConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMappingsCondition {
		return vs[0].([]GetMappingsCondition)[vs[1].(int)]
	}).(GetMappingsConditionOutput)
}

type GetMappingsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetMappingsFilterInput is an input type that accepts GetMappingsFilterArgs and GetMappingsFilterOutput values.
// You can construct a concrete instance of `GetMappingsFilterInput` via:
//
//	GetMappingsFilterArgs{...}
type GetMappingsFilterInput interface {
	pulumi.Input

	ToGetMappingsFilterOutput() GetMappingsFilterOutput
	ToGetMappingsFilterOutputWithContext(context.Context) GetMappingsFilterOutput
}

type GetMappingsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetMappingsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMappingsFilter)(nil)).Elem()
}

func (i GetMappingsFilterArgs) ToGetMappingsFilterOutput() GetMappingsFilterOutput {
	return i.ToGetMappingsFilterOutputWithContext(context.Background())
}

func (i GetMappingsFilterArgs) ToGetMappingsFilterOutputWithContext(ctx context.Context) GetMappingsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMappingsFilterOutput)
}

// GetMappingsFilterArrayInput is an input type that accepts GetMappingsFilterArray and GetMappingsFilterArrayOutput values.
// You can construct a concrete instance of `GetMappingsFilterArrayInput` via:
//
//	GetMappingsFilterArray{ GetMappingsFilterArgs{...} }
type GetMappingsFilterArrayInput interface {
	pulumi.Input

	ToGetMappingsFilterArrayOutput() GetMappingsFilterArrayOutput
	ToGetMappingsFilterArrayOutputWithContext(context.Context) GetMappingsFilterArrayOutput
}

type GetMappingsFilterArray []GetMappingsFilterInput

func (GetMappingsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMappingsFilter)(nil)).Elem()
}

func (i GetMappingsFilterArray) ToGetMappingsFilterArrayOutput() GetMappingsFilterArrayOutput {
	return i.ToGetMappingsFilterArrayOutputWithContext(context.Background())
}

func (i GetMappingsFilterArray) ToGetMappingsFilterArrayOutputWithContext(ctx context.Context) GetMappingsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMappingsFilterArrayOutput)
}

type GetMappingsFilterOutput struct{ *pulumi.OutputState }

func (GetMappingsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMappingsFilter)(nil)).Elem()
}

func (o GetMappingsFilterOutput) ToGetMappingsFilterOutput() GetMappingsFilterOutput {
	return o
}

func (o GetMappingsFilterOutput) ToGetMappingsFilterOutputWithContext(ctx context.Context) GetMappingsFilterOutput {
	return o
}

func (o GetMappingsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMappingsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetMappingsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMappingsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetMappingsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetMappingsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMappingsFilter)(nil)).Elem()
}

func (o GetMappingsFilterArrayOutput) ToGetMappingsFilterArrayOutput() GetMappingsFilterArrayOutput {
	return o
}

func (o GetMappingsFilterArrayOutput) ToGetMappingsFilterArrayOutputWithContext(ctx context.Context) GetMappingsFilterArrayOutput {
	return o
}

func (o GetMappingsFilterArrayOutput) Index(i pulumi.IntInput) GetMappingsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMappingsFilter {
		return vs[0].([]GetMappingsFilter)[vs[1].(int)]
	}).(GetMappingsFilterOutput)
}

type GetPrivilegesFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetPrivilegesFilterInput is an input type that accepts GetPrivilegesFilterArgs and GetPrivilegesFilterOutput values.
// You can construct a concrete instance of `GetPrivilegesFilterInput` via:
//
//	GetPrivilegesFilterArgs{...}
type GetPrivilegesFilterInput interface {
	pulumi.Input

	ToGetPrivilegesFilterOutput() GetPrivilegesFilterOutput
	ToGetPrivilegesFilterOutputWithContext(context.Context) GetPrivilegesFilterOutput
}

type GetPrivilegesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetPrivilegesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivilegesFilter)(nil)).Elem()
}

func (i GetPrivilegesFilterArgs) ToGetPrivilegesFilterOutput() GetPrivilegesFilterOutput {
	return i.ToGetPrivilegesFilterOutputWithContext(context.Background())
}

func (i GetPrivilegesFilterArgs) ToGetPrivilegesFilterOutputWithContext(ctx context.Context) GetPrivilegesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivilegesFilterOutput)
}

// GetPrivilegesFilterArrayInput is an input type that accepts GetPrivilegesFilterArray and GetPrivilegesFilterArrayOutput values.
// You can construct a concrete instance of `GetPrivilegesFilterArrayInput` via:
//
//	GetPrivilegesFilterArray{ GetPrivilegesFilterArgs{...} }
type GetPrivilegesFilterArrayInput interface {
	pulumi.Input

	ToGetPrivilegesFilterArrayOutput() GetPrivilegesFilterArrayOutput
	ToGetPrivilegesFilterArrayOutputWithContext(context.Context) GetPrivilegesFilterArrayOutput
}

type GetPrivilegesFilterArray []GetPrivilegesFilterInput

func (GetPrivilegesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivilegesFilter)(nil)).Elem()
}

func (i GetPrivilegesFilterArray) ToGetPrivilegesFilterArrayOutput() GetPrivilegesFilterArrayOutput {
	return i.ToGetPrivilegesFilterArrayOutputWithContext(context.Background())
}

func (i GetPrivilegesFilterArray) ToGetPrivilegesFilterArrayOutputWithContext(ctx context.Context) GetPrivilegesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivilegesFilterArrayOutput)
}

type GetPrivilegesFilterOutput struct{ *pulumi.OutputState }

func (GetPrivilegesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivilegesFilter)(nil)).Elem()
}

func (o GetPrivilegesFilterOutput) ToGetPrivilegesFilterOutput() GetPrivilegesFilterOutput {
	return o
}

func (o GetPrivilegesFilterOutput) ToGetPrivilegesFilterOutputWithContext(ctx context.Context) GetPrivilegesFilterOutput {
	return o
}

func (o GetPrivilegesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivilegesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetPrivilegesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPrivilegesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetPrivilegesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetPrivilegesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivilegesFilter)(nil)).Elem()
}

func (o GetPrivilegesFilterArrayOutput) ToGetPrivilegesFilterArrayOutput() GetPrivilegesFilterArrayOutput {
	return o
}

func (o GetPrivilegesFilterArrayOutput) ToGetPrivilegesFilterArrayOutputWithContext(ctx context.Context) GetPrivilegesFilterArrayOutput {
	return o
}

func (o GetPrivilegesFilterArrayOutput) Index(i pulumi.IntInput) GetPrivilegesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivilegesFilter {
		return vs[0].([]GetPrivilegesFilter)[vs[1].(int)]
	}).(GetPrivilegesFilterOutput)
}

type GetPrivilegesPrivilege struct {
	Statements []GetPrivilegesPrivilegeStatement `pulumi:"statements"`
	Version    string                            `pulumi:"version"`
}

// GetPrivilegesPrivilegeInput is an input type that accepts GetPrivilegesPrivilegeArgs and GetPrivilegesPrivilegeOutput values.
// You can construct a concrete instance of `GetPrivilegesPrivilegeInput` via:
//
//	GetPrivilegesPrivilegeArgs{...}
type GetPrivilegesPrivilegeInput interface {
	pulumi.Input

	ToGetPrivilegesPrivilegeOutput() GetPrivilegesPrivilegeOutput
	ToGetPrivilegesPrivilegeOutputWithContext(context.Context) GetPrivilegesPrivilegeOutput
}

type GetPrivilegesPrivilegeArgs struct {
	Statements GetPrivilegesPrivilegeStatementArrayInput `pulumi:"statements"`
	Version    pulumi.StringInput                        `pulumi:"version"`
}

func (GetPrivilegesPrivilegeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivilegesPrivilege)(nil)).Elem()
}

func (i GetPrivilegesPrivilegeArgs) ToGetPrivilegesPrivilegeOutput() GetPrivilegesPrivilegeOutput {
	return i.ToGetPrivilegesPrivilegeOutputWithContext(context.Background())
}

func (i GetPrivilegesPrivilegeArgs) ToGetPrivilegesPrivilegeOutputWithContext(ctx context.Context) GetPrivilegesPrivilegeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivilegesPrivilegeOutput)
}

func (i GetPrivilegesPrivilegeArgs) ToGetPrivilegesPrivilegePtrOutput() GetPrivilegesPrivilegePtrOutput {
	return i.ToGetPrivilegesPrivilegePtrOutputWithContext(context.Background())
}

func (i GetPrivilegesPrivilegeArgs) ToGetPrivilegesPrivilegePtrOutputWithContext(ctx context.Context) GetPrivilegesPrivilegePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivilegesPrivilegeOutput).ToGetPrivilegesPrivilegePtrOutputWithContext(ctx)
}

// GetPrivilegesPrivilegePtrInput is an input type that accepts GetPrivilegesPrivilegeArgs, GetPrivilegesPrivilegePtr and GetPrivilegesPrivilegePtrOutput values.
// You can construct a concrete instance of `GetPrivilegesPrivilegePtrInput` via:
//
//	        GetPrivilegesPrivilegeArgs{...}
//
//	or:
//
//	        nil
type GetPrivilegesPrivilegePtrInput interface {
	pulumi.Input

	ToGetPrivilegesPrivilegePtrOutput() GetPrivilegesPrivilegePtrOutput
	ToGetPrivilegesPrivilegePtrOutputWithContext(context.Context) GetPrivilegesPrivilegePtrOutput
}

type getPrivilegesPrivilegePtrType GetPrivilegesPrivilegeArgs

func GetPrivilegesPrivilegePtr(v *GetPrivilegesPrivilegeArgs) GetPrivilegesPrivilegePtrInput {
	return (*getPrivilegesPrivilegePtrType)(v)
}

func (*getPrivilegesPrivilegePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPrivilegesPrivilege)(nil)).Elem()
}

func (i *getPrivilegesPrivilegePtrType) ToGetPrivilegesPrivilegePtrOutput() GetPrivilegesPrivilegePtrOutput {
	return i.ToGetPrivilegesPrivilegePtrOutputWithContext(context.Background())
}

func (i *getPrivilegesPrivilegePtrType) ToGetPrivilegesPrivilegePtrOutputWithContext(ctx context.Context) GetPrivilegesPrivilegePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivilegesPrivilegePtrOutput)
}

type GetPrivilegesPrivilegeOutput struct{ *pulumi.OutputState }

func (GetPrivilegesPrivilegeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivilegesPrivilege)(nil)).Elem()
}

func (o GetPrivilegesPrivilegeOutput) ToGetPrivilegesPrivilegeOutput() GetPrivilegesPrivilegeOutput {
	return o
}

func (o GetPrivilegesPrivilegeOutput) ToGetPrivilegesPrivilegeOutputWithContext(ctx context.Context) GetPrivilegesPrivilegeOutput {
	return o
}

func (o GetPrivilegesPrivilegeOutput) ToGetPrivilegesPrivilegePtrOutput() GetPrivilegesPrivilegePtrOutput {
	return o.ToGetPrivilegesPrivilegePtrOutputWithContext(context.Background())
}

func (o GetPrivilegesPrivilegeOutput) ToGetPrivilegesPrivilegePtrOutputWithContext(ctx context.Context) GetPrivilegesPrivilegePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetPrivilegesPrivilege) *GetPrivilegesPrivilege {
		return &v
	}).(GetPrivilegesPrivilegePtrOutput)
}

func (o GetPrivilegesPrivilegeOutput) Statements() GetPrivilegesPrivilegeStatementArrayOutput {
	return o.ApplyT(func(v GetPrivilegesPrivilege) []GetPrivilegesPrivilegeStatement { return v.Statements }).(GetPrivilegesPrivilegeStatementArrayOutput)
}

func (o GetPrivilegesPrivilegeOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivilegesPrivilege) string { return v.Version }).(pulumi.StringOutput)
}

type GetPrivilegesPrivilegePtrOutput struct{ *pulumi.OutputState }

func (GetPrivilegesPrivilegePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPrivilegesPrivilege)(nil)).Elem()
}

func (o GetPrivilegesPrivilegePtrOutput) ToGetPrivilegesPrivilegePtrOutput() GetPrivilegesPrivilegePtrOutput {
	return o
}

func (o GetPrivilegesPrivilegePtrOutput) ToGetPrivilegesPrivilegePtrOutputWithContext(ctx context.Context) GetPrivilegesPrivilegePtrOutput {
	return o
}

func (o GetPrivilegesPrivilegePtrOutput) Elem() GetPrivilegesPrivilegeOutput {
	return o.ApplyT(func(v *GetPrivilegesPrivilege) GetPrivilegesPrivilege {
		if v != nil {
			return *v
		}
		var ret GetPrivilegesPrivilege
		return ret
	}).(GetPrivilegesPrivilegeOutput)
}

func (o GetPrivilegesPrivilegePtrOutput) Statements() GetPrivilegesPrivilegeStatementArrayOutput {
	return o.ApplyT(func(v *GetPrivilegesPrivilege) []GetPrivilegesPrivilegeStatement {
		if v == nil {
			return nil
		}
		return v.Statements
	}).(GetPrivilegesPrivilegeStatementArrayOutput)
}

func (o GetPrivilegesPrivilegePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPrivilegesPrivilege) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

type GetPrivilegesPrivilegeStatement struct {
	Actions []string `pulumi:"actions"`
	Effect  string   `pulumi:"effect"`
	Scopes  []string `pulumi:"scopes"`
}

// GetPrivilegesPrivilegeStatementInput is an input type that accepts GetPrivilegesPrivilegeStatementArgs and GetPrivilegesPrivilegeStatementOutput values.
// You can construct a concrete instance of `GetPrivilegesPrivilegeStatementInput` via:
//
//	GetPrivilegesPrivilegeStatementArgs{...}
type GetPrivilegesPrivilegeStatementInput interface {
	pulumi.Input

	ToGetPrivilegesPrivilegeStatementOutput() GetPrivilegesPrivilegeStatementOutput
	ToGetPrivilegesPrivilegeStatementOutputWithContext(context.Context) GetPrivilegesPrivilegeStatementOutput
}

type GetPrivilegesPrivilegeStatementArgs struct {
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	Effect  pulumi.StringInput      `pulumi:"effect"`
	Scopes  pulumi.StringArrayInput `pulumi:"scopes"`
}

func (GetPrivilegesPrivilegeStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivilegesPrivilegeStatement)(nil)).Elem()
}

func (i GetPrivilegesPrivilegeStatementArgs) ToGetPrivilegesPrivilegeStatementOutput() GetPrivilegesPrivilegeStatementOutput {
	return i.ToGetPrivilegesPrivilegeStatementOutputWithContext(context.Background())
}

func (i GetPrivilegesPrivilegeStatementArgs) ToGetPrivilegesPrivilegeStatementOutputWithContext(ctx context.Context) GetPrivilegesPrivilegeStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivilegesPrivilegeStatementOutput)
}

// GetPrivilegesPrivilegeStatementArrayInput is an input type that accepts GetPrivilegesPrivilegeStatementArray and GetPrivilegesPrivilegeStatementArrayOutput values.
// You can construct a concrete instance of `GetPrivilegesPrivilegeStatementArrayInput` via:
//
//	GetPrivilegesPrivilegeStatementArray{ GetPrivilegesPrivilegeStatementArgs{...} }
type GetPrivilegesPrivilegeStatementArrayInput interface {
	pulumi.Input

	ToGetPrivilegesPrivilegeStatementArrayOutput() GetPrivilegesPrivilegeStatementArrayOutput
	ToGetPrivilegesPrivilegeStatementArrayOutputWithContext(context.Context) GetPrivilegesPrivilegeStatementArrayOutput
}

type GetPrivilegesPrivilegeStatementArray []GetPrivilegesPrivilegeStatementInput

func (GetPrivilegesPrivilegeStatementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivilegesPrivilegeStatement)(nil)).Elem()
}

func (i GetPrivilegesPrivilegeStatementArray) ToGetPrivilegesPrivilegeStatementArrayOutput() GetPrivilegesPrivilegeStatementArrayOutput {
	return i.ToGetPrivilegesPrivilegeStatementArrayOutputWithContext(context.Background())
}

func (i GetPrivilegesPrivilegeStatementArray) ToGetPrivilegesPrivilegeStatementArrayOutputWithContext(ctx context.Context) GetPrivilegesPrivilegeStatementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivilegesPrivilegeStatementArrayOutput)
}

type GetPrivilegesPrivilegeStatementOutput struct{ *pulumi.OutputState }

func (GetPrivilegesPrivilegeStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivilegesPrivilegeStatement)(nil)).Elem()
}

func (o GetPrivilegesPrivilegeStatementOutput) ToGetPrivilegesPrivilegeStatementOutput() GetPrivilegesPrivilegeStatementOutput {
	return o
}

func (o GetPrivilegesPrivilegeStatementOutput) ToGetPrivilegesPrivilegeStatementOutputWithContext(ctx context.Context) GetPrivilegesPrivilegeStatementOutput {
	return o
}

func (o GetPrivilegesPrivilegeStatementOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPrivilegesPrivilegeStatement) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

func (o GetPrivilegesPrivilegeStatementOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivilegesPrivilegeStatement) string { return v.Effect }).(pulumi.StringOutput)
}

func (o GetPrivilegesPrivilegeStatementOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPrivilegesPrivilegeStatement) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

type GetPrivilegesPrivilegeStatementArrayOutput struct{ *pulumi.OutputState }

func (GetPrivilegesPrivilegeStatementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivilegesPrivilegeStatement)(nil)).Elem()
}

func (o GetPrivilegesPrivilegeStatementArrayOutput) ToGetPrivilegesPrivilegeStatementArrayOutput() GetPrivilegesPrivilegeStatementArrayOutput {
	return o
}

func (o GetPrivilegesPrivilegeStatementArrayOutput) ToGetPrivilegesPrivilegeStatementArrayOutputWithContext(ctx context.Context) GetPrivilegesPrivilegeStatementArrayOutput {
	return o
}

func (o GetPrivilegesPrivilegeStatementArrayOutput) Index(i pulumi.IntInput) GetPrivilegesPrivilegeStatementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivilegesPrivilegeStatement {
		return vs[0].([]GetPrivilegesPrivilegeStatement)[vs[1].(int)]
	}).(GetPrivilegesPrivilegeStatementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppProvisioningInput)(nil)).Elem(), AppProvisioningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppProvisioningPtrInput)(nil)).Elem(), AppProvisioningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderEndpointInput)(nil)).Elem(), ProviderEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderEndpointArrayInput)(nil)).Elem(), ProviderEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleSourceInput)(nil)).Elem(), RuleSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleSourcePtrInput)(nil)).Elem(), RuleSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMappingsActionInput)(nil)).Elem(), GetMappingsActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMappingsActionArrayInput)(nil)).Elem(), GetMappingsActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMappingsConditionInput)(nil)).Elem(), GetMappingsConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMappingsConditionArrayInput)(nil)).Elem(), GetMappingsConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMappingsFilterInput)(nil)).Elem(), GetMappingsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMappingsFilterArrayInput)(nil)).Elem(), GetMappingsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivilegesFilterInput)(nil)).Elem(), GetPrivilegesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivilegesFilterArrayInput)(nil)).Elem(), GetPrivilegesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivilegesPrivilegeInput)(nil)).Elem(), GetPrivilegesPrivilegeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivilegesPrivilegePtrInput)(nil)).Elem(), GetPrivilegesPrivilegeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivilegesPrivilegeStatementInput)(nil)).Elem(), GetPrivilegesPrivilegeStatementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivilegesPrivilegeStatementArrayInput)(nil)).Elem(), GetPrivilegesPrivilegeStatementArray{})
	pulumi.RegisterOutputType(AppProvisioningOutput{})
	pulumi.RegisterOutputType(AppProvisioningPtrOutput{})
	pulumi.RegisterOutputType(ProviderEndpointOutput{})
	pulumi.RegisterOutputType(ProviderEndpointArrayOutput{})
	pulumi.RegisterOutputType(RuleSourceOutput{})
	pulumi.RegisterOutputType(RuleSourcePtrOutput{})
	pulumi.RegisterOutputType(GetMappingsActionOutput{})
	pulumi.RegisterOutputType(GetMappingsActionArrayOutput{})
	pulumi.RegisterOutputType(GetMappingsConditionOutput{})
	pulumi.RegisterOutputType(GetMappingsConditionArrayOutput{})
	pulumi.RegisterOutputType(GetMappingsFilterOutput{})
	pulumi.RegisterOutputType(GetMappingsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetPrivilegesFilterOutput{})
	pulumi.RegisterOutputType(GetPrivilegesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetPrivilegesPrivilegeOutput{})
	pulumi.RegisterOutputType(GetPrivilegesPrivilegePtrOutput{})
	pulumi.RegisterOutputType(GetPrivilegesPrivilegeStatementOutput{})
	pulumi.RegisterOutputType(GetPrivilegesPrivilegeStatementArrayOutput{})
}
