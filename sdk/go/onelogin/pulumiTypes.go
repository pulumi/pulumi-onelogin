// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package onelogin

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-onelogin/sdk/go/onelogin/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AppParameters struct {
	AttributesTransformations *string `pulumi:"attributesTransformations"`
	DefaultValues             *string `pulumi:"defaultValues"`
	IncludeInSamlAssertion    *bool   `pulumi:"includeInSamlAssertion"`
	Label                     *string `pulumi:"label"`
	ParamId                   *int    `pulumi:"paramId"`
	ParamKeyName              string  `pulumi:"paramKeyName"`
	ProvisionedEntitlements   *bool   `pulumi:"provisionedEntitlements"`
	SafeEntitlementsEnabled   *bool   `pulumi:"safeEntitlementsEnabled"`
	SkipIfBlank               *bool   `pulumi:"skipIfBlank"`
	UserAttributeMacros       *string `pulumi:"userAttributeMacros"`
	UserAttributeMappings     *string `pulumi:"userAttributeMappings"`
	Values                    *string `pulumi:"values"`
}

// AppParametersInput is an input type that accepts AppParametersArgs and AppParametersOutput values.
// You can construct a concrete instance of `AppParametersInput` via:
//
//	AppParametersArgs{...}
type AppParametersInput interface {
	pulumi.Input

	ToAppParametersOutput() AppParametersOutput
	ToAppParametersOutputWithContext(context.Context) AppParametersOutput
}

type AppParametersArgs struct {
	AttributesTransformations pulumi.StringPtrInput `pulumi:"attributesTransformations"`
	DefaultValues             pulumi.StringPtrInput `pulumi:"defaultValues"`
	IncludeInSamlAssertion    pulumi.BoolPtrInput   `pulumi:"includeInSamlAssertion"`
	Label                     pulumi.StringPtrInput `pulumi:"label"`
	ParamId                   pulumi.IntPtrInput    `pulumi:"paramId"`
	ParamKeyName              pulumi.StringInput    `pulumi:"paramKeyName"`
	ProvisionedEntitlements   pulumi.BoolPtrInput   `pulumi:"provisionedEntitlements"`
	SafeEntitlementsEnabled   pulumi.BoolPtrInput   `pulumi:"safeEntitlementsEnabled"`
	SkipIfBlank               pulumi.BoolPtrInput   `pulumi:"skipIfBlank"`
	UserAttributeMacros       pulumi.StringPtrInput `pulumi:"userAttributeMacros"`
	UserAttributeMappings     pulumi.StringPtrInput `pulumi:"userAttributeMappings"`
	Values                    pulumi.StringPtrInput `pulumi:"values"`
}

func (AppParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppParameters)(nil)).Elem()
}

func (i AppParametersArgs) ToAppParametersOutput() AppParametersOutput {
	return i.ToAppParametersOutputWithContext(context.Background())
}

func (i AppParametersArgs) ToAppParametersOutputWithContext(ctx context.Context) AppParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppParametersOutput)
}

func (i AppParametersArgs) ToAppParametersPtrOutput() AppParametersPtrOutput {
	return i.ToAppParametersPtrOutputWithContext(context.Background())
}

func (i AppParametersArgs) ToAppParametersPtrOutputWithContext(ctx context.Context) AppParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppParametersOutput).ToAppParametersPtrOutputWithContext(ctx)
}

// AppParametersPtrInput is an input type that accepts AppParametersArgs, AppParametersPtr and AppParametersPtrOutput values.
// You can construct a concrete instance of `AppParametersPtrInput` via:
//
//	        AppParametersArgs{...}
//
//	or:
//
//	        nil
type AppParametersPtrInput interface {
	pulumi.Input

	ToAppParametersPtrOutput() AppParametersPtrOutput
	ToAppParametersPtrOutputWithContext(context.Context) AppParametersPtrOutput
}

type appParametersPtrType AppParametersArgs

func AppParametersPtr(v *AppParametersArgs) AppParametersPtrInput {
	return (*appParametersPtrType)(v)
}

func (*appParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppParameters)(nil)).Elem()
}

func (i *appParametersPtrType) ToAppParametersPtrOutput() AppParametersPtrOutput {
	return i.ToAppParametersPtrOutputWithContext(context.Background())
}

func (i *appParametersPtrType) ToAppParametersPtrOutputWithContext(ctx context.Context) AppParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppParametersPtrOutput)
}

type AppParametersOutput struct{ *pulumi.OutputState }

func (AppParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppParameters)(nil)).Elem()
}

func (o AppParametersOutput) ToAppParametersOutput() AppParametersOutput {
	return o
}

func (o AppParametersOutput) ToAppParametersOutputWithContext(ctx context.Context) AppParametersOutput {
	return o
}

func (o AppParametersOutput) ToAppParametersPtrOutput() AppParametersPtrOutput {
	return o.ToAppParametersPtrOutputWithContext(context.Background())
}

func (o AppParametersOutput) ToAppParametersPtrOutputWithContext(ctx context.Context) AppParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppParameters) *AppParameters {
		return &v
	}).(AppParametersPtrOutput)
}

func (o AppParametersOutput) AttributesTransformations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppParameters) *string { return v.AttributesTransformations }).(pulumi.StringPtrOutput)
}

func (o AppParametersOutput) DefaultValues() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppParameters) *string { return v.DefaultValues }).(pulumi.StringPtrOutput)
}

func (o AppParametersOutput) IncludeInSamlAssertion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppParameters) *bool { return v.IncludeInSamlAssertion }).(pulumi.BoolPtrOutput)
}

func (o AppParametersOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppParameters) *string { return v.Label }).(pulumi.StringPtrOutput)
}

func (o AppParametersOutput) ParamId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppParameters) *int { return v.ParamId }).(pulumi.IntPtrOutput)
}

func (o AppParametersOutput) ParamKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v AppParameters) string { return v.ParamKeyName }).(pulumi.StringOutput)
}

func (o AppParametersOutput) ProvisionedEntitlements() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppParameters) *bool { return v.ProvisionedEntitlements }).(pulumi.BoolPtrOutput)
}

func (o AppParametersOutput) SafeEntitlementsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppParameters) *bool { return v.SafeEntitlementsEnabled }).(pulumi.BoolPtrOutput)
}

func (o AppParametersOutput) SkipIfBlank() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppParameters) *bool { return v.SkipIfBlank }).(pulumi.BoolPtrOutput)
}

func (o AppParametersOutput) UserAttributeMacros() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppParameters) *string { return v.UserAttributeMacros }).(pulumi.StringPtrOutput)
}

func (o AppParametersOutput) UserAttributeMappings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppParameters) *string { return v.UserAttributeMappings }).(pulumi.StringPtrOutput)
}

func (o AppParametersOutput) Values() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppParameters) *string { return v.Values }).(pulumi.StringPtrOutput)
}

type AppParametersPtrOutput struct{ *pulumi.OutputState }

func (AppParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppParameters)(nil)).Elem()
}

func (o AppParametersPtrOutput) ToAppParametersPtrOutput() AppParametersPtrOutput {
	return o
}

func (o AppParametersPtrOutput) ToAppParametersPtrOutputWithContext(ctx context.Context) AppParametersPtrOutput {
	return o
}

func (o AppParametersPtrOutput) Elem() AppParametersOutput {
	return o.ApplyT(func(v *AppParameters) AppParameters {
		if v != nil {
			return *v
		}
		var ret AppParameters
		return ret
	}).(AppParametersOutput)
}

func (o AppParametersPtrOutput) AttributesTransformations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppParameters) *string {
		if v == nil {
			return nil
		}
		return v.AttributesTransformations
	}).(pulumi.StringPtrOutput)
}

func (o AppParametersPtrOutput) DefaultValues() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppParameters) *string {
		if v == nil {
			return nil
		}
		return v.DefaultValues
	}).(pulumi.StringPtrOutput)
}

func (o AppParametersPtrOutput) IncludeInSamlAssertion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppParameters) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeInSamlAssertion
	}).(pulumi.BoolPtrOutput)
}

func (o AppParametersPtrOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppParameters) *string {
		if v == nil {
			return nil
		}
		return v.Label
	}).(pulumi.StringPtrOutput)
}

func (o AppParametersPtrOutput) ParamId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppParameters) *int {
		if v == nil {
			return nil
		}
		return v.ParamId
	}).(pulumi.IntPtrOutput)
}

func (o AppParametersPtrOutput) ParamKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppParameters) *string {
		if v == nil {
			return nil
		}
		return &v.ParamKeyName
	}).(pulumi.StringPtrOutput)
}

func (o AppParametersPtrOutput) ProvisionedEntitlements() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppParameters) *bool {
		if v == nil {
			return nil
		}
		return v.ProvisionedEntitlements
	}).(pulumi.BoolPtrOutput)
}

func (o AppParametersPtrOutput) SafeEntitlementsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppParameters) *bool {
		if v == nil {
			return nil
		}
		return v.SafeEntitlementsEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o AppParametersPtrOutput) SkipIfBlank() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppParameters) *bool {
		if v == nil {
			return nil
		}
		return v.SkipIfBlank
	}).(pulumi.BoolPtrOutput)
}

func (o AppParametersPtrOutput) UserAttributeMacros() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppParameters) *string {
		if v == nil {
			return nil
		}
		return v.UserAttributeMacros
	}).(pulumi.StringPtrOutput)
}

func (o AppParametersPtrOutput) UserAttributeMappings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppParameters) *string {
		if v == nil {
			return nil
		}
		return v.UserAttributeMappings
	}).(pulumi.StringPtrOutput)
}

func (o AppParametersPtrOutput) Values() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppParameters) *string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringPtrOutput)
}

type AppRulesAction struct {
	Action     string   `pulumi:"action"`
	Expression *string  `pulumi:"expression"`
	Values     []string `pulumi:"values"`
}

// AppRulesActionInput is an input type that accepts AppRulesActionArgs and AppRulesActionOutput values.
// You can construct a concrete instance of `AppRulesActionInput` via:
//
//	AppRulesActionArgs{...}
type AppRulesActionInput interface {
	pulumi.Input

	ToAppRulesActionOutput() AppRulesActionOutput
	ToAppRulesActionOutputWithContext(context.Context) AppRulesActionOutput
}

type AppRulesActionArgs struct {
	Action     pulumi.StringInput      `pulumi:"action"`
	Expression pulumi.StringPtrInput   `pulumi:"expression"`
	Values     pulumi.StringArrayInput `pulumi:"values"`
}

func (AppRulesActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppRulesAction)(nil)).Elem()
}

func (i AppRulesActionArgs) ToAppRulesActionOutput() AppRulesActionOutput {
	return i.ToAppRulesActionOutputWithContext(context.Background())
}

func (i AppRulesActionArgs) ToAppRulesActionOutputWithContext(ctx context.Context) AppRulesActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppRulesActionOutput)
}

// AppRulesActionArrayInput is an input type that accepts AppRulesActionArray and AppRulesActionArrayOutput values.
// You can construct a concrete instance of `AppRulesActionArrayInput` via:
//
//	AppRulesActionArray{ AppRulesActionArgs{...} }
type AppRulesActionArrayInput interface {
	pulumi.Input

	ToAppRulesActionArrayOutput() AppRulesActionArrayOutput
	ToAppRulesActionArrayOutputWithContext(context.Context) AppRulesActionArrayOutput
}

type AppRulesActionArray []AppRulesActionInput

func (AppRulesActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppRulesAction)(nil)).Elem()
}

func (i AppRulesActionArray) ToAppRulesActionArrayOutput() AppRulesActionArrayOutput {
	return i.ToAppRulesActionArrayOutputWithContext(context.Background())
}

func (i AppRulesActionArray) ToAppRulesActionArrayOutputWithContext(ctx context.Context) AppRulesActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppRulesActionArrayOutput)
}

type AppRulesActionOutput struct{ *pulumi.OutputState }

func (AppRulesActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppRulesAction)(nil)).Elem()
}

func (o AppRulesActionOutput) ToAppRulesActionOutput() AppRulesActionOutput {
	return o
}

func (o AppRulesActionOutput) ToAppRulesActionOutputWithContext(ctx context.Context) AppRulesActionOutput {
	return o
}

func (o AppRulesActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v AppRulesAction) string { return v.Action }).(pulumi.StringOutput)
}

func (o AppRulesActionOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppRulesAction) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

func (o AppRulesActionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppRulesAction) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type AppRulesActionArrayOutput struct{ *pulumi.OutputState }

func (AppRulesActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppRulesAction)(nil)).Elem()
}

func (o AppRulesActionArrayOutput) ToAppRulesActionArrayOutput() AppRulesActionArrayOutput {
	return o
}

func (o AppRulesActionArrayOutput) ToAppRulesActionArrayOutputWithContext(ctx context.Context) AppRulesActionArrayOutput {
	return o
}

func (o AppRulesActionArrayOutput) Index(i pulumi.IntInput) AppRulesActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppRulesAction {
		return vs[0].([]AppRulesAction)[vs[1].(int)]
	}).(AppRulesActionOutput)
}

type AppRulesCondition struct {
	Operator string `pulumi:"operator"`
	Source   string `pulumi:"source"`
	Value    string `pulumi:"value"`
}

// AppRulesConditionInput is an input type that accepts AppRulesConditionArgs and AppRulesConditionOutput values.
// You can construct a concrete instance of `AppRulesConditionInput` via:
//
//	AppRulesConditionArgs{...}
type AppRulesConditionInput interface {
	pulumi.Input

	ToAppRulesConditionOutput() AppRulesConditionOutput
	ToAppRulesConditionOutputWithContext(context.Context) AppRulesConditionOutput
}

type AppRulesConditionArgs struct {
	Operator pulumi.StringInput `pulumi:"operator"`
	Source   pulumi.StringInput `pulumi:"source"`
	Value    pulumi.StringInput `pulumi:"value"`
}

func (AppRulesConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppRulesCondition)(nil)).Elem()
}

func (i AppRulesConditionArgs) ToAppRulesConditionOutput() AppRulesConditionOutput {
	return i.ToAppRulesConditionOutputWithContext(context.Background())
}

func (i AppRulesConditionArgs) ToAppRulesConditionOutputWithContext(ctx context.Context) AppRulesConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppRulesConditionOutput)
}

// AppRulesConditionArrayInput is an input type that accepts AppRulesConditionArray and AppRulesConditionArrayOutput values.
// You can construct a concrete instance of `AppRulesConditionArrayInput` via:
//
//	AppRulesConditionArray{ AppRulesConditionArgs{...} }
type AppRulesConditionArrayInput interface {
	pulumi.Input

	ToAppRulesConditionArrayOutput() AppRulesConditionArrayOutput
	ToAppRulesConditionArrayOutputWithContext(context.Context) AppRulesConditionArrayOutput
}

type AppRulesConditionArray []AppRulesConditionInput

func (AppRulesConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppRulesCondition)(nil)).Elem()
}

func (i AppRulesConditionArray) ToAppRulesConditionArrayOutput() AppRulesConditionArrayOutput {
	return i.ToAppRulesConditionArrayOutputWithContext(context.Background())
}

func (i AppRulesConditionArray) ToAppRulesConditionArrayOutputWithContext(ctx context.Context) AppRulesConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppRulesConditionArrayOutput)
}

type AppRulesConditionOutput struct{ *pulumi.OutputState }

func (AppRulesConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppRulesCondition)(nil)).Elem()
}

func (o AppRulesConditionOutput) ToAppRulesConditionOutput() AppRulesConditionOutput {
	return o
}

func (o AppRulesConditionOutput) ToAppRulesConditionOutputWithContext(ctx context.Context) AppRulesConditionOutput {
	return o
}

func (o AppRulesConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v AppRulesCondition) string { return v.Operator }).(pulumi.StringOutput)
}

func (o AppRulesConditionOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v AppRulesCondition) string { return v.Source }).(pulumi.StringOutput)
}

func (o AppRulesConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AppRulesCondition) string { return v.Value }).(pulumi.StringOutput)
}

type AppRulesConditionArrayOutput struct{ *pulumi.OutputState }

func (AppRulesConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppRulesCondition)(nil)).Elem()
}

func (o AppRulesConditionArrayOutput) ToAppRulesConditionArrayOutput() AppRulesConditionArrayOutput {
	return o
}

func (o AppRulesConditionArrayOutput) ToAppRulesConditionArrayOutputWithContext(ctx context.Context) AppRulesConditionArrayOutput {
	return o
}

func (o AppRulesConditionArrayOutput) Index(i pulumi.IntInput) AppRulesConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppRulesCondition {
		return vs[0].([]AppRulesCondition)[vs[1].(int)]
	}).(AppRulesConditionOutput)
}

type AuthServersConfiguration struct {
	AccessTokenExpirationMinutes  *int     `pulumi:"accessTokenExpirationMinutes"`
	Audiences                     []string `pulumi:"audiences"`
	RefreshTokenExpirationMinutes *int     `pulumi:"refreshTokenExpirationMinutes"`
	ResourceIdentifier            string   `pulumi:"resourceIdentifier"`
}

// AuthServersConfigurationInput is an input type that accepts AuthServersConfigurationArgs and AuthServersConfigurationOutput values.
// You can construct a concrete instance of `AuthServersConfigurationInput` via:
//
//	AuthServersConfigurationArgs{...}
type AuthServersConfigurationInput interface {
	pulumi.Input

	ToAuthServersConfigurationOutput() AuthServersConfigurationOutput
	ToAuthServersConfigurationOutputWithContext(context.Context) AuthServersConfigurationOutput
}

type AuthServersConfigurationArgs struct {
	AccessTokenExpirationMinutes  pulumi.IntPtrInput      `pulumi:"accessTokenExpirationMinutes"`
	Audiences                     pulumi.StringArrayInput `pulumi:"audiences"`
	RefreshTokenExpirationMinutes pulumi.IntPtrInput      `pulumi:"refreshTokenExpirationMinutes"`
	ResourceIdentifier            pulumi.StringInput      `pulumi:"resourceIdentifier"`
}

func (AuthServersConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthServersConfiguration)(nil)).Elem()
}

func (i AuthServersConfigurationArgs) ToAuthServersConfigurationOutput() AuthServersConfigurationOutput {
	return i.ToAuthServersConfigurationOutputWithContext(context.Background())
}

func (i AuthServersConfigurationArgs) ToAuthServersConfigurationOutputWithContext(ctx context.Context) AuthServersConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthServersConfigurationOutput)
}

func (i AuthServersConfigurationArgs) ToAuthServersConfigurationPtrOutput() AuthServersConfigurationPtrOutput {
	return i.ToAuthServersConfigurationPtrOutputWithContext(context.Background())
}

func (i AuthServersConfigurationArgs) ToAuthServersConfigurationPtrOutputWithContext(ctx context.Context) AuthServersConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthServersConfigurationOutput).ToAuthServersConfigurationPtrOutputWithContext(ctx)
}

// AuthServersConfigurationPtrInput is an input type that accepts AuthServersConfigurationArgs, AuthServersConfigurationPtr and AuthServersConfigurationPtrOutput values.
// You can construct a concrete instance of `AuthServersConfigurationPtrInput` via:
//
//	        AuthServersConfigurationArgs{...}
//
//	or:
//
//	        nil
type AuthServersConfigurationPtrInput interface {
	pulumi.Input

	ToAuthServersConfigurationPtrOutput() AuthServersConfigurationPtrOutput
	ToAuthServersConfigurationPtrOutputWithContext(context.Context) AuthServersConfigurationPtrOutput
}

type authServersConfigurationPtrType AuthServersConfigurationArgs

func AuthServersConfigurationPtr(v *AuthServersConfigurationArgs) AuthServersConfigurationPtrInput {
	return (*authServersConfigurationPtrType)(v)
}

func (*authServersConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthServersConfiguration)(nil)).Elem()
}

func (i *authServersConfigurationPtrType) ToAuthServersConfigurationPtrOutput() AuthServersConfigurationPtrOutput {
	return i.ToAuthServersConfigurationPtrOutputWithContext(context.Background())
}

func (i *authServersConfigurationPtrType) ToAuthServersConfigurationPtrOutputWithContext(ctx context.Context) AuthServersConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthServersConfigurationPtrOutput)
}

type AuthServersConfigurationOutput struct{ *pulumi.OutputState }

func (AuthServersConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthServersConfiguration)(nil)).Elem()
}

func (o AuthServersConfigurationOutput) ToAuthServersConfigurationOutput() AuthServersConfigurationOutput {
	return o
}

func (o AuthServersConfigurationOutput) ToAuthServersConfigurationOutputWithContext(ctx context.Context) AuthServersConfigurationOutput {
	return o
}

func (o AuthServersConfigurationOutput) ToAuthServersConfigurationPtrOutput() AuthServersConfigurationPtrOutput {
	return o.ToAuthServersConfigurationPtrOutputWithContext(context.Background())
}

func (o AuthServersConfigurationOutput) ToAuthServersConfigurationPtrOutputWithContext(ctx context.Context) AuthServersConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthServersConfiguration) *AuthServersConfiguration {
		return &v
	}).(AuthServersConfigurationPtrOutput)
}

func (o AuthServersConfigurationOutput) AccessTokenExpirationMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AuthServersConfiguration) *int { return v.AccessTokenExpirationMinutes }).(pulumi.IntPtrOutput)
}

func (o AuthServersConfigurationOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthServersConfiguration) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

func (o AuthServersConfigurationOutput) RefreshTokenExpirationMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AuthServersConfiguration) *int { return v.RefreshTokenExpirationMinutes }).(pulumi.IntPtrOutput)
}

func (o AuthServersConfigurationOutput) ResourceIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v AuthServersConfiguration) string { return v.ResourceIdentifier }).(pulumi.StringOutput)
}

type AuthServersConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AuthServersConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthServersConfiguration)(nil)).Elem()
}

func (o AuthServersConfigurationPtrOutput) ToAuthServersConfigurationPtrOutput() AuthServersConfigurationPtrOutput {
	return o
}

func (o AuthServersConfigurationPtrOutput) ToAuthServersConfigurationPtrOutputWithContext(ctx context.Context) AuthServersConfigurationPtrOutput {
	return o
}

func (o AuthServersConfigurationPtrOutput) Elem() AuthServersConfigurationOutput {
	return o.ApplyT(func(v *AuthServersConfiguration) AuthServersConfiguration {
		if v != nil {
			return *v
		}
		var ret AuthServersConfiguration
		return ret
	}).(AuthServersConfigurationOutput)
}

func (o AuthServersConfigurationPtrOutput) AccessTokenExpirationMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AuthServersConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.AccessTokenExpirationMinutes
	}).(pulumi.IntPtrOutput)
}

func (o AuthServersConfigurationPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthServersConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

func (o AuthServersConfigurationPtrOutput) RefreshTokenExpirationMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AuthServersConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.RefreshTokenExpirationMinutes
	}).(pulumi.IntPtrOutput)
}

func (o AuthServersConfigurationPtrOutput) ResourceIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthServersConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceIdentifier
	}).(pulumi.StringPtrOutput)
}

type OidcAppsParameter struct {
	AttributesTransformations *string `pulumi:"attributesTransformations"`
	DefaultValues             *string `pulumi:"defaultValues"`
	IncludeInSamlAssertion    *bool   `pulumi:"includeInSamlAssertion"`
	Label                     *string `pulumi:"label"`
	ParamId                   *int    `pulumi:"paramId"`
	ParamKeyName              string  `pulumi:"paramKeyName"`
	ProvisionedEntitlements   *bool   `pulumi:"provisionedEntitlements"`
	SafeEntitlementsEnabled   *bool   `pulumi:"safeEntitlementsEnabled"`
	SkipIfBlank               *bool   `pulumi:"skipIfBlank"`
	UserAttributeMacros       *string `pulumi:"userAttributeMacros"`
	UserAttributeMappings     *string `pulumi:"userAttributeMappings"`
	Values                    *string `pulumi:"values"`
}

// OidcAppsParameterInput is an input type that accepts OidcAppsParameterArgs and OidcAppsParameterOutput values.
// You can construct a concrete instance of `OidcAppsParameterInput` via:
//
//	OidcAppsParameterArgs{...}
type OidcAppsParameterInput interface {
	pulumi.Input

	ToOidcAppsParameterOutput() OidcAppsParameterOutput
	ToOidcAppsParameterOutputWithContext(context.Context) OidcAppsParameterOutput
}

type OidcAppsParameterArgs struct {
	AttributesTransformations pulumi.StringPtrInput `pulumi:"attributesTransformations"`
	DefaultValues             pulumi.StringPtrInput `pulumi:"defaultValues"`
	IncludeInSamlAssertion    pulumi.BoolPtrInput   `pulumi:"includeInSamlAssertion"`
	Label                     pulumi.StringPtrInput `pulumi:"label"`
	ParamId                   pulumi.IntPtrInput    `pulumi:"paramId"`
	ParamKeyName              pulumi.StringInput    `pulumi:"paramKeyName"`
	ProvisionedEntitlements   pulumi.BoolPtrInput   `pulumi:"provisionedEntitlements"`
	SafeEntitlementsEnabled   pulumi.BoolPtrInput   `pulumi:"safeEntitlementsEnabled"`
	SkipIfBlank               pulumi.BoolPtrInput   `pulumi:"skipIfBlank"`
	UserAttributeMacros       pulumi.StringPtrInput `pulumi:"userAttributeMacros"`
	UserAttributeMappings     pulumi.StringPtrInput `pulumi:"userAttributeMappings"`
	Values                    pulumi.StringPtrInput `pulumi:"values"`
}

func (OidcAppsParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OidcAppsParameter)(nil)).Elem()
}

func (i OidcAppsParameterArgs) ToOidcAppsParameterOutput() OidcAppsParameterOutput {
	return i.ToOidcAppsParameterOutputWithContext(context.Background())
}

func (i OidcAppsParameterArgs) ToOidcAppsParameterOutputWithContext(ctx context.Context) OidcAppsParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OidcAppsParameterOutput)
}

// OidcAppsParameterArrayInput is an input type that accepts OidcAppsParameterArray and OidcAppsParameterArrayOutput values.
// You can construct a concrete instance of `OidcAppsParameterArrayInput` via:
//
//	OidcAppsParameterArray{ OidcAppsParameterArgs{...} }
type OidcAppsParameterArrayInput interface {
	pulumi.Input

	ToOidcAppsParameterArrayOutput() OidcAppsParameterArrayOutput
	ToOidcAppsParameterArrayOutputWithContext(context.Context) OidcAppsParameterArrayOutput
}

type OidcAppsParameterArray []OidcAppsParameterInput

func (OidcAppsParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OidcAppsParameter)(nil)).Elem()
}

func (i OidcAppsParameterArray) ToOidcAppsParameterArrayOutput() OidcAppsParameterArrayOutput {
	return i.ToOidcAppsParameterArrayOutputWithContext(context.Background())
}

func (i OidcAppsParameterArray) ToOidcAppsParameterArrayOutputWithContext(ctx context.Context) OidcAppsParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OidcAppsParameterArrayOutput)
}

type OidcAppsParameterOutput struct{ *pulumi.OutputState }

func (OidcAppsParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OidcAppsParameter)(nil)).Elem()
}

func (o OidcAppsParameterOutput) ToOidcAppsParameterOutput() OidcAppsParameterOutput {
	return o
}

func (o OidcAppsParameterOutput) ToOidcAppsParameterOutputWithContext(ctx context.Context) OidcAppsParameterOutput {
	return o
}

func (o OidcAppsParameterOutput) AttributesTransformations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OidcAppsParameter) *string { return v.AttributesTransformations }).(pulumi.StringPtrOutput)
}

func (o OidcAppsParameterOutput) DefaultValues() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OidcAppsParameter) *string { return v.DefaultValues }).(pulumi.StringPtrOutput)
}

func (o OidcAppsParameterOutput) IncludeInSamlAssertion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OidcAppsParameter) *bool { return v.IncludeInSamlAssertion }).(pulumi.BoolPtrOutput)
}

func (o OidcAppsParameterOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OidcAppsParameter) *string { return v.Label }).(pulumi.StringPtrOutput)
}

func (o OidcAppsParameterOutput) ParamId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OidcAppsParameter) *int { return v.ParamId }).(pulumi.IntPtrOutput)
}

func (o OidcAppsParameterOutput) ParamKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v OidcAppsParameter) string { return v.ParamKeyName }).(pulumi.StringOutput)
}

func (o OidcAppsParameterOutput) ProvisionedEntitlements() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OidcAppsParameter) *bool { return v.ProvisionedEntitlements }).(pulumi.BoolPtrOutput)
}

func (o OidcAppsParameterOutput) SafeEntitlementsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OidcAppsParameter) *bool { return v.SafeEntitlementsEnabled }).(pulumi.BoolPtrOutput)
}

func (o OidcAppsParameterOutput) SkipIfBlank() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OidcAppsParameter) *bool { return v.SkipIfBlank }).(pulumi.BoolPtrOutput)
}

func (o OidcAppsParameterOutput) UserAttributeMacros() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OidcAppsParameter) *string { return v.UserAttributeMacros }).(pulumi.StringPtrOutput)
}

func (o OidcAppsParameterOutput) UserAttributeMappings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OidcAppsParameter) *string { return v.UserAttributeMappings }).(pulumi.StringPtrOutput)
}

func (o OidcAppsParameterOutput) Values() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OidcAppsParameter) *string { return v.Values }).(pulumi.StringPtrOutput)
}

type OidcAppsParameterArrayOutput struct{ *pulumi.OutputState }

func (OidcAppsParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OidcAppsParameter)(nil)).Elem()
}

func (o OidcAppsParameterArrayOutput) ToOidcAppsParameterArrayOutput() OidcAppsParameterArrayOutput {
	return o
}

func (o OidcAppsParameterArrayOutput) ToOidcAppsParameterArrayOutputWithContext(ctx context.Context) OidcAppsParameterArrayOutput {
	return o
}

func (o OidcAppsParameterArrayOutput) Index(i pulumi.IntInput) OidcAppsParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OidcAppsParameter {
		return vs[0].([]OidcAppsParameter)[vs[1].(int)]
	}).(OidcAppsParameterOutput)
}

type PrivilegesPrivilege struct {
	Statements []PrivilegesPrivilegeStatement `pulumi:"statements"`
	Version    *string                        `pulumi:"version"`
}

// PrivilegesPrivilegeInput is an input type that accepts PrivilegesPrivilegeArgs and PrivilegesPrivilegeOutput values.
// You can construct a concrete instance of `PrivilegesPrivilegeInput` via:
//
//	PrivilegesPrivilegeArgs{...}
type PrivilegesPrivilegeInput interface {
	pulumi.Input

	ToPrivilegesPrivilegeOutput() PrivilegesPrivilegeOutput
	ToPrivilegesPrivilegeOutputWithContext(context.Context) PrivilegesPrivilegeOutput
}

type PrivilegesPrivilegeArgs struct {
	Statements PrivilegesPrivilegeStatementArrayInput `pulumi:"statements"`
	Version    pulumi.StringPtrInput                  `pulumi:"version"`
}

func (PrivilegesPrivilegeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivilegesPrivilege)(nil)).Elem()
}

func (i PrivilegesPrivilegeArgs) ToPrivilegesPrivilegeOutput() PrivilegesPrivilegeOutput {
	return i.ToPrivilegesPrivilegeOutputWithContext(context.Background())
}

func (i PrivilegesPrivilegeArgs) ToPrivilegesPrivilegeOutputWithContext(ctx context.Context) PrivilegesPrivilegeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivilegesPrivilegeOutput)
}

func (i PrivilegesPrivilegeArgs) ToPrivilegesPrivilegePtrOutput() PrivilegesPrivilegePtrOutput {
	return i.ToPrivilegesPrivilegePtrOutputWithContext(context.Background())
}

func (i PrivilegesPrivilegeArgs) ToPrivilegesPrivilegePtrOutputWithContext(ctx context.Context) PrivilegesPrivilegePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivilegesPrivilegeOutput).ToPrivilegesPrivilegePtrOutputWithContext(ctx)
}

// PrivilegesPrivilegePtrInput is an input type that accepts PrivilegesPrivilegeArgs, PrivilegesPrivilegePtr and PrivilegesPrivilegePtrOutput values.
// You can construct a concrete instance of `PrivilegesPrivilegePtrInput` via:
//
//	        PrivilegesPrivilegeArgs{...}
//
//	or:
//
//	        nil
type PrivilegesPrivilegePtrInput interface {
	pulumi.Input

	ToPrivilegesPrivilegePtrOutput() PrivilegesPrivilegePtrOutput
	ToPrivilegesPrivilegePtrOutputWithContext(context.Context) PrivilegesPrivilegePtrOutput
}

type privilegesPrivilegePtrType PrivilegesPrivilegeArgs

func PrivilegesPrivilegePtr(v *PrivilegesPrivilegeArgs) PrivilegesPrivilegePtrInput {
	return (*privilegesPrivilegePtrType)(v)
}

func (*privilegesPrivilegePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivilegesPrivilege)(nil)).Elem()
}

func (i *privilegesPrivilegePtrType) ToPrivilegesPrivilegePtrOutput() PrivilegesPrivilegePtrOutput {
	return i.ToPrivilegesPrivilegePtrOutputWithContext(context.Background())
}

func (i *privilegesPrivilegePtrType) ToPrivilegesPrivilegePtrOutputWithContext(ctx context.Context) PrivilegesPrivilegePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivilegesPrivilegePtrOutput)
}

type PrivilegesPrivilegeOutput struct{ *pulumi.OutputState }

func (PrivilegesPrivilegeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivilegesPrivilege)(nil)).Elem()
}

func (o PrivilegesPrivilegeOutput) ToPrivilegesPrivilegeOutput() PrivilegesPrivilegeOutput {
	return o
}

func (o PrivilegesPrivilegeOutput) ToPrivilegesPrivilegeOutputWithContext(ctx context.Context) PrivilegesPrivilegeOutput {
	return o
}

func (o PrivilegesPrivilegeOutput) ToPrivilegesPrivilegePtrOutput() PrivilegesPrivilegePtrOutput {
	return o.ToPrivilegesPrivilegePtrOutputWithContext(context.Background())
}

func (o PrivilegesPrivilegeOutput) ToPrivilegesPrivilegePtrOutputWithContext(ctx context.Context) PrivilegesPrivilegePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivilegesPrivilege) *PrivilegesPrivilege {
		return &v
	}).(PrivilegesPrivilegePtrOutput)
}

func (o PrivilegesPrivilegeOutput) Statements() PrivilegesPrivilegeStatementArrayOutput {
	return o.ApplyT(func(v PrivilegesPrivilege) []PrivilegesPrivilegeStatement { return v.Statements }).(PrivilegesPrivilegeStatementArrayOutput)
}

func (o PrivilegesPrivilegeOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivilegesPrivilege) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type PrivilegesPrivilegePtrOutput struct{ *pulumi.OutputState }

func (PrivilegesPrivilegePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivilegesPrivilege)(nil)).Elem()
}

func (o PrivilegesPrivilegePtrOutput) ToPrivilegesPrivilegePtrOutput() PrivilegesPrivilegePtrOutput {
	return o
}

func (o PrivilegesPrivilegePtrOutput) ToPrivilegesPrivilegePtrOutputWithContext(ctx context.Context) PrivilegesPrivilegePtrOutput {
	return o
}

func (o PrivilegesPrivilegePtrOutput) Elem() PrivilegesPrivilegeOutput {
	return o.ApplyT(func(v *PrivilegesPrivilege) PrivilegesPrivilege {
		if v != nil {
			return *v
		}
		var ret PrivilegesPrivilege
		return ret
	}).(PrivilegesPrivilegeOutput)
}

func (o PrivilegesPrivilegePtrOutput) Statements() PrivilegesPrivilegeStatementArrayOutput {
	return o.ApplyT(func(v *PrivilegesPrivilege) []PrivilegesPrivilegeStatement {
		if v == nil {
			return nil
		}
		return v.Statements
	}).(PrivilegesPrivilegeStatementArrayOutput)
}

func (o PrivilegesPrivilegePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivilegesPrivilege) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type PrivilegesPrivilegeStatement struct {
	Actions []string `pulumi:"actions"`
	Effect  string   `pulumi:"effect"`
	Scopes  []string `pulumi:"scopes"`
}

// PrivilegesPrivilegeStatementInput is an input type that accepts PrivilegesPrivilegeStatementArgs and PrivilegesPrivilegeStatementOutput values.
// You can construct a concrete instance of `PrivilegesPrivilegeStatementInput` via:
//
//	PrivilegesPrivilegeStatementArgs{...}
type PrivilegesPrivilegeStatementInput interface {
	pulumi.Input

	ToPrivilegesPrivilegeStatementOutput() PrivilegesPrivilegeStatementOutput
	ToPrivilegesPrivilegeStatementOutputWithContext(context.Context) PrivilegesPrivilegeStatementOutput
}

type PrivilegesPrivilegeStatementArgs struct {
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	Effect  pulumi.StringInput      `pulumi:"effect"`
	Scopes  pulumi.StringArrayInput `pulumi:"scopes"`
}

func (PrivilegesPrivilegeStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivilegesPrivilegeStatement)(nil)).Elem()
}

func (i PrivilegesPrivilegeStatementArgs) ToPrivilegesPrivilegeStatementOutput() PrivilegesPrivilegeStatementOutput {
	return i.ToPrivilegesPrivilegeStatementOutputWithContext(context.Background())
}

func (i PrivilegesPrivilegeStatementArgs) ToPrivilegesPrivilegeStatementOutputWithContext(ctx context.Context) PrivilegesPrivilegeStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivilegesPrivilegeStatementOutput)
}

// PrivilegesPrivilegeStatementArrayInput is an input type that accepts PrivilegesPrivilegeStatementArray and PrivilegesPrivilegeStatementArrayOutput values.
// You can construct a concrete instance of `PrivilegesPrivilegeStatementArrayInput` via:
//
//	PrivilegesPrivilegeStatementArray{ PrivilegesPrivilegeStatementArgs{...} }
type PrivilegesPrivilegeStatementArrayInput interface {
	pulumi.Input

	ToPrivilegesPrivilegeStatementArrayOutput() PrivilegesPrivilegeStatementArrayOutput
	ToPrivilegesPrivilegeStatementArrayOutputWithContext(context.Context) PrivilegesPrivilegeStatementArrayOutput
}

type PrivilegesPrivilegeStatementArray []PrivilegesPrivilegeStatementInput

func (PrivilegesPrivilegeStatementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivilegesPrivilegeStatement)(nil)).Elem()
}

func (i PrivilegesPrivilegeStatementArray) ToPrivilegesPrivilegeStatementArrayOutput() PrivilegesPrivilegeStatementArrayOutput {
	return i.ToPrivilegesPrivilegeStatementArrayOutputWithContext(context.Background())
}

func (i PrivilegesPrivilegeStatementArray) ToPrivilegesPrivilegeStatementArrayOutputWithContext(ctx context.Context) PrivilegesPrivilegeStatementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivilegesPrivilegeStatementArrayOutput)
}

type PrivilegesPrivilegeStatementOutput struct{ *pulumi.OutputState }

func (PrivilegesPrivilegeStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivilegesPrivilegeStatement)(nil)).Elem()
}

func (o PrivilegesPrivilegeStatementOutput) ToPrivilegesPrivilegeStatementOutput() PrivilegesPrivilegeStatementOutput {
	return o
}

func (o PrivilegesPrivilegeStatementOutput) ToPrivilegesPrivilegeStatementOutputWithContext(ctx context.Context) PrivilegesPrivilegeStatementOutput {
	return o
}

func (o PrivilegesPrivilegeStatementOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivilegesPrivilegeStatement) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

func (o PrivilegesPrivilegeStatementOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v PrivilegesPrivilegeStatement) string { return v.Effect }).(pulumi.StringOutput)
}

func (o PrivilegesPrivilegeStatementOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivilegesPrivilegeStatement) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

type PrivilegesPrivilegeStatementArrayOutput struct{ *pulumi.OutputState }

func (PrivilegesPrivilegeStatementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivilegesPrivilegeStatement)(nil)).Elem()
}

func (o PrivilegesPrivilegeStatementArrayOutput) ToPrivilegesPrivilegeStatementArrayOutput() PrivilegesPrivilegeStatementArrayOutput {
	return o
}

func (o PrivilegesPrivilegeStatementArrayOutput) ToPrivilegesPrivilegeStatementArrayOutputWithContext(ctx context.Context) PrivilegesPrivilegeStatementArrayOutput {
	return o
}

func (o PrivilegesPrivilegeStatementArrayOutput) Index(i pulumi.IntInput) PrivilegesPrivilegeStatementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivilegesPrivilegeStatement {
		return vs[0].([]PrivilegesPrivilegeStatement)[vs[1].(int)]
	}).(PrivilegesPrivilegeStatementOutput)
}

type SamlAppsParameter struct {
	AttributesTransformations *string `pulumi:"attributesTransformations"`
	DefaultValues             *string `pulumi:"defaultValues"`
	IncludeInSamlAssertion    *bool   `pulumi:"includeInSamlAssertion"`
	Label                     *string `pulumi:"label"`
	ParamId                   *int    `pulumi:"paramId"`
	ParamKeyName              string  `pulumi:"paramKeyName"`
	ProvisionedEntitlements   *bool   `pulumi:"provisionedEntitlements"`
	SafeEntitlementsEnabled   *bool   `pulumi:"safeEntitlementsEnabled"`
	SkipIfBlank               *bool   `pulumi:"skipIfBlank"`
	UserAttributeMacros       *string `pulumi:"userAttributeMacros"`
	UserAttributeMappings     *string `pulumi:"userAttributeMappings"`
	Values                    *string `pulumi:"values"`
}

// SamlAppsParameterInput is an input type that accepts SamlAppsParameterArgs and SamlAppsParameterOutput values.
// You can construct a concrete instance of `SamlAppsParameterInput` via:
//
//	SamlAppsParameterArgs{...}
type SamlAppsParameterInput interface {
	pulumi.Input

	ToSamlAppsParameterOutput() SamlAppsParameterOutput
	ToSamlAppsParameterOutputWithContext(context.Context) SamlAppsParameterOutput
}

type SamlAppsParameterArgs struct {
	AttributesTransformations pulumi.StringPtrInput `pulumi:"attributesTransformations"`
	DefaultValues             pulumi.StringPtrInput `pulumi:"defaultValues"`
	IncludeInSamlAssertion    pulumi.BoolPtrInput   `pulumi:"includeInSamlAssertion"`
	Label                     pulumi.StringPtrInput `pulumi:"label"`
	ParamId                   pulumi.IntPtrInput    `pulumi:"paramId"`
	ParamKeyName              pulumi.StringInput    `pulumi:"paramKeyName"`
	ProvisionedEntitlements   pulumi.BoolPtrInput   `pulumi:"provisionedEntitlements"`
	SafeEntitlementsEnabled   pulumi.BoolPtrInput   `pulumi:"safeEntitlementsEnabled"`
	SkipIfBlank               pulumi.BoolPtrInput   `pulumi:"skipIfBlank"`
	UserAttributeMacros       pulumi.StringPtrInput `pulumi:"userAttributeMacros"`
	UserAttributeMappings     pulumi.StringPtrInput `pulumi:"userAttributeMappings"`
	Values                    pulumi.StringPtrInput `pulumi:"values"`
}

func (SamlAppsParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlAppsParameter)(nil)).Elem()
}

func (i SamlAppsParameterArgs) ToSamlAppsParameterOutput() SamlAppsParameterOutput {
	return i.ToSamlAppsParameterOutputWithContext(context.Background())
}

func (i SamlAppsParameterArgs) ToSamlAppsParameterOutputWithContext(ctx context.Context) SamlAppsParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlAppsParameterOutput)
}

// SamlAppsParameterArrayInput is an input type that accepts SamlAppsParameterArray and SamlAppsParameterArrayOutput values.
// You can construct a concrete instance of `SamlAppsParameterArrayInput` via:
//
//	SamlAppsParameterArray{ SamlAppsParameterArgs{...} }
type SamlAppsParameterArrayInput interface {
	pulumi.Input

	ToSamlAppsParameterArrayOutput() SamlAppsParameterArrayOutput
	ToSamlAppsParameterArrayOutputWithContext(context.Context) SamlAppsParameterArrayOutput
}

type SamlAppsParameterArray []SamlAppsParameterInput

func (SamlAppsParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SamlAppsParameter)(nil)).Elem()
}

func (i SamlAppsParameterArray) ToSamlAppsParameterArrayOutput() SamlAppsParameterArrayOutput {
	return i.ToSamlAppsParameterArrayOutputWithContext(context.Background())
}

func (i SamlAppsParameterArray) ToSamlAppsParameterArrayOutputWithContext(ctx context.Context) SamlAppsParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlAppsParameterArrayOutput)
}

type SamlAppsParameterOutput struct{ *pulumi.OutputState }

func (SamlAppsParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlAppsParameter)(nil)).Elem()
}

func (o SamlAppsParameterOutput) ToSamlAppsParameterOutput() SamlAppsParameterOutput {
	return o
}

func (o SamlAppsParameterOutput) ToSamlAppsParameterOutputWithContext(ctx context.Context) SamlAppsParameterOutput {
	return o
}

func (o SamlAppsParameterOutput) AttributesTransformations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlAppsParameter) *string { return v.AttributesTransformations }).(pulumi.StringPtrOutput)
}

func (o SamlAppsParameterOutput) DefaultValues() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlAppsParameter) *string { return v.DefaultValues }).(pulumi.StringPtrOutput)
}

func (o SamlAppsParameterOutput) IncludeInSamlAssertion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SamlAppsParameter) *bool { return v.IncludeInSamlAssertion }).(pulumi.BoolPtrOutput)
}

func (o SamlAppsParameterOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlAppsParameter) *string { return v.Label }).(pulumi.StringPtrOutput)
}

func (o SamlAppsParameterOutput) ParamId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SamlAppsParameter) *int { return v.ParamId }).(pulumi.IntPtrOutput)
}

func (o SamlAppsParameterOutput) ParamKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v SamlAppsParameter) string { return v.ParamKeyName }).(pulumi.StringOutput)
}

func (o SamlAppsParameterOutput) ProvisionedEntitlements() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SamlAppsParameter) *bool { return v.ProvisionedEntitlements }).(pulumi.BoolPtrOutput)
}

func (o SamlAppsParameterOutput) SafeEntitlementsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SamlAppsParameter) *bool { return v.SafeEntitlementsEnabled }).(pulumi.BoolPtrOutput)
}

func (o SamlAppsParameterOutput) SkipIfBlank() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SamlAppsParameter) *bool { return v.SkipIfBlank }).(pulumi.BoolPtrOutput)
}

func (o SamlAppsParameterOutput) UserAttributeMacros() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlAppsParameter) *string { return v.UserAttributeMacros }).(pulumi.StringPtrOutput)
}

func (o SamlAppsParameterOutput) UserAttributeMappings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlAppsParameter) *string { return v.UserAttributeMappings }).(pulumi.StringPtrOutput)
}

func (o SamlAppsParameterOutput) Values() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlAppsParameter) *string { return v.Values }).(pulumi.StringPtrOutput)
}

type SamlAppsParameterArrayOutput struct{ *pulumi.OutputState }

func (SamlAppsParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SamlAppsParameter)(nil)).Elem()
}

func (o SamlAppsParameterArrayOutput) ToSamlAppsParameterArrayOutput() SamlAppsParameterArrayOutput {
	return o
}

func (o SamlAppsParameterArrayOutput) ToSamlAppsParameterArrayOutputWithContext(ctx context.Context) SamlAppsParameterArrayOutput {
	return o
}

func (o SamlAppsParameterArrayOutput) Index(i pulumi.IntInput) SamlAppsParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SamlAppsParameter {
		return vs[0].([]SamlAppsParameter)[vs[1].(int)]
	}).(SamlAppsParameterOutput)
}

type SmarthooksCondition struct {
	Operator string `pulumi:"operator"`
	Source   string `pulumi:"source"`
	Value    string `pulumi:"value"`
}

// SmarthooksConditionInput is an input type that accepts SmarthooksConditionArgs and SmarthooksConditionOutput values.
// You can construct a concrete instance of `SmarthooksConditionInput` via:
//
//	SmarthooksConditionArgs{...}
type SmarthooksConditionInput interface {
	pulumi.Input

	ToSmarthooksConditionOutput() SmarthooksConditionOutput
	ToSmarthooksConditionOutputWithContext(context.Context) SmarthooksConditionOutput
}

type SmarthooksConditionArgs struct {
	Operator pulumi.StringInput `pulumi:"operator"`
	Source   pulumi.StringInput `pulumi:"source"`
	Value    pulumi.StringInput `pulumi:"value"`
}

func (SmarthooksConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SmarthooksCondition)(nil)).Elem()
}

func (i SmarthooksConditionArgs) ToSmarthooksConditionOutput() SmarthooksConditionOutput {
	return i.ToSmarthooksConditionOutputWithContext(context.Background())
}

func (i SmarthooksConditionArgs) ToSmarthooksConditionOutputWithContext(ctx context.Context) SmarthooksConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmarthooksConditionOutput)
}

// SmarthooksConditionArrayInput is an input type that accepts SmarthooksConditionArray and SmarthooksConditionArrayOutput values.
// You can construct a concrete instance of `SmarthooksConditionArrayInput` via:
//
//	SmarthooksConditionArray{ SmarthooksConditionArgs{...} }
type SmarthooksConditionArrayInput interface {
	pulumi.Input

	ToSmarthooksConditionArrayOutput() SmarthooksConditionArrayOutput
	ToSmarthooksConditionArrayOutputWithContext(context.Context) SmarthooksConditionArrayOutput
}

type SmarthooksConditionArray []SmarthooksConditionInput

func (SmarthooksConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SmarthooksCondition)(nil)).Elem()
}

func (i SmarthooksConditionArray) ToSmarthooksConditionArrayOutput() SmarthooksConditionArrayOutput {
	return i.ToSmarthooksConditionArrayOutputWithContext(context.Background())
}

func (i SmarthooksConditionArray) ToSmarthooksConditionArrayOutputWithContext(ctx context.Context) SmarthooksConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmarthooksConditionArrayOutput)
}

type SmarthooksConditionOutput struct{ *pulumi.OutputState }

func (SmarthooksConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmarthooksCondition)(nil)).Elem()
}

func (o SmarthooksConditionOutput) ToSmarthooksConditionOutput() SmarthooksConditionOutput {
	return o
}

func (o SmarthooksConditionOutput) ToSmarthooksConditionOutputWithContext(ctx context.Context) SmarthooksConditionOutput {
	return o
}

func (o SmarthooksConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v SmarthooksCondition) string { return v.Operator }).(pulumi.StringOutput)
}

func (o SmarthooksConditionOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v SmarthooksCondition) string { return v.Source }).(pulumi.StringOutput)
}

func (o SmarthooksConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SmarthooksCondition) string { return v.Value }).(pulumi.StringOutput)
}

type SmarthooksConditionArrayOutput struct{ *pulumi.OutputState }

func (SmarthooksConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SmarthooksCondition)(nil)).Elem()
}

func (o SmarthooksConditionArrayOutput) ToSmarthooksConditionArrayOutput() SmarthooksConditionArrayOutput {
	return o
}

func (o SmarthooksConditionArrayOutput) ToSmarthooksConditionArrayOutputWithContext(ctx context.Context) SmarthooksConditionArrayOutput {
	return o
}

func (o SmarthooksConditionArrayOutput) Index(i pulumi.IntInput) SmarthooksConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SmarthooksCondition {
		return vs[0].([]SmarthooksCondition)[vs[1].(int)]
	}).(SmarthooksConditionOutput)
}

type SmarthooksOption struct {
	LocationEnabled      *bool `pulumi:"locationEnabled"`
	MfaDeviceInfoEnabled *bool `pulumi:"mfaDeviceInfoEnabled"`
	RiskEnabled          *bool `pulumi:"riskEnabled"`
}

// SmarthooksOptionInput is an input type that accepts SmarthooksOptionArgs and SmarthooksOptionOutput values.
// You can construct a concrete instance of `SmarthooksOptionInput` via:
//
//	SmarthooksOptionArgs{...}
type SmarthooksOptionInput interface {
	pulumi.Input

	ToSmarthooksOptionOutput() SmarthooksOptionOutput
	ToSmarthooksOptionOutputWithContext(context.Context) SmarthooksOptionOutput
}

type SmarthooksOptionArgs struct {
	LocationEnabled      pulumi.BoolPtrInput `pulumi:"locationEnabled"`
	MfaDeviceInfoEnabled pulumi.BoolPtrInput `pulumi:"mfaDeviceInfoEnabled"`
	RiskEnabled          pulumi.BoolPtrInput `pulumi:"riskEnabled"`
}

func (SmarthooksOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SmarthooksOption)(nil)).Elem()
}

func (i SmarthooksOptionArgs) ToSmarthooksOptionOutput() SmarthooksOptionOutput {
	return i.ToSmarthooksOptionOutputWithContext(context.Background())
}

func (i SmarthooksOptionArgs) ToSmarthooksOptionOutputWithContext(ctx context.Context) SmarthooksOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmarthooksOptionOutput)
}

// SmarthooksOptionArrayInput is an input type that accepts SmarthooksOptionArray and SmarthooksOptionArrayOutput values.
// You can construct a concrete instance of `SmarthooksOptionArrayInput` via:
//
//	SmarthooksOptionArray{ SmarthooksOptionArgs{...} }
type SmarthooksOptionArrayInput interface {
	pulumi.Input

	ToSmarthooksOptionArrayOutput() SmarthooksOptionArrayOutput
	ToSmarthooksOptionArrayOutputWithContext(context.Context) SmarthooksOptionArrayOutput
}

type SmarthooksOptionArray []SmarthooksOptionInput

func (SmarthooksOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SmarthooksOption)(nil)).Elem()
}

func (i SmarthooksOptionArray) ToSmarthooksOptionArrayOutput() SmarthooksOptionArrayOutput {
	return i.ToSmarthooksOptionArrayOutputWithContext(context.Background())
}

func (i SmarthooksOptionArray) ToSmarthooksOptionArrayOutputWithContext(ctx context.Context) SmarthooksOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmarthooksOptionArrayOutput)
}

type SmarthooksOptionOutput struct{ *pulumi.OutputState }

func (SmarthooksOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmarthooksOption)(nil)).Elem()
}

func (o SmarthooksOptionOutput) ToSmarthooksOptionOutput() SmarthooksOptionOutput {
	return o
}

func (o SmarthooksOptionOutput) ToSmarthooksOptionOutputWithContext(ctx context.Context) SmarthooksOptionOutput {
	return o
}

func (o SmarthooksOptionOutput) LocationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SmarthooksOption) *bool { return v.LocationEnabled }).(pulumi.BoolPtrOutput)
}

func (o SmarthooksOptionOutput) MfaDeviceInfoEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SmarthooksOption) *bool { return v.MfaDeviceInfoEnabled }).(pulumi.BoolPtrOutput)
}

func (o SmarthooksOptionOutput) RiskEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SmarthooksOption) *bool { return v.RiskEnabled }).(pulumi.BoolPtrOutput)
}

type SmarthooksOptionArrayOutput struct{ *pulumi.OutputState }

func (SmarthooksOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SmarthooksOption)(nil)).Elem()
}

func (o SmarthooksOptionArrayOutput) ToSmarthooksOptionArrayOutput() SmarthooksOptionArrayOutput {
	return o
}

func (o SmarthooksOptionArrayOutput) ToSmarthooksOptionArrayOutputWithContext(ctx context.Context) SmarthooksOptionArrayOutput {
	return o
}

func (o SmarthooksOptionArrayOutput) Index(i pulumi.IntInput) SmarthooksOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SmarthooksOption {
		return vs[0].([]SmarthooksOption)[vs[1].(int)]
	}).(SmarthooksOptionOutput)
}

type UserMappingsAction struct {
	Action string   `pulumi:"action"`
	Values []string `pulumi:"values"`
}

// UserMappingsActionInput is an input type that accepts UserMappingsActionArgs and UserMappingsActionOutput values.
// You can construct a concrete instance of `UserMappingsActionInput` via:
//
//	UserMappingsActionArgs{...}
type UserMappingsActionInput interface {
	pulumi.Input

	ToUserMappingsActionOutput() UserMappingsActionOutput
	ToUserMappingsActionOutputWithContext(context.Context) UserMappingsActionOutput
}

type UserMappingsActionArgs struct {
	Action pulumi.StringInput      `pulumi:"action"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (UserMappingsActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserMappingsAction)(nil)).Elem()
}

func (i UserMappingsActionArgs) ToUserMappingsActionOutput() UserMappingsActionOutput {
	return i.ToUserMappingsActionOutputWithContext(context.Background())
}

func (i UserMappingsActionArgs) ToUserMappingsActionOutputWithContext(ctx context.Context) UserMappingsActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserMappingsActionOutput)
}

// UserMappingsActionArrayInput is an input type that accepts UserMappingsActionArray and UserMappingsActionArrayOutput values.
// You can construct a concrete instance of `UserMappingsActionArrayInput` via:
//
//	UserMappingsActionArray{ UserMappingsActionArgs{...} }
type UserMappingsActionArrayInput interface {
	pulumi.Input

	ToUserMappingsActionArrayOutput() UserMappingsActionArrayOutput
	ToUserMappingsActionArrayOutputWithContext(context.Context) UserMappingsActionArrayOutput
}

type UserMappingsActionArray []UserMappingsActionInput

func (UserMappingsActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserMappingsAction)(nil)).Elem()
}

func (i UserMappingsActionArray) ToUserMappingsActionArrayOutput() UserMappingsActionArrayOutput {
	return i.ToUserMappingsActionArrayOutputWithContext(context.Background())
}

func (i UserMappingsActionArray) ToUserMappingsActionArrayOutputWithContext(ctx context.Context) UserMappingsActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserMappingsActionArrayOutput)
}

type UserMappingsActionOutput struct{ *pulumi.OutputState }

func (UserMappingsActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserMappingsAction)(nil)).Elem()
}

func (o UserMappingsActionOutput) ToUserMappingsActionOutput() UserMappingsActionOutput {
	return o
}

func (o UserMappingsActionOutput) ToUserMappingsActionOutputWithContext(ctx context.Context) UserMappingsActionOutput {
	return o
}

func (o UserMappingsActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v UserMappingsAction) string { return v.Action }).(pulumi.StringOutput)
}

func (o UserMappingsActionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UserMappingsAction) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type UserMappingsActionArrayOutput struct{ *pulumi.OutputState }

func (UserMappingsActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserMappingsAction)(nil)).Elem()
}

func (o UserMappingsActionArrayOutput) ToUserMappingsActionArrayOutput() UserMappingsActionArrayOutput {
	return o
}

func (o UserMappingsActionArrayOutput) ToUserMappingsActionArrayOutputWithContext(ctx context.Context) UserMappingsActionArrayOutput {
	return o
}

func (o UserMappingsActionArrayOutput) Index(i pulumi.IntInput) UserMappingsActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserMappingsAction {
		return vs[0].([]UserMappingsAction)[vs[1].(int)]
	}).(UserMappingsActionOutput)
}

type UserMappingsCondition struct {
	Operator string `pulumi:"operator"`
	Source   string `pulumi:"source"`
	Value    string `pulumi:"value"`
}

// UserMappingsConditionInput is an input type that accepts UserMappingsConditionArgs and UserMappingsConditionOutput values.
// You can construct a concrete instance of `UserMappingsConditionInput` via:
//
//	UserMappingsConditionArgs{...}
type UserMappingsConditionInput interface {
	pulumi.Input

	ToUserMappingsConditionOutput() UserMappingsConditionOutput
	ToUserMappingsConditionOutputWithContext(context.Context) UserMappingsConditionOutput
}

type UserMappingsConditionArgs struct {
	Operator pulumi.StringInput `pulumi:"operator"`
	Source   pulumi.StringInput `pulumi:"source"`
	Value    pulumi.StringInput `pulumi:"value"`
}

func (UserMappingsConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserMappingsCondition)(nil)).Elem()
}

func (i UserMappingsConditionArgs) ToUserMappingsConditionOutput() UserMappingsConditionOutput {
	return i.ToUserMappingsConditionOutputWithContext(context.Background())
}

func (i UserMappingsConditionArgs) ToUserMappingsConditionOutputWithContext(ctx context.Context) UserMappingsConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserMappingsConditionOutput)
}

// UserMappingsConditionArrayInput is an input type that accepts UserMappingsConditionArray and UserMappingsConditionArrayOutput values.
// You can construct a concrete instance of `UserMappingsConditionArrayInput` via:
//
//	UserMappingsConditionArray{ UserMappingsConditionArgs{...} }
type UserMappingsConditionArrayInput interface {
	pulumi.Input

	ToUserMappingsConditionArrayOutput() UserMappingsConditionArrayOutput
	ToUserMappingsConditionArrayOutputWithContext(context.Context) UserMappingsConditionArrayOutput
}

type UserMappingsConditionArray []UserMappingsConditionInput

func (UserMappingsConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserMappingsCondition)(nil)).Elem()
}

func (i UserMappingsConditionArray) ToUserMappingsConditionArrayOutput() UserMappingsConditionArrayOutput {
	return i.ToUserMappingsConditionArrayOutputWithContext(context.Background())
}

func (i UserMappingsConditionArray) ToUserMappingsConditionArrayOutputWithContext(ctx context.Context) UserMappingsConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserMappingsConditionArrayOutput)
}

type UserMappingsConditionOutput struct{ *pulumi.OutputState }

func (UserMappingsConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserMappingsCondition)(nil)).Elem()
}

func (o UserMappingsConditionOutput) ToUserMappingsConditionOutput() UserMappingsConditionOutput {
	return o
}

func (o UserMappingsConditionOutput) ToUserMappingsConditionOutputWithContext(ctx context.Context) UserMappingsConditionOutput {
	return o
}

func (o UserMappingsConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v UserMappingsCondition) string { return v.Operator }).(pulumi.StringOutput)
}

func (o UserMappingsConditionOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v UserMappingsCondition) string { return v.Source }).(pulumi.StringOutput)
}

func (o UserMappingsConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v UserMappingsCondition) string { return v.Value }).(pulumi.StringOutput)
}

type UserMappingsConditionArrayOutput struct{ *pulumi.OutputState }

func (UserMappingsConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserMappingsCondition)(nil)).Elem()
}

func (o UserMappingsConditionArrayOutput) ToUserMappingsConditionArrayOutput() UserMappingsConditionArrayOutput {
	return o
}

func (o UserMappingsConditionArrayOutput) ToUserMappingsConditionArrayOutputWithContext(ctx context.Context) UserMappingsConditionArrayOutput {
	return o
}

func (o UserMappingsConditionArrayOutput) Index(i pulumi.IntInput) UserMappingsConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserMappingsCondition {
		return vs[0].([]UserMappingsCondition)[vs[1].(int)]
	}).(UserMappingsConditionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppParametersInput)(nil)).Elem(), AppParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppParametersPtrInput)(nil)).Elem(), AppParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppRulesActionInput)(nil)).Elem(), AppRulesActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppRulesActionArrayInput)(nil)).Elem(), AppRulesActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppRulesConditionInput)(nil)).Elem(), AppRulesConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppRulesConditionArrayInput)(nil)).Elem(), AppRulesConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthServersConfigurationInput)(nil)).Elem(), AuthServersConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthServersConfigurationPtrInput)(nil)).Elem(), AuthServersConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OidcAppsParameterInput)(nil)).Elem(), OidcAppsParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OidcAppsParameterArrayInput)(nil)).Elem(), OidcAppsParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivilegesPrivilegeInput)(nil)).Elem(), PrivilegesPrivilegeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivilegesPrivilegePtrInput)(nil)).Elem(), PrivilegesPrivilegeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivilegesPrivilegeStatementInput)(nil)).Elem(), PrivilegesPrivilegeStatementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivilegesPrivilegeStatementArrayInput)(nil)).Elem(), PrivilegesPrivilegeStatementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlAppsParameterInput)(nil)).Elem(), SamlAppsParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlAppsParameterArrayInput)(nil)).Elem(), SamlAppsParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmarthooksConditionInput)(nil)).Elem(), SmarthooksConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmarthooksConditionArrayInput)(nil)).Elem(), SmarthooksConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmarthooksOptionInput)(nil)).Elem(), SmarthooksOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmarthooksOptionArrayInput)(nil)).Elem(), SmarthooksOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserMappingsActionInput)(nil)).Elem(), UserMappingsActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserMappingsActionArrayInput)(nil)).Elem(), UserMappingsActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserMappingsConditionInput)(nil)).Elem(), UserMappingsConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserMappingsConditionArrayInput)(nil)).Elem(), UserMappingsConditionArray{})
	pulumi.RegisterOutputType(AppParametersOutput{})
	pulumi.RegisterOutputType(AppParametersPtrOutput{})
	pulumi.RegisterOutputType(AppRulesActionOutput{})
	pulumi.RegisterOutputType(AppRulesActionArrayOutput{})
	pulumi.RegisterOutputType(AppRulesConditionOutput{})
	pulumi.RegisterOutputType(AppRulesConditionArrayOutput{})
	pulumi.RegisterOutputType(AuthServersConfigurationOutput{})
	pulumi.RegisterOutputType(AuthServersConfigurationPtrOutput{})
	pulumi.RegisterOutputType(OidcAppsParameterOutput{})
	pulumi.RegisterOutputType(OidcAppsParameterArrayOutput{})
	pulumi.RegisterOutputType(PrivilegesPrivilegeOutput{})
	pulumi.RegisterOutputType(PrivilegesPrivilegePtrOutput{})
	pulumi.RegisterOutputType(PrivilegesPrivilegeStatementOutput{})
	pulumi.RegisterOutputType(PrivilegesPrivilegeStatementArrayOutput{})
	pulumi.RegisterOutputType(SamlAppsParameterOutput{})
	pulumi.RegisterOutputType(SamlAppsParameterArrayOutput{})
	pulumi.RegisterOutputType(SmarthooksConditionOutput{})
	pulumi.RegisterOutputType(SmarthooksConditionArrayOutput{})
	pulumi.RegisterOutputType(SmarthooksOptionOutput{})
	pulumi.RegisterOutputType(SmarthooksOptionArrayOutput{})
	pulumi.RegisterOutputType(UserMappingsActionOutput{})
	pulumi.RegisterOutputType(UserMappingsActionArrayOutput{})
	pulumi.RegisterOutputType(UserMappingsConditionOutput{})
	pulumi.RegisterOutputType(UserMappingsConditionArrayOutput{})
}
