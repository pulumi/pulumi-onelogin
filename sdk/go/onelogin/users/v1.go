// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package users

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-onelogin/sdk/go/onelogin/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type V1 struct {
	pulumi.CustomResourceState

	ActivatedAt pulumi.StringPtrOutput `pulumi:"activatedAt"`
	// Free text related to the user.
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// The user's company.
	Company   pulumi.StringPtrOutput `pulumi:"company"`
	CreatedAt pulumi.StringPtrOutput `pulumi:"createdAt"`
	// The user's department.
	Department pulumi.StringPtrOutput `pulumi:"department"`
	// The ID of the OneLogin Directory of the user.
	DirectoryId pulumi.IntPtrOutput `pulumi:"directoryId"`
	// The distinguished name of the user.
	DistinguishedName pulumi.StringPtrOutput `pulumi:"distinguishedName"`
	// A valid email for the user.
	Email pulumi.StringPtrOutput `pulumi:"email"`
	// The ID of the user in an external directory.
	ExternalId pulumi.StringPtrOutput `pulumi:"externalId"`
	// The user's first name.
	Firstname pulumi.StringPtrOutput `pulumi:"firstname"`
	// The ID of the Group in OneLogin that the user is assigned to.
	GroupId              pulumi.IntPtrOutput    `pulumi:"groupId"`
	InvalidLoginAttempts pulumi.IntPtrOutput    `pulumi:"invalidLoginAttempts"`
	InvitationSentAt     pulumi.StringPtrOutput `pulumi:"invitationSentAt"`
	LastLogin            pulumi.StringPtrOutput `pulumi:"lastLogin"`
	// The user's last name.
	Lastname    pulumi.StringPtrOutput `pulumi:"lastname"`
	LockedUntil pulumi.StringPtrOutput `pulumi:"lockedUntil"`
	// The ID of the user's manager in Active Directory.
	ManagerAdId pulumi.StringPtrOutput `pulumi:"managerAdId"`
	// The OneLogin User ID for the user's manager.
	ManagerUserId pulumi.StringPtrOutput `pulumi:"managerUserId"`
	// The user's directory membership.
	MemberOf pulumi.StringPtrOutput `pulumi:"memberOf"`
	// The password to set for a user.
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// Use this when importing a password that's already hashed. Prepend the salt value to the cleartext password value before
	// SHA-256-encoding it
	PasswordAlgorithm pulumi.StringPtrOutput `pulumi:"passwordAlgorithm"`
	PasswordChangedAt pulumi.StringPtrOutput `pulumi:"passwordChangedAt"`
	// Required if the password is being set.
	PasswordConfirmation pulumi.StringPtrOutput `pulumi:"passwordConfirmation"`
	// The E.164 format phone number for a user.
	Phone               pulumi.StringPtrOutput `pulumi:"phone"`
	PreferredLocaleCode pulumi.StringPtrOutput `pulumi:"preferredLocaleCode"`
	// A list of OneLogin Role IDs of the user
	RoleIds pulumi.IntArrayOutput `pulumi:"roleIds"`
	// The salt value used with the password_algorithm.
	Salt pulumi.StringPtrOutput `pulumi:"salt"`
	// The user's Active Directory username.
	Samaccountname pulumi.StringPtrOutput `pulumi:"samaccountname"`
	State          pulumi.IntPtrOutput    `pulumi:"state"`
	Status         pulumi.IntPtrOutput    `pulumi:"status"`
	// The user's job title.
	Title pulumi.StringPtrOutput `pulumi:"title"`
	// The ID of the OneLogin Trusted IDP of the user.
	TrustedIdpId pulumi.IntPtrOutput    `pulumi:"trustedIdpId"`
	UpdatedAt    pulumi.StringPtrOutput `pulumi:"updatedAt"`
	// A username for the user.
	Username pulumi.StringPtrOutput `pulumi:"username"`
	// The principle name of the user.
	Userprincipalname pulumi.StringPtrOutput `pulumi:"userprincipalname"`
}

// NewV1 registers a new resource with the given unique name, arguments, and options.
func NewV1(ctx *pulumi.Context,
	name string, args *V1Args, opts ...pulumi.ResourceOption) (*V1, error) {
	if args == nil {
		args = &V1Args{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource V1
	err := ctx.RegisterResource("onelogin:users/v1:V1", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetV1 gets an existing V1 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetV1(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *V1State, opts ...pulumi.ResourceOption) (*V1, error) {
	var resource V1
	err := ctx.ReadResource("onelogin:users/v1:V1", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering V1 resources.
type v1State struct {
	ActivatedAt *string `pulumi:"activatedAt"`
	// Free text related to the user.
	Comment *string `pulumi:"comment"`
	// The user's company.
	Company   *string `pulumi:"company"`
	CreatedAt *string `pulumi:"createdAt"`
	// The user's department.
	Department *string `pulumi:"department"`
	// The ID of the OneLogin Directory of the user.
	DirectoryId *int `pulumi:"directoryId"`
	// The distinguished name of the user.
	DistinguishedName *string `pulumi:"distinguishedName"`
	// A valid email for the user.
	Email *string `pulumi:"email"`
	// The ID of the user in an external directory.
	ExternalId *string `pulumi:"externalId"`
	// The user's first name.
	Firstname *string `pulumi:"firstname"`
	// The ID of the Group in OneLogin that the user is assigned to.
	GroupId              *int    `pulumi:"groupId"`
	InvalidLoginAttempts *int    `pulumi:"invalidLoginAttempts"`
	InvitationSentAt     *string `pulumi:"invitationSentAt"`
	LastLogin            *string `pulumi:"lastLogin"`
	// The user's last name.
	Lastname    *string `pulumi:"lastname"`
	LockedUntil *string `pulumi:"lockedUntil"`
	// The ID of the user's manager in Active Directory.
	ManagerAdId *string `pulumi:"managerAdId"`
	// The OneLogin User ID for the user's manager.
	ManagerUserId *string `pulumi:"managerUserId"`
	// The user's directory membership.
	MemberOf *string `pulumi:"memberOf"`
	// The password to set for a user.
	Password *string `pulumi:"password"`
	// Use this when importing a password that's already hashed. Prepend the salt value to the cleartext password value before
	// SHA-256-encoding it
	PasswordAlgorithm *string `pulumi:"passwordAlgorithm"`
	PasswordChangedAt *string `pulumi:"passwordChangedAt"`
	// Required if the password is being set.
	PasswordConfirmation *string `pulumi:"passwordConfirmation"`
	// The E.164 format phone number for a user.
	Phone               *string `pulumi:"phone"`
	PreferredLocaleCode *string `pulumi:"preferredLocaleCode"`
	// A list of OneLogin Role IDs of the user
	RoleIds []int `pulumi:"roleIds"`
	// The salt value used with the password_algorithm.
	Salt *string `pulumi:"salt"`
	// The user's Active Directory username.
	Samaccountname *string `pulumi:"samaccountname"`
	State          *int    `pulumi:"state"`
	Status         *int    `pulumi:"status"`
	// The user's job title.
	Title *string `pulumi:"title"`
	// The ID of the OneLogin Trusted IDP of the user.
	TrustedIdpId *int    `pulumi:"trustedIdpId"`
	UpdatedAt    *string `pulumi:"updatedAt"`
	// A username for the user.
	Username *string `pulumi:"username"`
	// The principle name of the user.
	Userprincipalname *string `pulumi:"userprincipalname"`
}

type V1State struct {
	ActivatedAt pulumi.StringPtrInput
	// Free text related to the user.
	Comment pulumi.StringPtrInput
	// The user's company.
	Company   pulumi.StringPtrInput
	CreatedAt pulumi.StringPtrInput
	// The user's department.
	Department pulumi.StringPtrInput
	// The ID of the OneLogin Directory of the user.
	DirectoryId pulumi.IntPtrInput
	// The distinguished name of the user.
	DistinguishedName pulumi.StringPtrInput
	// A valid email for the user.
	Email pulumi.StringPtrInput
	// The ID of the user in an external directory.
	ExternalId pulumi.StringPtrInput
	// The user's first name.
	Firstname pulumi.StringPtrInput
	// The ID of the Group in OneLogin that the user is assigned to.
	GroupId              pulumi.IntPtrInput
	InvalidLoginAttempts pulumi.IntPtrInput
	InvitationSentAt     pulumi.StringPtrInput
	LastLogin            pulumi.StringPtrInput
	// The user's last name.
	Lastname    pulumi.StringPtrInput
	LockedUntil pulumi.StringPtrInput
	// The ID of the user's manager in Active Directory.
	ManagerAdId pulumi.StringPtrInput
	// The OneLogin User ID for the user's manager.
	ManagerUserId pulumi.StringPtrInput
	// The user's directory membership.
	MemberOf pulumi.StringPtrInput
	// The password to set for a user.
	Password pulumi.StringPtrInput
	// Use this when importing a password that's already hashed. Prepend the salt value to the cleartext password value before
	// SHA-256-encoding it
	PasswordAlgorithm pulumi.StringPtrInput
	PasswordChangedAt pulumi.StringPtrInput
	// Required if the password is being set.
	PasswordConfirmation pulumi.StringPtrInput
	// The E.164 format phone number for a user.
	Phone               pulumi.StringPtrInput
	PreferredLocaleCode pulumi.StringPtrInput
	// A list of OneLogin Role IDs of the user
	RoleIds pulumi.IntArrayInput
	// The salt value used with the password_algorithm.
	Salt pulumi.StringPtrInput
	// The user's Active Directory username.
	Samaccountname pulumi.StringPtrInput
	State          pulumi.IntPtrInput
	Status         pulumi.IntPtrInput
	// The user's job title.
	Title pulumi.StringPtrInput
	// The ID of the OneLogin Trusted IDP of the user.
	TrustedIdpId pulumi.IntPtrInput
	UpdatedAt    pulumi.StringPtrInput
	// A username for the user.
	Username pulumi.StringPtrInput
	// The principle name of the user.
	Userprincipalname pulumi.StringPtrInput
}

func (V1State) ElementType() reflect.Type {
	return reflect.TypeOf((*v1State)(nil)).Elem()
}

type v1Args struct {
	ActivatedAt *string `pulumi:"activatedAt"`
	// Free text related to the user.
	Comment *string `pulumi:"comment"`
	// The user's company.
	Company   *string `pulumi:"company"`
	CreatedAt *string `pulumi:"createdAt"`
	// The user's department.
	Department *string `pulumi:"department"`
	// The ID of the OneLogin Directory of the user.
	DirectoryId *int `pulumi:"directoryId"`
	// The distinguished name of the user.
	DistinguishedName *string `pulumi:"distinguishedName"`
	// A valid email for the user.
	Email *string `pulumi:"email"`
	// The ID of the user in an external directory.
	ExternalId *string `pulumi:"externalId"`
	// The user's first name.
	Firstname *string `pulumi:"firstname"`
	// The ID of the Group in OneLogin that the user is assigned to.
	GroupId              *int    `pulumi:"groupId"`
	InvalidLoginAttempts *int    `pulumi:"invalidLoginAttempts"`
	InvitationSentAt     *string `pulumi:"invitationSentAt"`
	LastLogin            *string `pulumi:"lastLogin"`
	// The user's last name.
	Lastname    *string `pulumi:"lastname"`
	LockedUntil *string `pulumi:"lockedUntil"`
	// The ID of the user's manager in Active Directory.
	ManagerAdId *string `pulumi:"managerAdId"`
	// The OneLogin User ID for the user's manager.
	ManagerUserId *string `pulumi:"managerUserId"`
	// The user's directory membership.
	MemberOf *string `pulumi:"memberOf"`
	// The password to set for a user.
	Password *string `pulumi:"password"`
	// Use this when importing a password that's already hashed. Prepend the salt value to the cleartext password value before
	// SHA-256-encoding it
	PasswordAlgorithm *string `pulumi:"passwordAlgorithm"`
	PasswordChangedAt *string `pulumi:"passwordChangedAt"`
	// Required if the password is being set.
	PasswordConfirmation *string `pulumi:"passwordConfirmation"`
	// The E.164 format phone number for a user.
	Phone               *string `pulumi:"phone"`
	PreferredLocaleCode *string `pulumi:"preferredLocaleCode"`
	// A list of OneLogin Role IDs of the user
	RoleIds []int `pulumi:"roleIds"`
	// The salt value used with the password_algorithm.
	Salt *string `pulumi:"salt"`
	// The user's Active Directory username.
	Samaccountname *string `pulumi:"samaccountname"`
	State          *int    `pulumi:"state"`
	Status         *int    `pulumi:"status"`
	// The user's job title.
	Title *string `pulumi:"title"`
	// The ID of the OneLogin Trusted IDP of the user.
	TrustedIdpId *int    `pulumi:"trustedIdpId"`
	UpdatedAt    *string `pulumi:"updatedAt"`
	// A username for the user.
	Username *string `pulumi:"username"`
	// The principle name of the user.
	Userprincipalname *string `pulumi:"userprincipalname"`
}

// The set of arguments for constructing a V1 resource.
type V1Args struct {
	ActivatedAt pulumi.StringPtrInput
	// Free text related to the user.
	Comment pulumi.StringPtrInput
	// The user's company.
	Company   pulumi.StringPtrInput
	CreatedAt pulumi.StringPtrInput
	// The user's department.
	Department pulumi.StringPtrInput
	// The ID of the OneLogin Directory of the user.
	DirectoryId pulumi.IntPtrInput
	// The distinguished name of the user.
	DistinguishedName pulumi.StringPtrInput
	// A valid email for the user.
	Email pulumi.StringPtrInput
	// The ID of the user in an external directory.
	ExternalId pulumi.StringPtrInput
	// The user's first name.
	Firstname pulumi.StringPtrInput
	// The ID of the Group in OneLogin that the user is assigned to.
	GroupId              pulumi.IntPtrInput
	InvalidLoginAttempts pulumi.IntPtrInput
	InvitationSentAt     pulumi.StringPtrInput
	LastLogin            pulumi.StringPtrInput
	// The user's last name.
	Lastname    pulumi.StringPtrInput
	LockedUntil pulumi.StringPtrInput
	// The ID of the user's manager in Active Directory.
	ManagerAdId pulumi.StringPtrInput
	// The OneLogin User ID for the user's manager.
	ManagerUserId pulumi.StringPtrInput
	// The user's directory membership.
	MemberOf pulumi.StringPtrInput
	// The password to set for a user.
	Password pulumi.StringPtrInput
	// Use this when importing a password that's already hashed. Prepend the salt value to the cleartext password value before
	// SHA-256-encoding it
	PasswordAlgorithm pulumi.StringPtrInput
	PasswordChangedAt pulumi.StringPtrInput
	// Required if the password is being set.
	PasswordConfirmation pulumi.StringPtrInput
	// The E.164 format phone number for a user.
	Phone               pulumi.StringPtrInput
	PreferredLocaleCode pulumi.StringPtrInput
	// A list of OneLogin Role IDs of the user
	RoleIds pulumi.IntArrayInput
	// The salt value used with the password_algorithm.
	Salt pulumi.StringPtrInput
	// The user's Active Directory username.
	Samaccountname pulumi.StringPtrInput
	State          pulumi.IntPtrInput
	Status         pulumi.IntPtrInput
	// The user's job title.
	Title pulumi.StringPtrInput
	// The ID of the OneLogin Trusted IDP of the user.
	TrustedIdpId pulumi.IntPtrInput
	UpdatedAt    pulumi.StringPtrInput
	// A username for the user.
	Username pulumi.StringPtrInput
	// The principle name of the user.
	Userprincipalname pulumi.StringPtrInput
}

func (V1Args) ElementType() reflect.Type {
	return reflect.TypeOf((*v1Args)(nil)).Elem()
}

type V1Input interface {
	pulumi.Input

	ToV1Output() V1Output
	ToV1OutputWithContext(ctx context.Context) V1Output
}

func (*V1) ElementType() reflect.Type {
	return reflect.TypeOf((**V1)(nil)).Elem()
}

func (i *V1) ToV1Output() V1Output {
	return i.ToV1OutputWithContext(context.Background())
}

func (i *V1) ToV1OutputWithContext(ctx context.Context) V1Output {
	return pulumi.ToOutputWithContext(ctx, i).(V1Output)
}

// V1ArrayInput is an input type that accepts V1Array and V1ArrayOutput values.
// You can construct a concrete instance of `V1ArrayInput` via:
//
//	V1Array{ V1Args{...} }
type V1ArrayInput interface {
	pulumi.Input

	ToV1ArrayOutput() V1ArrayOutput
	ToV1ArrayOutputWithContext(context.Context) V1ArrayOutput
}

type V1Array []V1Input

func (V1Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*V1)(nil)).Elem()
}

func (i V1Array) ToV1ArrayOutput() V1ArrayOutput {
	return i.ToV1ArrayOutputWithContext(context.Background())
}

func (i V1Array) ToV1ArrayOutputWithContext(ctx context.Context) V1ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V1ArrayOutput)
}

// V1MapInput is an input type that accepts V1Map and V1MapOutput values.
// You can construct a concrete instance of `V1MapInput` via:
//
//	V1Map{ "key": V1Args{...} }
type V1MapInput interface {
	pulumi.Input

	ToV1MapOutput() V1MapOutput
	ToV1MapOutputWithContext(context.Context) V1MapOutput
}

type V1Map map[string]V1Input

func (V1Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*V1)(nil)).Elem()
}

func (i V1Map) ToV1MapOutput() V1MapOutput {
	return i.ToV1MapOutputWithContext(context.Background())
}

func (i V1Map) ToV1MapOutputWithContext(ctx context.Context) V1MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V1MapOutput)
}

type V1Output struct{ *pulumi.OutputState }

func (V1Output) ElementType() reflect.Type {
	return reflect.TypeOf((**V1)(nil)).Elem()
}

func (o V1Output) ToV1Output() V1Output {
	return o
}

func (o V1Output) ToV1OutputWithContext(ctx context.Context) V1Output {
	return o
}

func (o V1Output) ActivatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.StringPtrOutput { return v.ActivatedAt }).(pulumi.StringPtrOutput)
}

// Free text related to the user.
func (o V1Output) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// The user's company.
func (o V1Output) Company() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.StringPtrOutput { return v.Company }).(pulumi.StringPtrOutput)
}

func (o V1Output) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.StringPtrOutput { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The user's department.
func (o V1Output) Department() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.StringPtrOutput { return v.Department }).(pulumi.StringPtrOutput)
}

// The ID of the OneLogin Directory of the user.
func (o V1Output) DirectoryId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.IntPtrOutput { return v.DirectoryId }).(pulumi.IntPtrOutput)
}

// The distinguished name of the user.
func (o V1Output) DistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.StringPtrOutput { return v.DistinguishedName }).(pulumi.StringPtrOutput)
}

// A valid email for the user.
func (o V1Output) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.StringPtrOutput { return v.Email }).(pulumi.StringPtrOutput)
}

// The ID of the user in an external directory.
func (o V1Output) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.StringPtrOutput { return v.ExternalId }).(pulumi.StringPtrOutput)
}

// The user's first name.
func (o V1Output) Firstname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.StringPtrOutput { return v.Firstname }).(pulumi.StringPtrOutput)
}

// The ID of the Group in OneLogin that the user is assigned to.
func (o V1Output) GroupId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.IntPtrOutput { return v.GroupId }).(pulumi.IntPtrOutput)
}

func (o V1Output) InvalidLoginAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.IntPtrOutput { return v.InvalidLoginAttempts }).(pulumi.IntPtrOutput)
}

func (o V1Output) InvitationSentAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.StringPtrOutput { return v.InvitationSentAt }).(pulumi.StringPtrOutput)
}

func (o V1Output) LastLogin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.StringPtrOutput { return v.LastLogin }).(pulumi.StringPtrOutput)
}

// The user's last name.
func (o V1Output) Lastname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.StringPtrOutput { return v.Lastname }).(pulumi.StringPtrOutput)
}

func (o V1Output) LockedUntil() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.StringPtrOutput { return v.LockedUntil }).(pulumi.StringPtrOutput)
}

// The ID of the user's manager in Active Directory.
func (o V1Output) ManagerAdId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.StringPtrOutput { return v.ManagerAdId }).(pulumi.StringPtrOutput)
}

// The OneLogin User ID for the user's manager.
func (o V1Output) ManagerUserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.StringPtrOutput { return v.ManagerUserId }).(pulumi.StringPtrOutput)
}

// The user's directory membership.
func (o V1Output) MemberOf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.StringPtrOutput { return v.MemberOf }).(pulumi.StringPtrOutput)
}

// The password to set for a user.
func (o V1Output) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// Use this when importing a password that's already hashed. Prepend the salt value to the cleartext password value before
// SHA-256-encoding it
func (o V1Output) PasswordAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.StringPtrOutput { return v.PasswordAlgorithm }).(pulumi.StringPtrOutput)
}

func (o V1Output) PasswordChangedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.StringPtrOutput { return v.PasswordChangedAt }).(pulumi.StringPtrOutput)
}

// Required if the password is being set.
func (o V1Output) PasswordConfirmation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.StringPtrOutput { return v.PasswordConfirmation }).(pulumi.StringPtrOutput)
}

// The E.164 format phone number for a user.
func (o V1Output) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.StringPtrOutput { return v.Phone }).(pulumi.StringPtrOutput)
}

func (o V1Output) PreferredLocaleCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.StringPtrOutput { return v.PreferredLocaleCode }).(pulumi.StringPtrOutput)
}

// A list of OneLogin Role IDs of the user
func (o V1Output) RoleIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *V1) pulumi.IntArrayOutput { return v.RoleIds }).(pulumi.IntArrayOutput)
}

// The salt value used with the password_algorithm.
func (o V1Output) Salt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.StringPtrOutput { return v.Salt }).(pulumi.StringPtrOutput)
}

// The user's Active Directory username.
func (o V1Output) Samaccountname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.StringPtrOutput { return v.Samaccountname }).(pulumi.StringPtrOutput)
}

func (o V1Output) State() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.IntPtrOutput { return v.State }).(pulumi.IntPtrOutput)
}

func (o V1Output) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.IntPtrOutput { return v.Status }).(pulumi.IntPtrOutput)
}

// The user's job title.
func (o V1Output) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.StringPtrOutput { return v.Title }).(pulumi.StringPtrOutput)
}

// The ID of the OneLogin Trusted IDP of the user.
func (o V1Output) TrustedIdpId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.IntPtrOutput { return v.TrustedIdpId }).(pulumi.IntPtrOutput)
}

func (o V1Output) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.StringPtrOutput { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

// A username for the user.
func (o V1Output) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.StringPtrOutput { return v.Username }).(pulumi.StringPtrOutput)
}

// The principle name of the user.
func (o V1Output) Userprincipalname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V1) pulumi.StringPtrOutput { return v.Userprincipalname }).(pulumi.StringPtrOutput)
}

type V1ArrayOutput struct{ *pulumi.OutputState }

func (V1ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*V1)(nil)).Elem()
}

func (o V1ArrayOutput) ToV1ArrayOutput() V1ArrayOutput {
	return o
}

func (o V1ArrayOutput) ToV1ArrayOutputWithContext(ctx context.Context) V1ArrayOutput {
	return o
}

func (o V1ArrayOutput) Index(i pulumi.IntInput) V1Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *V1 {
		return vs[0].([]*V1)[vs[1].(int)]
	}).(V1Output)
}

type V1MapOutput struct{ *pulumi.OutputState }

func (V1MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*V1)(nil)).Elem()
}

func (o V1MapOutput) ToV1MapOutput() V1MapOutput {
	return o
}

func (o V1MapOutput) ToV1MapOutputWithContext(ctx context.Context) V1MapOutput {
	return o
}

func (o V1MapOutput) MapIndex(k pulumi.StringInput) V1Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *V1 {
		return vs[0].(map[string]*V1)[vs[1].(string)]
	}).(V1Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*V1Input)(nil)).Elem(), &V1{})
	pulumi.RegisterInputType(reflect.TypeOf((*V1ArrayInput)(nil)).Elem(), V1Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*V1MapInput)(nil)).Elem(), V1Map{})
	pulumi.RegisterOutputType(V1Output{})
	pulumi.RegisterOutputType(V1ArrayOutput{})
	pulumi.RegisterOutputType(V1MapOutput{})
}
