// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package onelogin

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-onelogin/sdk/go/onelogin/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Smarthooks struct {
	pulumi.CustomResourceState

	Conditions     SmarthooksConditionArrayOutput `pulumi:"conditions"`
	ContextVersion pulumi.StringOutput            `pulumi:"contextVersion"`
	CreatedAt      pulumi.StringOutput            `pulumi:"createdAt"`
	Disabled       pulumi.BoolOutput              `pulumi:"disabled"`
	EnvVars        pulumi.StringArrayOutput       `pulumi:"envVars"`
	Function       pulumi.StringOutput            `pulumi:"function"`
	Options        SmarthooksOptionArrayOutput    `pulumi:"options"`
	Packages       pulumi.StringMapOutput         `pulumi:"packages"`
	Retries        pulumi.IntOutput               `pulumi:"retries"`
	Runtime        pulumi.StringOutput            `pulumi:"runtime"`
	Status         pulumi.StringOutput            `pulumi:"status"`
	Timeout        pulumi.IntOutput               `pulumi:"timeout"`
	Type           pulumi.StringOutput            `pulumi:"type"`
	UpdatedAt      pulumi.StringOutput            `pulumi:"updatedAt"`
}

// NewSmarthooks registers a new resource with the given unique name, arguments, and options.
func NewSmarthooks(ctx *pulumi.Context,
	name string, args *SmarthooksArgs, opts ...pulumi.ResourceOption) (*Smarthooks, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Disabled == nil {
		return nil, errors.New("invalid value for required argument 'Disabled'")
	}
	if args.EnvVars == nil {
		return nil, errors.New("invalid value for required argument 'EnvVars'")
	}
	if args.Function == nil {
		return nil, errors.New("invalid value for required argument 'Function'")
	}
	if args.Packages == nil {
		return nil, errors.New("invalid value for required argument 'Packages'")
	}
	if args.Retries == nil {
		return nil, errors.New("invalid value for required argument 'Retries'")
	}
	if args.Runtime == nil {
		return nil, errors.New("invalid value for required argument 'Runtime'")
	}
	if args.Timeout == nil {
		return nil, errors.New("invalid value for required argument 'Timeout'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Smarthooks
	err := ctx.RegisterResource("onelogin:index/smarthooks:Smarthooks", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSmarthooks gets an existing Smarthooks resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSmarthooks(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SmarthooksState, opts ...pulumi.ResourceOption) (*Smarthooks, error) {
	var resource Smarthooks
	err := ctx.ReadResource("onelogin:index/smarthooks:Smarthooks", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Smarthooks resources.
type smarthooksState struct {
	Conditions     []SmarthooksCondition `pulumi:"conditions"`
	ContextVersion *string               `pulumi:"contextVersion"`
	CreatedAt      *string               `pulumi:"createdAt"`
	Disabled       *bool                 `pulumi:"disabled"`
	EnvVars        []string              `pulumi:"envVars"`
	Function       *string               `pulumi:"function"`
	Options        []SmarthooksOption    `pulumi:"options"`
	Packages       map[string]string     `pulumi:"packages"`
	Retries        *int                  `pulumi:"retries"`
	Runtime        *string               `pulumi:"runtime"`
	Status         *string               `pulumi:"status"`
	Timeout        *int                  `pulumi:"timeout"`
	Type           *string               `pulumi:"type"`
	UpdatedAt      *string               `pulumi:"updatedAt"`
}

type SmarthooksState struct {
	Conditions     SmarthooksConditionArrayInput
	ContextVersion pulumi.StringPtrInput
	CreatedAt      pulumi.StringPtrInput
	Disabled       pulumi.BoolPtrInput
	EnvVars        pulumi.StringArrayInput
	Function       pulumi.StringPtrInput
	Options        SmarthooksOptionArrayInput
	Packages       pulumi.StringMapInput
	Retries        pulumi.IntPtrInput
	Runtime        pulumi.StringPtrInput
	Status         pulumi.StringPtrInput
	Timeout        pulumi.IntPtrInput
	Type           pulumi.StringPtrInput
	UpdatedAt      pulumi.StringPtrInput
}

func (SmarthooksState) ElementType() reflect.Type {
	return reflect.TypeOf((*smarthooksState)(nil)).Elem()
}

type smarthooksArgs struct {
	Conditions     []SmarthooksCondition `pulumi:"conditions"`
	ContextVersion *string               `pulumi:"contextVersion"`
	Disabled       bool                  `pulumi:"disabled"`
	EnvVars        []string              `pulumi:"envVars"`
	Function       string                `pulumi:"function"`
	Options        []SmarthooksOption    `pulumi:"options"`
	Packages       map[string]string     `pulumi:"packages"`
	Retries        int                   `pulumi:"retries"`
	Runtime        string                `pulumi:"runtime"`
	Timeout        int                   `pulumi:"timeout"`
	Type           string                `pulumi:"type"`
}

// The set of arguments for constructing a Smarthooks resource.
type SmarthooksArgs struct {
	Conditions     SmarthooksConditionArrayInput
	ContextVersion pulumi.StringPtrInput
	Disabled       pulumi.BoolInput
	EnvVars        pulumi.StringArrayInput
	Function       pulumi.StringInput
	Options        SmarthooksOptionArrayInput
	Packages       pulumi.StringMapInput
	Retries        pulumi.IntInput
	Runtime        pulumi.StringInput
	Timeout        pulumi.IntInput
	Type           pulumi.StringInput
}

func (SmarthooksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*smarthooksArgs)(nil)).Elem()
}

type SmarthooksInput interface {
	pulumi.Input

	ToSmarthooksOutput() SmarthooksOutput
	ToSmarthooksOutputWithContext(ctx context.Context) SmarthooksOutput
}

func (*Smarthooks) ElementType() reflect.Type {
	return reflect.TypeOf((**Smarthooks)(nil)).Elem()
}

func (i *Smarthooks) ToSmarthooksOutput() SmarthooksOutput {
	return i.ToSmarthooksOutputWithContext(context.Background())
}

func (i *Smarthooks) ToSmarthooksOutputWithContext(ctx context.Context) SmarthooksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmarthooksOutput)
}

// SmarthooksArrayInput is an input type that accepts SmarthooksArray and SmarthooksArrayOutput values.
// You can construct a concrete instance of `SmarthooksArrayInput` via:
//
//	SmarthooksArray{ SmarthooksArgs{...} }
type SmarthooksArrayInput interface {
	pulumi.Input

	ToSmarthooksArrayOutput() SmarthooksArrayOutput
	ToSmarthooksArrayOutputWithContext(context.Context) SmarthooksArrayOutput
}

type SmarthooksArray []SmarthooksInput

func (SmarthooksArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Smarthooks)(nil)).Elem()
}

func (i SmarthooksArray) ToSmarthooksArrayOutput() SmarthooksArrayOutput {
	return i.ToSmarthooksArrayOutputWithContext(context.Background())
}

func (i SmarthooksArray) ToSmarthooksArrayOutputWithContext(ctx context.Context) SmarthooksArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmarthooksArrayOutput)
}

// SmarthooksMapInput is an input type that accepts SmarthooksMap and SmarthooksMapOutput values.
// You can construct a concrete instance of `SmarthooksMapInput` via:
//
//	SmarthooksMap{ "key": SmarthooksArgs{...} }
type SmarthooksMapInput interface {
	pulumi.Input

	ToSmarthooksMapOutput() SmarthooksMapOutput
	ToSmarthooksMapOutputWithContext(context.Context) SmarthooksMapOutput
}

type SmarthooksMap map[string]SmarthooksInput

func (SmarthooksMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Smarthooks)(nil)).Elem()
}

func (i SmarthooksMap) ToSmarthooksMapOutput() SmarthooksMapOutput {
	return i.ToSmarthooksMapOutputWithContext(context.Background())
}

func (i SmarthooksMap) ToSmarthooksMapOutputWithContext(ctx context.Context) SmarthooksMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmarthooksMapOutput)
}

type SmarthooksOutput struct{ *pulumi.OutputState }

func (SmarthooksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Smarthooks)(nil)).Elem()
}

func (o SmarthooksOutput) ToSmarthooksOutput() SmarthooksOutput {
	return o
}

func (o SmarthooksOutput) ToSmarthooksOutputWithContext(ctx context.Context) SmarthooksOutput {
	return o
}

func (o SmarthooksOutput) Conditions() SmarthooksConditionArrayOutput {
	return o.ApplyT(func(v *Smarthooks) SmarthooksConditionArrayOutput { return v.Conditions }).(SmarthooksConditionArrayOutput)
}

func (o SmarthooksOutput) ContextVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Smarthooks) pulumi.StringOutput { return v.ContextVersion }).(pulumi.StringOutput)
}

func (o SmarthooksOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Smarthooks) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o SmarthooksOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *Smarthooks) pulumi.BoolOutput { return v.Disabled }).(pulumi.BoolOutput)
}

func (o SmarthooksOutput) EnvVars() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Smarthooks) pulumi.StringArrayOutput { return v.EnvVars }).(pulumi.StringArrayOutput)
}

func (o SmarthooksOutput) Function() pulumi.StringOutput {
	return o.ApplyT(func(v *Smarthooks) pulumi.StringOutput { return v.Function }).(pulumi.StringOutput)
}

func (o SmarthooksOutput) Options() SmarthooksOptionArrayOutput {
	return o.ApplyT(func(v *Smarthooks) SmarthooksOptionArrayOutput { return v.Options }).(SmarthooksOptionArrayOutput)
}

func (o SmarthooksOutput) Packages() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Smarthooks) pulumi.StringMapOutput { return v.Packages }).(pulumi.StringMapOutput)
}

func (o SmarthooksOutput) Retries() pulumi.IntOutput {
	return o.ApplyT(func(v *Smarthooks) pulumi.IntOutput { return v.Retries }).(pulumi.IntOutput)
}

func (o SmarthooksOutput) Runtime() pulumi.StringOutput {
	return o.ApplyT(func(v *Smarthooks) pulumi.StringOutput { return v.Runtime }).(pulumi.StringOutput)
}

func (o SmarthooksOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Smarthooks) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o SmarthooksOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v *Smarthooks) pulumi.IntOutput { return v.Timeout }).(pulumi.IntOutput)
}

func (o SmarthooksOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Smarthooks) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func (o SmarthooksOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Smarthooks) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type SmarthooksArrayOutput struct{ *pulumi.OutputState }

func (SmarthooksArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Smarthooks)(nil)).Elem()
}

func (o SmarthooksArrayOutput) ToSmarthooksArrayOutput() SmarthooksArrayOutput {
	return o
}

func (o SmarthooksArrayOutput) ToSmarthooksArrayOutputWithContext(ctx context.Context) SmarthooksArrayOutput {
	return o
}

func (o SmarthooksArrayOutput) Index(i pulumi.IntInput) SmarthooksOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Smarthooks {
		return vs[0].([]*Smarthooks)[vs[1].(int)]
	}).(SmarthooksOutput)
}

type SmarthooksMapOutput struct{ *pulumi.OutputState }

func (SmarthooksMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Smarthooks)(nil)).Elem()
}

func (o SmarthooksMapOutput) ToSmarthooksMapOutput() SmarthooksMapOutput {
	return o
}

func (o SmarthooksMapOutput) ToSmarthooksMapOutputWithContext(ctx context.Context) SmarthooksMapOutput {
	return o
}

func (o SmarthooksMapOutput) MapIndex(k pulumi.StringInput) SmarthooksOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Smarthooks {
		return vs[0].(map[string]*Smarthooks)[vs[1].(string)]
	}).(SmarthooksOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SmarthooksInput)(nil)).Elem(), &Smarthooks{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmarthooksArrayInput)(nil)).Elem(), SmarthooksArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmarthooksMapInput)(nil)).Elem(), SmarthooksMap{})
	pulumi.RegisterOutputType(SmarthooksOutput{})
	pulumi.RegisterOutputType(SmarthooksArrayOutput{})
	pulumi.RegisterOutputType(SmarthooksMapOutput{})
}
