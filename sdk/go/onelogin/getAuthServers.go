// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package onelogin

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-onelogin/sdk/go/onelogin/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupAuthServers(ctx *pulumi.Context, args *LookupAuthServersArgs, opts ...pulumi.InvokeOption) (*LookupAuthServersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAuthServersResult
	err := ctx.Invoke("onelogin:index/getAuthServers:getAuthServers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAuthServers.
type LookupAuthServersArgs struct {
	Configuration *GetAuthServersConfiguration `pulumi:"configuration"`
	Description   *string                      `pulumi:"description"`
	Filters       []GetAuthServersFilter       `pulumi:"filters"`
	Name          *string                      `pulumi:"name"`
}

// A collection of values returned by getAuthServers.
type LookupAuthServersResult struct {
	Configuration GetAuthServersConfiguration `pulumi:"configuration"`
	Description   string                      `pulumi:"description"`
	Filters       []GetAuthServersFilter      `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

func LookupAuthServersOutput(ctx *pulumi.Context, args LookupAuthServersOutputArgs, opts ...pulumi.InvokeOption) LookupAuthServersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAuthServersResult, error) {
			args := v.(LookupAuthServersArgs)
			r, err := LookupAuthServers(ctx, &args, opts...)
			var s LookupAuthServersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAuthServersResultOutput)
}

// A collection of arguments for invoking getAuthServers.
type LookupAuthServersOutputArgs struct {
	Configuration GetAuthServersConfigurationPtrInput `pulumi:"configuration"`
	Description   pulumi.StringPtrInput               `pulumi:"description"`
	Filters       GetAuthServersFilterArrayInput      `pulumi:"filters"`
	Name          pulumi.StringPtrInput               `pulumi:"name"`
}

func (LookupAuthServersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAuthServersArgs)(nil)).Elem()
}

// A collection of values returned by getAuthServers.
type LookupAuthServersResultOutput struct{ *pulumi.OutputState }

func (LookupAuthServersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAuthServersResult)(nil)).Elem()
}

func (o LookupAuthServersResultOutput) ToLookupAuthServersResultOutput() LookupAuthServersResultOutput {
	return o
}

func (o LookupAuthServersResultOutput) ToLookupAuthServersResultOutputWithContext(ctx context.Context) LookupAuthServersResultOutput {
	return o
}

func (o LookupAuthServersResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupAuthServersResult] {
	return pulumix.Output[LookupAuthServersResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupAuthServersResultOutput) Configuration() GetAuthServersConfigurationOutput {
	return o.ApplyT(func(v LookupAuthServersResult) GetAuthServersConfiguration { return v.Configuration }).(GetAuthServersConfigurationOutput)
}

func (o LookupAuthServersResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthServersResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupAuthServersResultOutput) Filters() GetAuthServersFilterArrayOutput {
	return o.ApplyT(func(v LookupAuthServersResult) []GetAuthServersFilter { return v.Filters }).(GetAuthServersFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAuthServersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthServersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupAuthServersResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthServersResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAuthServersResultOutput{})
}
