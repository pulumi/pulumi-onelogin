// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.onelogin.api.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.onelogin.api.inputs.GetAuthorizationsClaimsFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAuthorizationsClaimsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAuthorizationsClaimsPlainArgs Empty = new GetAuthorizationsClaimsPlainArgs();

    @Import(name="apiAuthorizationsId", required=true)
    private String apiAuthorizationsId;

    public String apiAuthorizationsId() {
        return this.apiAuthorizationsId;
    }

    @Import(name="attributeTransformations")
    private @Nullable String attributeTransformations;

    public Optional<String> attributeTransformations() {
        return Optional.ofNullable(this.attributeTransformations);
    }

    @Import(name="defaultValues")
    private @Nullable String defaultValues;

    public Optional<String> defaultValues() {
        return Optional.ofNullable(this.defaultValues);
    }

    @Import(name="filters")
    private @Nullable List<GetAuthorizationsClaimsFilter> filters;

    public Optional<List<GetAuthorizationsClaimsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    @Import(name="label")
    private @Nullable String label;

    public Optional<String> label() {
        return Optional.ofNullable(this.label);
    }

    @Import(name="provisionedEntitlements")
    private @Nullable Boolean provisionedEntitlements;

    public Optional<Boolean> provisionedEntitlements() {
        return Optional.ofNullable(this.provisionedEntitlements);
    }

    @Import(name="skipIfBlank")
    private @Nullable Boolean skipIfBlank;

    public Optional<Boolean> skipIfBlank() {
        return Optional.ofNullable(this.skipIfBlank);
    }

    @Import(name="userAttributeMacros")
    private @Nullable String userAttributeMacros;

    public Optional<String> userAttributeMacros() {
        return Optional.ofNullable(this.userAttributeMacros);
    }

    @Import(name="userAttributeMappings")
    private @Nullable String userAttributeMappings;

    public Optional<String> userAttributeMappings() {
        return Optional.ofNullable(this.userAttributeMappings);
    }

    @Import(name="values")
    private @Nullable List<String> values;

    public Optional<List<String>> values() {
        return Optional.ofNullable(this.values);
    }

    private GetAuthorizationsClaimsPlainArgs() {}

    private GetAuthorizationsClaimsPlainArgs(GetAuthorizationsClaimsPlainArgs $) {
        this.apiAuthorizationsId = $.apiAuthorizationsId;
        this.attributeTransformations = $.attributeTransformations;
        this.defaultValues = $.defaultValues;
        this.filters = $.filters;
        this.label = $.label;
        this.provisionedEntitlements = $.provisionedEntitlements;
        this.skipIfBlank = $.skipIfBlank;
        this.userAttributeMacros = $.userAttributeMacros;
        this.userAttributeMappings = $.userAttributeMappings;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAuthorizationsClaimsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAuthorizationsClaimsPlainArgs $;

        public Builder() {
            $ = new GetAuthorizationsClaimsPlainArgs();
        }

        public Builder(GetAuthorizationsClaimsPlainArgs defaults) {
            $ = new GetAuthorizationsClaimsPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder apiAuthorizationsId(String apiAuthorizationsId) {
            $.apiAuthorizationsId = apiAuthorizationsId;
            return this;
        }

        public Builder attributeTransformations(@Nullable String attributeTransformations) {
            $.attributeTransformations = attributeTransformations;
            return this;
        }

        public Builder defaultValues(@Nullable String defaultValues) {
            $.defaultValues = defaultValues;
            return this;
        }

        public Builder filters(@Nullable List<GetAuthorizationsClaimsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetAuthorizationsClaimsFilter... filters) {
            return filters(List.of(filters));
        }

        public Builder label(@Nullable String label) {
            $.label = label;
            return this;
        }

        public Builder provisionedEntitlements(@Nullable Boolean provisionedEntitlements) {
            $.provisionedEntitlements = provisionedEntitlements;
            return this;
        }

        public Builder skipIfBlank(@Nullable Boolean skipIfBlank) {
            $.skipIfBlank = skipIfBlank;
            return this;
        }

        public Builder userAttributeMacros(@Nullable String userAttributeMacros) {
            $.userAttributeMacros = userAttributeMacros;
            return this;
        }

        public Builder userAttributeMappings(@Nullable String userAttributeMappings) {
            $.userAttributeMappings = userAttributeMappings;
            return this;
        }

        public Builder values(@Nullable List<String> values) {
            $.values = values;
            return this;
        }

        public Builder values(String... values) {
            return values(List.of(values));
        }

        public GetAuthorizationsClaimsPlainArgs build() {
            $.apiAuthorizationsId = Objects.requireNonNull($.apiAuthorizationsId, "expected parameter 'apiAuthorizationsId' to be non-null");
            return $;
        }
    }

}
