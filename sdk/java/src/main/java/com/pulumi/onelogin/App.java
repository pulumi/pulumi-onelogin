// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.onelogin;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.onelogin.AppArgs;
import com.pulumi.onelogin.Utilities;
import com.pulumi.onelogin.inputs.AppState;
import com.pulumi.onelogin.outputs.AppEnforcementPoint;
import com.pulumi.onelogin.outputs.AppParameters;
import com.pulumi.onelogin.outputs.AppProvisioning;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="onelogin:index/app:App")
public class App extends com.pulumi.resources.CustomResource {
    /**
     * Indicates whether or not administrators can access the app as a user that they have assumed control over.
     * 
     */
    @Export(name="allowAssumedSignin", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> allowAssumedSignin;

    /**
     * @return Indicates whether or not administrators can access the app as a user that they have assumed control over.
     * 
     */
    public Output<Optional<Boolean>> allowAssumedSignin() {
        return Codegen.optional(this.allowAssumedSignin);
    }
    /**
     * An ID indicating the type of app: - 0: Password - 1: OpenId - 2: SAML - 3: API - 4: Google - 6: Forms Based App - 7:
     * WSFED - 8: OpenId Connect
     * 
     */
    @Export(name="authMethod", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> authMethod;

    /**
     * @return An ID indicating the type of app: - 0: Password - 1: OpenId - 2: SAML - 3: API - 4: Google - 6: Forms Based App - 7:
     * WSFED - 8: OpenId Connect
     * 
     */
    public Output<Optional<Integer>> authMethod() {
        return Codegen.optional(this.authMethod);
    }
    /**
     * ID of the connector to base the app from.
     * 
     */
    @Export(name="connectorId", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> connectorId;

    /**
     * @return ID of the connector to base the app from.
     * 
     */
    public Output<Optional<Integer>> connectorId() {
        return Codegen.optional(this.connectorId);
    }
    /**
     * the date the app was created
     * 
     */
    @Export(name="createdAt", type=String.class, parameters={})
    private Output</* @Nullable */ String> createdAt;

    /**
     * @return the date the app was created
     * 
     */
    public Output<Optional<String>> createdAt() {
        return Codegen.optional(this.createdAt);
    }
    /**
     * Freeform description of the app.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return Freeform description of the app.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * For apps that connect to a OneLogin Access Enforcement Point the following enforcement_point object will be included
     * with the app payload.
     * 
     */
    @Export(name="enforcementPoint", type=AppEnforcementPoint.class, parameters={})
    private Output</* @Nullable */ AppEnforcementPoint> enforcementPoint;

    /**
     * @return For apps that connect to a OneLogin Access Enforcement Point the following enforcement_point object will be included
     * with the app payload.
     * 
     */
    public Output<Optional<AppEnforcementPoint>> enforcementPoint() {
        return Codegen.optional(this.enforcementPoint);
    }
    /**
     * A link to the apps icon url
     * 
     */
    @Export(name="iconUrl", type=String.class, parameters={})
    private Output</* @Nullable */ String> iconUrl;

    /**
     * @return A link to the apps icon url
     * 
     */
    public Output<Optional<String>> iconUrl() {
        return Codegen.optional(this.iconUrl);
    }
    /**
     * The name of the app.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the app.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Freeform notes about the app.
     * 
     */
    @Export(name="notes", type=String.class, parameters={})
    private Output</* @Nullable */ String> notes;

    /**
     * @return Freeform notes about the app.
     * 
     */
    public Output<Optional<String>> notes() {
        return Codegen.optional(this.notes);
    }
    /**
     * The parameters section contains parameterized attributes that have defined at the connector level as well as custom
     * attributes that have been defined specifically for this app. Regardless of how they are defined, all parameters have the
     * following attributes. Each parameter is an object with the key for the object being set as the parameters short name.
     * 
     */
    @Export(name="parameters", type=AppParameters.class, parameters={})
    private Output</* @Nullable */ AppParameters> parameters;

    /**
     * @return The parameters section contains parameterized attributes that have defined at the connector level as well as custom
     * attributes that have been defined specifically for this app. Regardless of how they are defined, all parameters have the
     * following attributes. Each parameter is an object with the key for the object being set as the parameters short name.
     * 
     */
    public Output<Optional<AppParameters>> parameters() {
        return Codegen.optional(this.parameters);
    }
    /**
     * The security policy assigned to the app.
     * 
     */
    @Export(name="policyId", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> policyId;

    /**
     * @return The security policy assigned to the app.
     * 
     */
    public Output<Optional<Integer>> policyId() {
        return Codegen.optional(this.policyId);
    }
    /**
     * Indicates if provisioning is enabled for this app.
     * 
     */
    @Export(name="provisioning", type=AppProvisioning.class, parameters={})
    private Output</* @Nullable */ AppProvisioning> provisioning;

    /**
     * @return Indicates if provisioning is enabled for this app.
     * 
     */
    public Output<Optional<AppProvisioning>> provisioning() {
        return Codegen.optional(this.provisioning);
    }
    /**
     * List of Role IDs that are assigned to the app. On App Create or Update the entire array is replaced with the values
     * provided.
     * 
     */
    @Export(name="roleIds", type=List.class, parameters={Integer.class})
    private Output</* @Nullable */ List<Integer>> roleIds;

    /**
     * @return List of Role IDs that are assigned to the app. On App Create or Update the entire array is replaced with the values
     * provided.
     * 
     */
    public Output<Optional<List<Integer>>> roleIds() {
        return Codegen.optional(this.roleIds);
    }
    /**
     * ID of the OneLogin portal tab that the app is assigned to.
     * 
     */
    @Export(name="tabId", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> tabId;

    /**
     * @return ID of the OneLogin portal tab that the app is assigned to.
     * 
     */
    public Output<Optional<Integer>> tabId() {
        return Codegen.optional(this.tabId);
    }
    /**
     * the date the app was last updated
     * 
     */
    @Export(name="updatedAt", type=String.class, parameters={})
    private Output</* @Nullable */ String> updatedAt;

    /**
     * @return the date the app was last updated
     * 
     */
    public Output<Optional<String>> updatedAt() {
        return Codegen.optional(this.updatedAt);
    }
    /**
     * Indicates if the app is visible in the OneLogin portal.
     * 
     */
    @Export(name="visible", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> visible;

    /**
     * @return Indicates if the app is visible in the OneLogin portal.
     * 
     */
    public Output<Optional<Boolean>> visible() {
        return Codegen.optional(this.visible);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public App(String name) {
        this(name, AppArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public App(String name, @Nullable AppArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public App(String name, @Nullable AppArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("onelogin:index/app:App", name, args == null ? AppArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private App(String name, Output<String> id, @Nullable AppState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("onelogin:index/app:App", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static App get(String name, Output<String> id, @Nullable AppState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new App(name, id, state, options);
    }
}
