// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.onelogin.users.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetUsersUser {
    /**
     * @return directory_id
     * 
     */
    private Integer directoryId;
    /**
     * @return email
     * 
     */
    private String email;
    /**
     * @return external_id
     * 
     */
    private Integer externalId;
    /**
     * @return firstname
     * 
     */
    private String firstname;
    /**
     * @return id
     * 
     */
    private Integer id;
    /**
     * @return last_login
     * 
     */
    private String lastLogin;
    /**
     * @return lastname
     * 
     */
    private String lastname;
    /**
     * @return samaccountname
     * 
     */
    private String samaccountname;
    /**
     * @return username
     * 
     */
    private String username;

    private GetUsersUser() {}
    /**
     * @return directory_id
     * 
     */
    public Integer directoryId() {
        return this.directoryId;
    }
    /**
     * @return email
     * 
     */
    public String email() {
        return this.email;
    }
    /**
     * @return external_id
     * 
     */
    public Integer externalId() {
        return this.externalId;
    }
    /**
     * @return firstname
     * 
     */
    public String firstname() {
        return this.firstname;
    }
    /**
     * @return id
     * 
     */
    public Integer id() {
        return this.id;
    }
    /**
     * @return last_login
     * 
     */
    public String lastLogin() {
        return this.lastLogin;
    }
    /**
     * @return lastname
     * 
     */
    public String lastname() {
        return this.lastname;
    }
    /**
     * @return samaccountname
     * 
     */
    public String samaccountname() {
        return this.samaccountname;
    }
    /**
     * @return username
     * 
     */
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUsersUser defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer directoryId;
        private String email;
        private Integer externalId;
        private String firstname;
        private Integer id;
        private String lastLogin;
        private String lastname;
        private String samaccountname;
        private String username;
        public Builder() {}
        public Builder(GetUsersUser defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.directoryId = defaults.directoryId;
    	      this.email = defaults.email;
    	      this.externalId = defaults.externalId;
    	      this.firstname = defaults.firstname;
    	      this.id = defaults.id;
    	      this.lastLogin = defaults.lastLogin;
    	      this.lastname = defaults.lastname;
    	      this.samaccountname = defaults.samaccountname;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder directoryId(Integer directoryId) {
            if (directoryId == null) {
              throw new MissingRequiredPropertyException("GetUsersUser", "directoryId");
            }
            this.directoryId = directoryId;
            return this;
        }
        @CustomType.Setter
        public Builder email(String email) {
            if (email == null) {
              throw new MissingRequiredPropertyException("GetUsersUser", "email");
            }
            this.email = email;
            return this;
        }
        @CustomType.Setter
        public Builder externalId(Integer externalId) {
            if (externalId == null) {
              throw new MissingRequiredPropertyException("GetUsersUser", "externalId");
            }
            this.externalId = externalId;
            return this;
        }
        @CustomType.Setter
        public Builder firstname(String firstname) {
            if (firstname == null) {
              throw new MissingRequiredPropertyException("GetUsersUser", "firstname");
            }
            this.firstname = firstname;
            return this;
        }
        @CustomType.Setter
        public Builder id(Integer id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetUsersUser", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lastLogin(String lastLogin) {
            if (lastLogin == null) {
              throw new MissingRequiredPropertyException("GetUsersUser", "lastLogin");
            }
            this.lastLogin = lastLogin;
            return this;
        }
        @CustomType.Setter
        public Builder lastname(String lastname) {
            if (lastname == null) {
              throw new MissingRequiredPropertyException("GetUsersUser", "lastname");
            }
            this.lastname = lastname;
            return this;
        }
        @CustomType.Setter
        public Builder samaccountname(String samaccountname) {
            if (samaccountname == null) {
              throw new MissingRequiredPropertyException("GetUsersUser", "samaccountname");
            }
            this.samaccountname = samaccountname;
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            if (username == null) {
              throw new MissingRequiredPropertyException("GetUsersUser", "username");
            }
            this.username = username;
            return this;
        }
        public GetUsersUser build() {
            final var _resultValue = new GetUsersUser();
            _resultValue.directoryId = directoryId;
            _resultValue.email = email;
            _resultValue.externalId = externalId;
            _resultValue.firstname = firstname;
            _resultValue.id = id;
            _resultValue.lastLogin = lastLogin;
            _resultValue.lastname = lastname;
            _resultValue.samaccountname = samaccountname;
            _resultValue.username = username;
            return _resultValue;
        }
    }
}
