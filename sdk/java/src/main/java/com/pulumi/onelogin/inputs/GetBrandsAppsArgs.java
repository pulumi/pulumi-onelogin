// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.onelogin.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.onelogin.inputs.GetBrandsAppsFilterArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetBrandsAppsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetBrandsAppsArgs Empty = new GetBrandsAppsArgs();

    @Import(name="authMethod")
    private @Nullable Output<Integer> authMethod;

    public Optional<Output<Integer>> authMethod() {
        return Optional.ofNullable(this.authMethod);
    }

    @Import(name="authMethodDescription")
    private @Nullable Output<String> authMethodDescription;

    public Optional<Output<String>> authMethodDescription() {
        return Optional.ofNullable(this.authMethodDescription);
    }

    @Import(name="brandsId", required=true)
    private Output<String> brandsId;

    public Output<String> brandsId() {
        return this.brandsId;
    }

    @Import(name="connectorId")
    private @Nullable Output<Integer> connectorId;

    public Optional<Output<Integer>> connectorId() {
        return Optional.ofNullable(this.connectorId);
    }

    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetBrandsAppsFilterArgs>> filters;

    public Optional<Output<List<GetBrandsAppsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="updatedAt")
    private @Nullable Output<String> updatedAt;

    public Optional<Output<String>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    @Import(name="visible")
    private @Nullable Output<Boolean> visible;

    public Optional<Output<Boolean>> visible() {
        return Optional.ofNullable(this.visible);
    }

    private GetBrandsAppsArgs() {}

    private GetBrandsAppsArgs(GetBrandsAppsArgs $) {
        this.authMethod = $.authMethod;
        this.authMethodDescription = $.authMethodDescription;
        this.brandsId = $.brandsId;
        this.connectorId = $.connectorId;
        this.createdAt = $.createdAt;
        this.description = $.description;
        this.filters = $.filters;
        this.name = $.name;
        this.updatedAt = $.updatedAt;
        this.visible = $.visible;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetBrandsAppsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetBrandsAppsArgs $;

        public Builder() {
            $ = new GetBrandsAppsArgs();
        }

        public Builder(GetBrandsAppsArgs defaults) {
            $ = new GetBrandsAppsArgs(Objects.requireNonNull(defaults));
        }

        public Builder authMethod(@Nullable Output<Integer> authMethod) {
            $.authMethod = authMethod;
            return this;
        }

        public Builder authMethod(Integer authMethod) {
            return authMethod(Output.of(authMethod));
        }

        public Builder authMethodDescription(@Nullable Output<String> authMethodDescription) {
            $.authMethodDescription = authMethodDescription;
            return this;
        }

        public Builder authMethodDescription(String authMethodDescription) {
            return authMethodDescription(Output.of(authMethodDescription));
        }

        public Builder brandsId(Output<String> brandsId) {
            $.brandsId = brandsId;
            return this;
        }

        public Builder brandsId(String brandsId) {
            return brandsId(Output.of(brandsId));
        }

        public Builder connectorId(@Nullable Output<Integer> connectorId) {
            $.connectorId = connectorId;
            return this;
        }

        public Builder connectorId(Integer connectorId) {
            return connectorId(Output.of(connectorId));
        }

        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder filters(@Nullable Output<List<GetBrandsAppsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetBrandsAppsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetBrandsAppsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder updatedAt(@Nullable Output<String> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        public Builder updatedAt(String updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        public Builder visible(@Nullable Output<Boolean> visible) {
            $.visible = visible;
            return this;
        }

        public Builder visible(Boolean visible) {
            return visible(Output.of(visible));
        }

        public GetBrandsAppsArgs build() {
            $.brandsId = Objects.requireNonNull($.brandsId, "expected parameter 'brandsId' to be non-null");
            return $;
        }
    }

}
