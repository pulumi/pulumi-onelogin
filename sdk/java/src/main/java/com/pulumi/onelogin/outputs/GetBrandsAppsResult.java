// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.onelogin.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.onelogin.outputs.GetBrandsAppsFilter;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetBrandsAppsResult {
    private Integer authMethod;
    private String authMethodDescription;
    private String brandsId;
    private Integer connectorId;
    private String createdAt;
    private String description;
    private @Nullable List<GetBrandsAppsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    private String updatedAt;
    private Boolean visible;

    private GetBrandsAppsResult() {}
    public Integer authMethod() {
        return this.authMethod;
    }
    public String authMethodDescription() {
        return this.authMethodDescription;
    }
    public String brandsId() {
        return this.brandsId;
    }
    public Integer connectorId() {
        return this.connectorId;
    }
    public String createdAt() {
        return this.createdAt;
    }
    public String description() {
        return this.description;
    }
    public List<GetBrandsAppsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    public String updatedAt() {
        return this.updatedAt;
    }
    public Boolean visible() {
        return this.visible;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBrandsAppsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer authMethod;
        private String authMethodDescription;
        private String brandsId;
        private Integer connectorId;
        private String createdAt;
        private String description;
        private @Nullable List<GetBrandsAppsFilter> filters;
        private String id;
        private String name;
        private String updatedAt;
        private Boolean visible;
        public Builder() {}
        public Builder(GetBrandsAppsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authMethod = defaults.authMethod;
    	      this.authMethodDescription = defaults.authMethodDescription;
    	      this.brandsId = defaults.brandsId;
    	      this.connectorId = defaults.connectorId;
    	      this.createdAt = defaults.createdAt;
    	      this.description = defaults.description;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.updatedAt = defaults.updatedAt;
    	      this.visible = defaults.visible;
        }

        @CustomType.Setter
        public Builder authMethod(Integer authMethod) {
            this.authMethod = Objects.requireNonNull(authMethod);
            return this;
        }
        @CustomType.Setter
        public Builder authMethodDescription(String authMethodDescription) {
            this.authMethodDescription = Objects.requireNonNull(authMethodDescription);
            return this;
        }
        @CustomType.Setter
        public Builder brandsId(String brandsId) {
            this.brandsId = Objects.requireNonNull(brandsId);
            return this;
        }
        @CustomType.Setter
        public Builder connectorId(Integer connectorId) {
            this.connectorId = Objects.requireNonNull(connectorId);
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetBrandsAppsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetBrandsAppsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            this.updatedAt = Objects.requireNonNull(updatedAt);
            return this;
        }
        @CustomType.Setter
        public Builder visible(Boolean visible) {
            this.visible = Objects.requireNonNull(visible);
            return this;
        }
        public GetBrandsAppsResult build() {
            final var o = new GetBrandsAppsResult();
            o.authMethod = authMethod;
            o.authMethodDescription = authMethodDescription;
            o.brandsId = brandsId;
            o.connectorId = connectorId;
            o.createdAt = createdAt;
            o.description = description;
            o.filters = filters;
            o.id = id;
            o.name = name;
            o.updatedAt = updatedAt;
            o.visible = visible;
            return o;
        }
    }
}
