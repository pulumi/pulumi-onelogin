// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.onelogin.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.onelogin.inputs.SmartHookConditionArgs;
import com.pulumi.onelogin.inputs.SmartHookOptionArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SmartHookState extends com.pulumi.resources.ResourceArgs {

    public static final SmartHookState Empty = new SmartHookState();

    @Import(name="conditions")
    private @Nullable Output<List<SmartHookConditionArgs>> conditions;

    public Optional<Output<List<SmartHookConditionArgs>>> conditions() {
        return Optional.ofNullable(this.conditions);
    }

    @Import(name="contextVersion")
    private @Nullable Output<String> contextVersion;

    public Optional<Output<String>> contextVersion() {
        return Optional.ofNullable(this.contextVersion);
    }

    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    @Import(name="disabled")
    private @Nullable Output<Boolean> disabled;

    public Optional<Output<Boolean>> disabled() {
        return Optional.ofNullable(this.disabled);
    }

    @Import(name="envVars")
    private @Nullable Output<List<String>> envVars;

    public Optional<Output<List<String>>> envVars() {
        return Optional.ofNullable(this.envVars);
    }

    @Import(name="function")
    private @Nullable Output<String> function;

    public Optional<Output<String>> function() {
        return Optional.ofNullable(this.function);
    }

    @Import(name="options")
    private @Nullable Output<List<SmartHookOptionArgs>> options;

    public Optional<Output<List<SmartHookOptionArgs>>> options() {
        return Optional.ofNullable(this.options);
    }

    @Import(name="packages")
    private @Nullable Output<Map<String,String>> packages;

    public Optional<Output<Map<String,String>>> packages() {
        return Optional.ofNullable(this.packages);
    }

    @Import(name="retries")
    private @Nullable Output<Integer> retries;

    public Optional<Output<Integer>> retries() {
        return Optional.ofNullable(this.retries);
    }

    @Import(name="runtime")
    private @Nullable Output<String> runtime;

    public Optional<Output<String>> runtime() {
        return Optional.ofNullable(this.runtime);
    }

    @Import(name="status")
    private @Nullable Output<String> status;

    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="timeout")
    private @Nullable Output<Integer> timeout;

    public Optional<Output<Integer>> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    @Import(name="updatedAt")
    private @Nullable Output<String> updatedAt;

    public Optional<Output<String>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    private SmartHookState() {}

    private SmartHookState(SmartHookState $) {
        this.conditions = $.conditions;
        this.contextVersion = $.contextVersion;
        this.createdAt = $.createdAt;
        this.disabled = $.disabled;
        this.envVars = $.envVars;
        this.function = $.function;
        this.options = $.options;
        this.packages = $.packages;
        this.retries = $.retries;
        this.runtime = $.runtime;
        this.status = $.status;
        this.timeout = $.timeout;
        this.type = $.type;
        this.updatedAt = $.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SmartHookState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SmartHookState $;

        public Builder() {
            $ = new SmartHookState();
        }

        public Builder(SmartHookState defaults) {
            $ = new SmartHookState(Objects.requireNonNull(defaults));
        }

        public Builder conditions(@Nullable Output<List<SmartHookConditionArgs>> conditions) {
            $.conditions = conditions;
            return this;
        }

        public Builder conditions(List<SmartHookConditionArgs> conditions) {
            return conditions(Output.of(conditions));
        }

        public Builder conditions(SmartHookConditionArgs... conditions) {
            return conditions(List.of(conditions));
        }

        public Builder contextVersion(@Nullable Output<String> contextVersion) {
            $.contextVersion = contextVersion;
            return this;
        }

        public Builder contextVersion(String contextVersion) {
            return contextVersion(Output.of(contextVersion));
        }

        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        public Builder disabled(@Nullable Output<Boolean> disabled) {
            $.disabled = disabled;
            return this;
        }

        public Builder disabled(Boolean disabled) {
            return disabled(Output.of(disabled));
        }

        public Builder envVars(@Nullable Output<List<String>> envVars) {
            $.envVars = envVars;
            return this;
        }

        public Builder envVars(List<String> envVars) {
            return envVars(Output.of(envVars));
        }

        public Builder envVars(String... envVars) {
            return envVars(List.of(envVars));
        }

        public Builder function(@Nullable Output<String> function) {
            $.function = function;
            return this;
        }

        public Builder function(String function) {
            return function(Output.of(function));
        }

        public Builder options(@Nullable Output<List<SmartHookOptionArgs>> options) {
            $.options = options;
            return this;
        }

        public Builder options(List<SmartHookOptionArgs> options) {
            return options(Output.of(options));
        }

        public Builder options(SmartHookOptionArgs... options) {
            return options(List.of(options));
        }

        public Builder packages(@Nullable Output<Map<String,String>> packages) {
            $.packages = packages;
            return this;
        }

        public Builder packages(Map<String,String> packages) {
            return packages(Output.of(packages));
        }

        public Builder retries(@Nullable Output<Integer> retries) {
            $.retries = retries;
            return this;
        }

        public Builder retries(Integer retries) {
            return retries(Output.of(retries));
        }

        public Builder runtime(@Nullable Output<String> runtime) {
            $.runtime = runtime;
            return this;
        }

        public Builder runtime(String runtime) {
            return runtime(Output.of(runtime));
        }

        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder timeout(@Nullable Output<Integer> timeout) {
            $.timeout = timeout;
            return this;
        }

        public Builder timeout(Integer timeout) {
            return timeout(Output.of(timeout));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder updatedAt(@Nullable Output<String> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        public Builder updatedAt(String updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        public SmartHookState build() {
            return $;
        }
    }

}
