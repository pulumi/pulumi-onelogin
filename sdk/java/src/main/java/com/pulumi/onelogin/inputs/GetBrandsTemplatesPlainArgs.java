// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.onelogin.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.onelogin.inputs.GetBrandsTemplatesFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetBrandsTemplatesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetBrandsTemplatesPlainArgs Empty = new GetBrandsTemplatesPlainArgs();

    @Import(name="brandsId", required=true)
    private String brandsId;

    public String brandsId() {
        return this.brandsId;
    }

    @Import(name="enabled")
    private @Nullable Boolean enabled;

    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    @Import(name="filters")
    private @Nullable List<GetBrandsTemplatesFilter> filters;

    public Optional<List<GetBrandsTemplatesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    private GetBrandsTemplatesPlainArgs() {}

    private GetBrandsTemplatesPlainArgs(GetBrandsTemplatesPlainArgs $) {
        this.brandsId = $.brandsId;
        this.enabled = $.enabled;
        this.filters = $.filters;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetBrandsTemplatesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetBrandsTemplatesPlainArgs $;

        public Builder() {
            $ = new GetBrandsTemplatesPlainArgs();
        }

        public Builder(GetBrandsTemplatesPlainArgs defaults) {
            $ = new GetBrandsTemplatesPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder brandsId(String brandsId) {
            $.brandsId = brandsId;
            return this;
        }

        public Builder enabled(@Nullable Boolean enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder filters(@Nullable List<GetBrandsTemplatesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetBrandsTemplatesFilter... filters) {
            return filters(List.of(filters));
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public GetBrandsTemplatesPlainArgs build() {
            $.brandsId = Objects.requireNonNull($.brandsId, "expected parameter 'brandsId' to be non-null");
            return $;
        }
    }

}
