// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.onelogin.users.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.onelogin.users.inputs.GetDevicesFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDevicesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDevicesPlainArgs Empty = new GetDevicesPlainArgs();

    @Import(name="authFactorName")
    private @Nullable String authFactorName;

    public Optional<String> authFactorName() {
        return Optional.ofNullable(this.authFactorName);
    }

    @Import(name="default")
    private @Nullable Boolean default_;

    public Optional<Boolean> default_() {
        return Optional.ofNullable(this.default_);
    }

    @Import(name="deviceId")
    private @Nullable String deviceId;

    public Optional<String> deviceId() {
        return Optional.ofNullable(this.deviceId);
    }

    @Import(name="filters")
    private @Nullable List<GetDevicesFilter> filters;

    public Optional<List<GetDevicesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    @Import(name="typeDisplayName")
    private @Nullable String typeDisplayName;

    public Optional<String> typeDisplayName() {
        return Optional.ofNullable(this.typeDisplayName);
    }

    @Import(name="userDisplayName")
    private @Nullable String userDisplayName;

    public Optional<String> userDisplayName() {
        return Optional.ofNullable(this.userDisplayName);
    }

    @Import(name="usersId", required=true)
    private String usersId;

    public String usersId() {
        return this.usersId;
    }

    private GetDevicesPlainArgs() {}

    private GetDevicesPlainArgs(GetDevicesPlainArgs $) {
        this.authFactorName = $.authFactorName;
        this.default_ = $.default_;
        this.deviceId = $.deviceId;
        this.filters = $.filters;
        this.typeDisplayName = $.typeDisplayName;
        this.userDisplayName = $.userDisplayName;
        this.usersId = $.usersId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDevicesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDevicesPlainArgs $;

        public Builder() {
            $ = new GetDevicesPlainArgs();
        }

        public Builder(GetDevicesPlainArgs defaults) {
            $ = new GetDevicesPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder authFactorName(@Nullable String authFactorName) {
            $.authFactorName = authFactorName;
            return this;
        }

        public Builder default_(@Nullable Boolean default_) {
            $.default_ = default_;
            return this;
        }

        public Builder deviceId(@Nullable String deviceId) {
            $.deviceId = deviceId;
            return this;
        }

        public Builder filters(@Nullable List<GetDevicesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetDevicesFilter... filters) {
            return filters(List.of(filters));
        }

        public Builder typeDisplayName(@Nullable String typeDisplayName) {
            $.typeDisplayName = typeDisplayName;
            return this;
        }

        public Builder userDisplayName(@Nullable String userDisplayName) {
            $.userDisplayName = userDisplayName;
            return this;
        }

        public Builder usersId(String usersId) {
            $.usersId = usersId;
            return this;
        }

        public GetDevicesPlainArgs build() {
            $.usersId = Objects.requireNonNull($.usersId, "expected parameter 'usersId' to be non-null");
            return $;
        }
    }

}
