// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.onelogin.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppEnforcementPointResourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppEnforcementPointResourceArgs Empty = new AppEnforcementPointResourceArgs();

    /**
     * required if permission == &#34;conditions&#34;
     * 
     */
    @Import(name="conditions")
    private @Nullable Output<String> conditions;

    /**
     * @return required if permission == &#34;conditions&#34;
     * 
     */
    public Optional<Output<String>> conditions() {
        return Optional.ofNullable(this.conditions);
    }

    @Import(name="isPathRegex")
    private @Nullable Output<Boolean> isPathRegex;

    public Optional<Output<Boolean>> isPathRegex() {
        return Optional.ofNullable(this.isPathRegex);
    }

    @Import(name="path")
    private @Nullable Output<String> path;

    public Optional<Output<String>> path() {
        return Optional.ofNullable(this.path);
    }

    @Import(name="permission")
    private @Nullable Output<String> permission;

    public Optional<Output<String>> permission() {
        return Optional.ofNullable(this.permission);
    }

    @Import(name="requireAuth")
    private @Nullable Output<Boolean> requireAuth;

    public Optional<Output<Boolean>> requireAuth() {
        return Optional.ofNullable(this.requireAuth);
    }

    private AppEnforcementPointResourceArgs() {}

    private AppEnforcementPointResourceArgs(AppEnforcementPointResourceArgs $) {
        this.conditions = $.conditions;
        this.isPathRegex = $.isPathRegex;
        this.path = $.path;
        this.permission = $.permission;
        this.requireAuth = $.requireAuth;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppEnforcementPointResourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppEnforcementPointResourceArgs $;

        public Builder() {
            $ = new AppEnforcementPointResourceArgs();
        }

        public Builder(AppEnforcementPointResourceArgs defaults) {
            $ = new AppEnforcementPointResourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param conditions required if permission == &#34;conditions&#34;
         * 
         * @return builder
         * 
         */
        public Builder conditions(@Nullable Output<String> conditions) {
            $.conditions = conditions;
            return this;
        }

        /**
         * @param conditions required if permission == &#34;conditions&#34;
         * 
         * @return builder
         * 
         */
        public Builder conditions(String conditions) {
            return conditions(Output.of(conditions));
        }

        public Builder isPathRegex(@Nullable Output<Boolean> isPathRegex) {
            $.isPathRegex = isPathRegex;
            return this;
        }

        public Builder isPathRegex(Boolean isPathRegex) {
            return isPathRegex(Output.of(isPathRegex));
        }

        public Builder path(@Nullable Output<String> path) {
            $.path = path;
            return this;
        }

        public Builder path(String path) {
            return path(Output.of(path));
        }

        public Builder permission(@Nullable Output<String> permission) {
            $.permission = permission;
            return this;
        }

        public Builder permission(String permission) {
            return permission(Output.of(permission));
        }

        public Builder requireAuth(@Nullable Output<Boolean> requireAuth) {
            $.requireAuth = requireAuth;
            return this;
        }

        public Builder requireAuth(Boolean requireAuth) {
            return requireAuth(Output.of(requireAuth));
        }

        public AppEnforcementPointResourceArgs build() {
            return $;
        }
    }

}
