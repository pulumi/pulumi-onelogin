// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.onelogin.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.onelogin.inputs.AuthServersConfigurationArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuthServersState extends com.pulumi.resources.ResourceArgs {

    public static final AuthServersState Empty = new AuthServersState();

    /**
     * Authorization server configuration
     * 
     */
    @Import(name="configuration")
    private @Nullable Output<AuthServersConfigurationArgs> configuration;

    /**
     * @return Authorization server configuration
     * 
     */
    public Optional<Output<AuthServersConfigurationArgs>> configuration() {
        return Optional.ofNullable(this.configuration);
    }

    /**
     * Description of what the API does.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of what the API does.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Name of the API.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the API.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private AuthServersState() {}

    private AuthServersState(AuthServersState $) {
        this.configuration = $.configuration;
        this.description = $.description;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuthServersState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuthServersState $;

        public Builder() {
            $ = new AuthServersState();
        }

        public Builder(AuthServersState defaults) {
            $ = new AuthServersState(Objects.requireNonNull(defaults));
        }

        /**
         * @param configuration Authorization server configuration
         * 
         * @return builder
         * 
         */
        public Builder configuration(@Nullable Output<AuthServersConfigurationArgs> configuration) {
            $.configuration = configuration;
            return this;
        }

        /**
         * @param configuration Authorization server configuration
         * 
         * @return builder
         * 
         */
        public Builder configuration(AuthServersConfigurationArgs configuration) {
            return configuration(Output.of(configuration));
        }

        /**
         * @param description Description of what the API does.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of what the API does.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name Name of the API.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the API.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public AuthServersState build() {
            return $;
        }
    }

}
