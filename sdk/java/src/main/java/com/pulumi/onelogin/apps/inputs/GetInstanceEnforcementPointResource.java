// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.onelogin.apps.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class GetInstanceEnforcementPointResource extends com.pulumi.resources.InvokeArgs {

    public static final GetInstanceEnforcementPointResource Empty = new GetInstanceEnforcementPointResource();

    /**
     * required if permission == &#34;conditions&#34;
     * 
     */
    @Import(name="conditions", required=true)
    private String conditions;

    /**
     * @return required if permission == &#34;conditions&#34;
     * 
     */
    public String conditions() {
        return this.conditions;
    }

    @Import(name="isPathRegex", required=true)
    private Boolean isPathRegex;

    public Boolean isPathRegex() {
        return this.isPathRegex;
    }

    @Import(name="path", required=true)
    private String path;

    public String path() {
        return this.path;
    }

    @Import(name="permission", required=true)
    private String permission;

    public String permission() {
        return this.permission;
    }

    @Import(name="requireAuth", required=true)
    private Boolean requireAuth;

    public Boolean requireAuth() {
        return this.requireAuth;
    }

    private GetInstanceEnforcementPointResource() {}

    private GetInstanceEnforcementPointResource(GetInstanceEnforcementPointResource $) {
        this.conditions = $.conditions;
        this.isPathRegex = $.isPathRegex;
        this.path = $.path;
        this.permission = $.permission;
        this.requireAuth = $.requireAuth;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInstanceEnforcementPointResource defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInstanceEnforcementPointResource $;

        public Builder() {
            $ = new GetInstanceEnforcementPointResource();
        }

        public Builder(GetInstanceEnforcementPointResource defaults) {
            $ = new GetInstanceEnforcementPointResource(Objects.requireNonNull(defaults));
        }

        /**
         * @param conditions required if permission == &#34;conditions&#34;
         * 
         * @return builder
         * 
         */
        public Builder conditions(String conditions) {
            $.conditions = conditions;
            return this;
        }

        public Builder isPathRegex(Boolean isPathRegex) {
            $.isPathRegex = isPathRegex;
            return this;
        }

        public Builder path(String path) {
            $.path = path;
            return this;
        }

        public Builder permission(String permission) {
            $.permission = permission;
            return this;
        }

        public Builder requireAuth(Boolean requireAuth) {
            $.requireAuth = requireAuth;
            return this;
        }

        public GetInstanceEnforcementPointResource build() {
            if ($.conditions == null) {
                throw new MissingRequiredPropertyException("GetInstanceEnforcementPointResource", "conditions");
            }
            if ($.isPathRegex == null) {
                throw new MissingRequiredPropertyException("GetInstanceEnforcementPointResource", "isPathRegex");
            }
            if ($.path == null) {
                throw new MissingRequiredPropertyException("GetInstanceEnforcementPointResource", "path");
            }
            if ($.permission == null) {
                throw new MissingRequiredPropertyException("GetInstanceEnforcementPointResource", "permission");
            }
            if ($.requireAuth == null) {
                throw new MissingRequiredPropertyException("GetInstanceEnforcementPointResource", "requireAuth");
            }
            return $;
        }
    }

}
