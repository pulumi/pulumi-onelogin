// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.onelogin.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.onelogin.outputs.GetAppsSsoCertificate;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAppsSso {
    /**
     * @return App Name.	This is only returned after Creating a SAML App.
     * 
     */
    private String acsUrl;
    /**
     * @return The certificate used for signing.	This is only returned after Creating a SAML App.
     * 
     */
    private GetAppsSsoCertificate certificate;
    /**
     * @return The OpenId Connect Client Id. Note that client_secret is only returned after Creating an OIDC App.
     * 
     */
    private String clientId;
    /**
     * @return OpenId Connet Client Secret
     * 
     */
    private String clientSecret;
    /**
     * @return Issuer of app.	This is only returned after Creating a SAML App.
     * 
     */
    private String issuer;
    /**
     * @return ID of the apps underlying connector.	This is only returned after Creating a SAML App.
     * 
     */
    private String metadataUrl;

    private GetAppsSso() {}
    /**
     * @return App Name.	This is only returned after Creating a SAML App.
     * 
     */
    public String acsUrl() {
        return this.acsUrl;
    }
    /**
     * @return The certificate used for signing.	This is only returned after Creating a SAML App.
     * 
     */
    public GetAppsSsoCertificate certificate() {
        return this.certificate;
    }
    /**
     * @return The OpenId Connect Client Id. Note that client_secret is only returned after Creating an OIDC App.
     * 
     */
    public String clientId() {
        return this.clientId;
    }
    /**
     * @return OpenId Connet Client Secret
     * 
     */
    public String clientSecret() {
        return this.clientSecret;
    }
    /**
     * @return Issuer of app.	This is only returned after Creating a SAML App.
     * 
     */
    public String issuer() {
        return this.issuer;
    }
    /**
     * @return ID of the apps underlying connector.	This is only returned after Creating a SAML App.
     * 
     */
    public String metadataUrl() {
        return this.metadataUrl;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAppsSso defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String acsUrl;
        private GetAppsSsoCertificate certificate;
        private String clientId;
        private String clientSecret;
        private String issuer;
        private String metadataUrl;
        public Builder() {}
        public Builder(GetAppsSso defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acsUrl = defaults.acsUrl;
    	      this.certificate = defaults.certificate;
    	      this.clientId = defaults.clientId;
    	      this.clientSecret = defaults.clientSecret;
    	      this.issuer = defaults.issuer;
    	      this.metadataUrl = defaults.metadataUrl;
        }

        @CustomType.Setter
        public Builder acsUrl(String acsUrl) {
            if (acsUrl == null) {
              throw new MissingRequiredPropertyException("GetAppsSso", "acsUrl");
            }
            this.acsUrl = acsUrl;
            return this;
        }
        @CustomType.Setter
        public Builder certificate(GetAppsSsoCertificate certificate) {
            if (certificate == null) {
              throw new MissingRequiredPropertyException("GetAppsSso", "certificate");
            }
            this.certificate = certificate;
            return this;
        }
        @CustomType.Setter
        public Builder clientId(String clientId) {
            if (clientId == null) {
              throw new MissingRequiredPropertyException("GetAppsSso", "clientId");
            }
            this.clientId = clientId;
            return this;
        }
        @CustomType.Setter
        public Builder clientSecret(String clientSecret) {
            if (clientSecret == null) {
              throw new MissingRequiredPropertyException("GetAppsSso", "clientSecret");
            }
            this.clientSecret = clientSecret;
            return this;
        }
        @CustomType.Setter
        public Builder issuer(String issuer) {
            if (issuer == null) {
              throw new MissingRequiredPropertyException("GetAppsSso", "issuer");
            }
            this.issuer = issuer;
            return this;
        }
        @CustomType.Setter
        public Builder metadataUrl(String metadataUrl) {
            if (metadataUrl == null) {
              throw new MissingRequiredPropertyException("GetAppsSso", "metadataUrl");
            }
            this.metadataUrl = metadataUrl;
            return this;
        }
        public GetAppsSso build() {
            final var _resultValue = new GetAppsSso();
            _resultValue.acsUrl = acsUrl;
            _resultValue.certificate = certificate;
            _resultValue.clientId = clientId;
            _resultValue.clientSecret = clientSecret;
            _resultValue.issuer = issuer;
            _resultValue.metadataUrl = metadataUrl;
            return _resultValue;
        }
    }
}
