// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.onelogin.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class GetAppsParametersGroupsArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetAppsParametersGroupsArgs Empty = new GetAppsParametersGroupsArgs();

    @Import(name="attributesTransformations", required=true)
    private Output<String> attributesTransformations;

    public Output<String> attributesTransformations() {
        return this.attributesTransformations;
    }

    @Import(name="defaultValues", required=true)
    private Output<String> defaultValues;

    public Output<String> defaultValues() {
        return this.defaultValues;
    }

    @Import(name="id", required=true)
    private Output<Integer> id;

    public Output<Integer> id() {
        return this.id;
    }

    @Import(name="label", required=true)
    private Output<String> label;

    public Output<String> label() {
        return this.label;
    }

    @Import(name="provisionedEntitlements", required=true)
    private Output<Boolean> provisionedEntitlements;

    public Output<Boolean> provisionedEntitlements() {
        return this.provisionedEntitlements;
    }

    @Import(name="skipIfBlank", required=true)
    private Output<Boolean> skipIfBlank;

    public Output<Boolean> skipIfBlank() {
        return this.skipIfBlank;
    }

    @Import(name="userAttributeMacros", required=true)
    private Output<String> userAttributeMacros;

    public Output<String> userAttributeMacros() {
        return this.userAttributeMacros;
    }

    @Import(name="userAttributeMappings", required=true)
    private Output<String> userAttributeMappings;

    public Output<String> userAttributeMappings() {
        return this.userAttributeMappings;
    }

    @Import(name="values", required=true)
    private Output<String> values;

    public Output<String> values() {
        return this.values;
    }

    private GetAppsParametersGroupsArgs() {}

    private GetAppsParametersGroupsArgs(GetAppsParametersGroupsArgs $) {
        this.attributesTransformations = $.attributesTransformations;
        this.defaultValues = $.defaultValues;
        this.id = $.id;
        this.label = $.label;
        this.provisionedEntitlements = $.provisionedEntitlements;
        this.skipIfBlank = $.skipIfBlank;
        this.userAttributeMacros = $.userAttributeMacros;
        this.userAttributeMappings = $.userAttributeMappings;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAppsParametersGroupsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAppsParametersGroupsArgs $;

        public Builder() {
            $ = new GetAppsParametersGroupsArgs();
        }

        public Builder(GetAppsParametersGroupsArgs defaults) {
            $ = new GetAppsParametersGroupsArgs(Objects.requireNonNull(defaults));
        }

        public Builder attributesTransformations(Output<String> attributesTransformations) {
            $.attributesTransformations = attributesTransformations;
            return this;
        }

        public Builder attributesTransformations(String attributesTransformations) {
            return attributesTransformations(Output.of(attributesTransformations));
        }

        public Builder defaultValues(Output<String> defaultValues) {
            $.defaultValues = defaultValues;
            return this;
        }

        public Builder defaultValues(String defaultValues) {
            return defaultValues(Output.of(defaultValues));
        }

        public Builder id(Output<Integer> id) {
            $.id = id;
            return this;
        }

        public Builder id(Integer id) {
            return id(Output.of(id));
        }

        public Builder label(Output<String> label) {
            $.label = label;
            return this;
        }

        public Builder label(String label) {
            return label(Output.of(label));
        }

        public Builder provisionedEntitlements(Output<Boolean> provisionedEntitlements) {
            $.provisionedEntitlements = provisionedEntitlements;
            return this;
        }

        public Builder provisionedEntitlements(Boolean provisionedEntitlements) {
            return provisionedEntitlements(Output.of(provisionedEntitlements));
        }

        public Builder skipIfBlank(Output<Boolean> skipIfBlank) {
            $.skipIfBlank = skipIfBlank;
            return this;
        }

        public Builder skipIfBlank(Boolean skipIfBlank) {
            return skipIfBlank(Output.of(skipIfBlank));
        }

        public Builder userAttributeMacros(Output<String> userAttributeMacros) {
            $.userAttributeMacros = userAttributeMacros;
            return this;
        }

        public Builder userAttributeMacros(String userAttributeMacros) {
            return userAttributeMacros(Output.of(userAttributeMacros));
        }

        public Builder userAttributeMappings(Output<String> userAttributeMappings) {
            $.userAttributeMappings = userAttributeMappings;
            return this;
        }

        public Builder userAttributeMappings(String userAttributeMappings) {
            return userAttributeMappings(Output.of(userAttributeMappings));
        }

        public Builder values(Output<String> values) {
            $.values = values;
            return this;
        }

        public Builder values(String values) {
            return values(Output.of(values));
        }

        public GetAppsParametersGroupsArgs build() {
            if ($.attributesTransformations == null) {
                throw new MissingRequiredPropertyException("GetAppsParametersGroupsArgs", "attributesTransformations");
            }
            if ($.defaultValues == null) {
                throw new MissingRequiredPropertyException("GetAppsParametersGroupsArgs", "defaultValues");
            }
            if ($.id == null) {
                throw new MissingRequiredPropertyException("GetAppsParametersGroupsArgs", "id");
            }
            if ($.label == null) {
                throw new MissingRequiredPropertyException("GetAppsParametersGroupsArgs", "label");
            }
            if ($.provisionedEntitlements == null) {
                throw new MissingRequiredPropertyException("GetAppsParametersGroupsArgs", "provisionedEntitlements");
            }
            if ($.skipIfBlank == null) {
                throw new MissingRequiredPropertyException("GetAppsParametersGroupsArgs", "skipIfBlank");
            }
            if ($.userAttributeMacros == null) {
                throw new MissingRequiredPropertyException("GetAppsParametersGroupsArgs", "userAttributeMacros");
            }
            if ($.userAttributeMappings == null) {
                throw new MissingRequiredPropertyException("GetAppsParametersGroupsArgs", "userAttributeMappings");
            }
            if ($.values == null) {
                throw new MissingRequiredPropertyException("GetAppsParametersGroupsArgs", "values");
            }
            return $;
        }
    }

}
