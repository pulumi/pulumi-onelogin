// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.onelogin.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.onelogin.inputs.AppRulesActionArgs;
import com.pulumi.onelogin.inputs.AppRulesConditionArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppRulesState extends com.pulumi.resources.ResourceArgs {

    public static final AppRulesState Empty = new AppRulesState();

    @Import(name="actions")
    private @Nullable Output<List<AppRulesActionArgs>> actions;

    public Optional<Output<List<AppRulesActionArgs>>> actions() {
        return Optional.ofNullable(this.actions);
    }

    @Import(name="appId")
    private @Nullable Output<String> appId;

    public Optional<Output<String>> appId() {
        return Optional.ofNullable(this.appId);
    }

    @Import(name="conditions")
    private @Nullable Output<List<AppRulesConditionArgs>> conditions;

    public Optional<Output<List<AppRulesConditionArgs>>> conditions() {
        return Optional.ofNullable(this.conditions);
    }

    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    @Import(name="match")
    private @Nullable Output<String> match;

    public Optional<Output<String>> match() {
        return Optional.ofNullable(this.match);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="position")
    private @Nullable Output<Integer> position;

    public Optional<Output<Integer>> position() {
        return Optional.ofNullable(this.position);
    }

    private AppRulesState() {}

    private AppRulesState(AppRulesState $) {
        this.actions = $.actions;
        this.appId = $.appId;
        this.conditions = $.conditions;
        this.enabled = $.enabled;
        this.match = $.match;
        this.name = $.name;
        this.position = $.position;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppRulesState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppRulesState $;

        public Builder() {
            $ = new AppRulesState();
        }

        public Builder(AppRulesState defaults) {
            $ = new AppRulesState(Objects.requireNonNull(defaults));
        }

        public Builder actions(@Nullable Output<List<AppRulesActionArgs>> actions) {
            $.actions = actions;
            return this;
        }

        public Builder actions(List<AppRulesActionArgs> actions) {
            return actions(Output.of(actions));
        }

        public Builder actions(AppRulesActionArgs... actions) {
            return actions(List.of(actions));
        }

        public Builder appId(@Nullable Output<String> appId) {
            $.appId = appId;
            return this;
        }

        public Builder appId(String appId) {
            return appId(Output.of(appId));
        }

        public Builder conditions(@Nullable Output<List<AppRulesConditionArgs>> conditions) {
            $.conditions = conditions;
            return this;
        }

        public Builder conditions(List<AppRulesConditionArgs> conditions) {
            return conditions(Output.of(conditions));
        }

        public Builder conditions(AppRulesConditionArgs... conditions) {
            return conditions(List.of(conditions));
        }

        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder match(@Nullable Output<String> match) {
            $.match = match;
            return this;
        }

        public Builder match(String match) {
            return match(Output.of(match));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder position(@Nullable Output<Integer> position) {
            $.position = position;
            return this;
        }

        public Builder position(Integer position) {
            return position(Output.of(position));
        }

        public AppRulesState build() {
            return $;
        }
    }

}
