// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.onelogin.apps.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.onelogin.apps.inputs.GetInstanceEnforcementPointResource;
import com.pulumi.onelogin.apps.inputs.GetInstanceEnforcementPointSessionExpiryFixed;
import com.pulumi.onelogin.apps.inputs.GetInstanceEnforcementPointSessionExpiryInactivity;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetInstanceEnforcementPoint extends com.pulumi.resources.InvokeArgs {

    public static final GetInstanceEnforcementPoint Empty = new GetInstanceEnforcementPoint();

    @Import(name="caseSensitive", required=true)
    private Boolean caseSensitive;

    public Boolean caseSensitive() {
        return this.caseSensitive;
    }

    @Import(name="conditions", required=true)
    private String conditions;

    public String conditions() {
        return this.conditions;
    }

    @Import(name="contextRoot", required=true)
    private String contextRoot;

    public String contextRoot() {
        return this.contextRoot;
    }

    @Import(name="landingPage", required=true)
    private String landingPage;

    public String landingPage() {
        return this.landingPage;
    }

    @Import(name="permissions", required=true)
    private String permissions;

    public String permissions() {
        return this.permissions;
    }

    @Import(name="requireSitewideAuthentication", required=true)
    private Boolean requireSitewideAuthentication;

    public Boolean requireSitewideAuthentication() {
        return this.requireSitewideAuthentication;
    }

    @Import(name="resources", required=true)
    private List<GetInstanceEnforcementPointResource> resources;

    public List<GetInstanceEnforcementPointResource> resources() {
        return this.resources;
    }

    @Import(name="sessionExpiryFixed", required=true)
    private GetInstanceEnforcementPointSessionExpiryFixed sessionExpiryFixed;

    public GetInstanceEnforcementPointSessionExpiryFixed sessionExpiryFixed() {
        return this.sessionExpiryFixed;
    }

    @Import(name="sessionExpiryInactivity", required=true)
    private GetInstanceEnforcementPointSessionExpiryInactivity sessionExpiryInactivity;

    public GetInstanceEnforcementPointSessionExpiryInactivity sessionExpiryInactivity() {
        return this.sessionExpiryInactivity;
    }

    @Import(name="target", required=true)
    private String target;

    public String target() {
        return this.target;
    }

    @Import(name="token", required=true)
    private String token;

    public String token() {
        return this.token;
    }

    @Import(name="useTargetHostHeader", required=true)
    private Boolean useTargetHostHeader;

    public Boolean useTargetHostHeader() {
        return this.useTargetHostHeader;
    }

    @Import(name="vhost", required=true)
    private String vhost;

    public String vhost() {
        return this.vhost;
    }

    private GetInstanceEnforcementPoint() {}

    private GetInstanceEnforcementPoint(GetInstanceEnforcementPoint $) {
        this.caseSensitive = $.caseSensitive;
        this.conditions = $.conditions;
        this.contextRoot = $.contextRoot;
        this.landingPage = $.landingPage;
        this.permissions = $.permissions;
        this.requireSitewideAuthentication = $.requireSitewideAuthentication;
        this.resources = $.resources;
        this.sessionExpiryFixed = $.sessionExpiryFixed;
        this.sessionExpiryInactivity = $.sessionExpiryInactivity;
        this.target = $.target;
        this.token = $.token;
        this.useTargetHostHeader = $.useTargetHostHeader;
        this.vhost = $.vhost;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInstanceEnforcementPoint defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInstanceEnforcementPoint $;

        public Builder() {
            $ = new GetInstanceEnforcementPoint();
        }

        public Builder(GetInstanceEnforcementPoint defaults) {
            $ = new GetInstanceEnforcementPoint(Objects.requireNonNull(defaults));
        }

        public Builder caseSensitive(Boolean caseSensitive) {
            $.caseSensitive = caseSensitive;
            return this;
        }

        public Builder conditions(String conditions) {
            $.conditions = conditions;
            return this;
        }

        public Builder contextRoot(String contextRoot) {
            $.contextRoot = contextRoot;
            return this;
        }

        public Builder landingPage(String landingPage) {
            $.landingPage = landingPage;
            return this;
        }

        public Builder permissions(String permissions) {
            $.permissions = permissions;
            return this;
        }

        public Builder requireSitewideAuthentication(Boolean requireSitewideAuthentication) {
            $.requireSitewideAuthentication = requireSitewideAuthentication;
            return this;
        }

        public Builder resources(List<GetInstanceEnforcementPointResource> resources) {
            $.resources = resources;
            return this;
        }

        public Builder resources(GetInstanceEnforcementPointResource... resources) {
            return resources(List.of(resources));
        }

        public Builder sessionExpiryFixed(GetInstanceEnforcementPointSessionExpiryFixed sessionExpiryFixed) {
            $.sessionExpiryFixed = sessionExpiryFixed;
            return this;
        }

        public Builder sessionExpiryInactivity(GetInstanceEnforcementPointSessionExpiryInactivity sessionExpiryInactivity) {
            $.sessionExpiryInactivity = sessionExpiryInactivity;
            return this;
        }

        public Builder target(String target) {
            $.target = target;
            return this;
        }

        public Builder token(String token) {
            $.token = token;
            return this;
        }

        public Builder useTargetHostHeader(Boolean useTargetHostHeader) {
            $.useTargetHostHeader = useTargetHostHeader;
            return this;
        }

        public Builder vhost(String vhost) {
            $.vhost = vhost;
            return this;
        }

        public GetInstanceEnforcementPoint build() {
            $.caseSensitive = Objects.requireNonNull($.caseSensitive, "expected parameter 'caseSensitive' to be non-null");
            $.conditions = Objects.requireNonNull($.conditions, "expected parameter 'conditions' to be non-null");
            $.contextRoot = Objects.requireNonNull($.contextRoot, "expected parameter 'contextRoot' to be non-null");
            $.landingPage = Objects.requireNonNull($.landingPage, "expected parameter 'landingPage' to be non-null");
            $.permissions = Objects.requireNonNull($.permissions, "expected parameter 'permissions' to be non-null");
            $.requireSitewideAuthentication = Objects.requireNonNull($.requireSitewideAuthentication, "expected parameter 'requireSitewideAuthentication' to be non-null");
            $.resources = Objects.requireNonNull($.resources, "expected parameter 'resources' to be non-null");
            $.sessionExpiryFixed = Objects.requireNonNull($.sessionExpiryFixed, "expected parameter 'sessionExpiryFixed' to be non-null");
            $.sessionExpiryInactivity = Objects.requireNonNull($.sessionExpiryInactivity, "expected parameter 'sessionExpiryInactivity' to be non-null");
            $.target = Objects.requireNonNull($.target, "expected parameter 'target' to be non-null");
            $.token = Objects.requireNonNull($.token, "expected parameter 'token' to be non-null");
            $.useTargetHostHeader = Objects.requireNonNull($.useTargetHostHeader, "expected parameter 'useTargetHostHeader' to be non-null");
            $.vhost = Objects.requireNonNull($.vhost, "expected parameter 'vhost' to be non-null");
            return $;
        }
    }

}
