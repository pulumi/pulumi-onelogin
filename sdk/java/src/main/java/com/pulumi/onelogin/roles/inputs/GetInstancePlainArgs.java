// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.onelogin.roles.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetInstancePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetInstancePlainArgs Empty = new GetInstancePlainArgs();

    @Import(name="admins")
    private @Nullable List<Integer> admins;

    public Optional<List<Integer>> admins() {
        return Optional.ofNullable(this.admins);
    }

    @Import(name="apps")
    private @Nullable List<Integer> apps;

    public Optional<List<Integer>> apps() {
        return Optional.ofNullable(this.apps);
    }

    @Import(name="id", required=true)
    private String id;

    public String id() {
        return this.id;
    }

    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="users")
    private @Nullable List<Integer> users;

    public Optional<List<Integer>> users() {
        return Optional.ofNullable(this.users);
    }

    private GetInstancePlainArgs() {}

    private GetInstancePlainArgs(GetInstancePlainArgs $) {
        this.admins = $.admins;
        this.apps = $.apps;
        this.id = $.id;
        this.name = $.name;
        this.users = $.users;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInstancePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInstancePlainArgs $;

        public Builder() {
            $ = new GetInstancePlainArgs();
        }

        public Builder(GetInstancePlainArgs defaults) {
            $ = new GetInstancePlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder admins(@Nullable List<Integer> admins) {
            $.admins = admins;
            return this;
        }

        public Builder admins(Integer... admins) {
            return admins(List.of(admins));
        }

        public Builder apps(@Nullable List<Integer> apps) {
            $.apps = apps;
            return this;
        }

        public Builder apps(Integer... apps) {
            return apps(List.of(apps));
        }

        public Builder id(String id) {
            $.id = id;
            return this;
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder users(@Nullable List<Integer> users) {
            $.users = users;
            return this;
        }

        public Builder users(Integer... users) {
            return users(List.of(users));
        }

        public GetInstancePlainArgs build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            return $;
        }
    }

}
