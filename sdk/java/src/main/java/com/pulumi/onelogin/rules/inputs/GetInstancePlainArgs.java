// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.onelogin.rules.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.onelogin.rules.inputs.GetInstanceSource;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetInstancePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetInstancePlainArgs Empty = new GetInstancePlainArgs();

    @Import(name="description")
    private @Nullable String description;

    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="filters")
    private @Nullable List<String> filters;

    public Optional<List<String>> filters() {
        return Optional.ofNullable(this.filters);
    }

    @Import(name="id", required=true)
    private String id;

    public String id() {
        return this.id;
    }

    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="source")
    private @Nullable GetInstanceSource source;

    public Optional<GetInstanceSource> source() {
        return Optional.ofNullable(this.source);
    }

    @Import(name="target")
    private @Nullable String target;

    public Optional<String> target() {
        return Optional.ofNullable(this.target);
    }

    @Import(name="type")
    private @Nullable String type;

    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    private GetInstancePlainArgs() {}

    private GetInstancePlainArgs(GetInstancePlainArgs $) {
        this.description = $.description;
        this.filters = $.filters;
        this.id = $.id;
        this.name = $.name;
        this.source = $.source;
        this.target = $.target;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInstancePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInstancePlainArgs $;

        public Builder() {
            $ = new GetInstancePlainArgs();
        }

        public Builder(GetInstancePlainArgs defaults) {
            $ = new GetInstancePlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        public Builder filters(@Nullable List<String> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(String... filters) {
            return filters(List.of(filters));
        }

        public Builder id(String id) {
            $.id = id;
            return this;
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder source(@Nullable GetInstanceSource source) {
            $.source = source;
            return this;
        }

        public Builder target(@Nullable String target) {
            $.target = target;
            return this;
        }

        public Builder type(@Nullable String type) {
            $.type = type;
            return this;
        }

        public GetInstancePlainArgs build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            return $;
        }
    }

}
