// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.onelogin.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.onelogin.inputs.GetAppsSsoCertificateArgs;
import java.lang.String;
import java.util.Objects;


public final class GetAppsSsoArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetAppsSsoArgs Empty = new GetAppsSsoArgs();

    /**
     * App Name.	This is only returned after Creating a SAML App.
     * 
     */
    @Import(name="acsUrl", required=true)
    private Output<String> acsUrl;

    /**
     * @return App Name.	This is only returned after Creating a SAML App.
     * 
     */
    public Output<String> acsUrl() {
        return this.acsUrl;
    }

    /**
     * The certificate used for signing.	This is only returned after Creating a SAML App.
     * 
     */
    @Import(name="certificate", required=true)
    private Output<GetAppsSsoCertificateArgs> certificate;

    /**
     * @return The certificate used for signing.	This is only returned after Creating a SAML App.
     * 
     */
    public Output<GetAppsSsoCertificateArgs> certificate() {
        return this.certificate;
    }

    /**
     * The OpenId Connect Client Id. Note that client_secret is only returned after Creating an OIDC App.
     * 
     */
    @Import(name="clientId", required=true)
    private Output<String> clientId;

    /**
     * @return The OpenId Connect Client Id. Note that client_secret is only returned after Creating an OIDC App.
     * 
     */
    public Output<String> clientId() {
        return this.clientId;
    }

    /**
     * OpenId Connet Client Secret
     * 
     */
    @Import(name="clientSecret", required=true)
    private Output<String> clientSecret;

    /**
     * @return OpenId Connet Client Secret
     * 
     */
    public Output<String> clientSecret() {
        return this.clientSecret;
    }

    /**
     * Issuer of app.	This is only returned after Creating a SAML App.
     * 
     */
    @Import(name="issuer", required=true)
    private Output<String> issuer;

    /**
     * @return Issuer of app.	This is only returned after Creating a SAML App.
     * 
     */
    public Output<String> issuer() {
        return this.issuer;
    }

    /**
     * ID of the apps underlying connector.	This is only returned after Creating a SAML App.
     * 
     */
    @Import(name="metadataUrl", required=true)
    private Output<String> metadataUrl;

    /**
     * @return ID of the apps underlying connector.	This is only returned after Creating a SAML App.
     * 
     */
    public Output<String> metadataUrl() {
        return this.metadataUrl;
    }

    private GetAppsSsoArgs() {}

    private GetAppsSsoArgs(GetAppsSsoArgs $) {
        this.acsUrl = $.acsUrl;
        this.certificate = $.certificate;
        this.clientId = $.clientId;
        this.clientSecret = $.clientSecret;
        this.issuer = $.issuer;
        this.metadataUrl = $.metadataUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAppsSsoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAppsSsoArgs $;

        public Builder() {
            $ = new GetAppsSsoArgs();
        }

        public Builder(GetAppsSsoArgs defaults) {
            $ = new GetAppsSsoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param acsUrl App Name.	This is only returned after Creating a SAML App.
         * 
         * @return builder
         * 
         */
        public Builder acsUrl(Output<String> acsUrl) {
            $.acsUrl = acsUrl;
            return this;
        }

        /**
         * @param acsUrl App Name.	This is only returned after Creating a SAML App.
         * 
         * @return builder
         * 
         */
        public Builder acsUrl(String acsUrl) {
            return acsUrl(Output.of(acsUrl));
        }

        /**
         * @param certificate The certificate used for signing.	This is only returned after Creating a SAML App.
         * 
         * @return builder
         * 
         */
        public Builder certificate(Output<GetAppsSsoCertificateArgs> certificate) {
            $.certificate = certificate;
            return this;
        }

        /**
         * @param certificate The certificate used for signing.	This is only returned after Creating a SAML App.
         * 
         * @return builder
         * 
         */
        public Builder certificate(GetAppsSsoCertificateArgs certificate) {
            return certificate(Output.of(certificate));
        }

        /**
         * @param clientId The OpenId Connect Client Id. Note that client_secret is only returned after Creating an OIDC App.
         * 
         * @return builder
         * 
         */
        public Builder clientId(Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId The OpenId Connect Client Id. Note that client_secret is only returned after Creating an OIDC App.
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param clientSecret OpenId Connet Client Secret
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(Output<String> clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        /**
         * @param clientSecret OpenId Connet Client Secret
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(String clientSecret) {
            return clientSecret(Output.of(clientSecret));
        }

        /**
         * @param issuer Issuer of app.	This is only returned after Creating a SAML App.
         * 
         * @return builder
         * 
         */
        public Builder issuer(Output<String> issuer) {
            $.issuer = issuer;
            return this;
        }

        /**
         * @param issuer Issuer of app.	This is only returned after Creating a SAML App.
         * 
         * @return builder
         * 
         */
        public Builder issuer(String issuer) {
            return issuer(Output.of(issuer));
        }

        /**
         * @param metadataUrl ID of the apps underlying connector.	This is only returned after Creating a SAML App.
         * 
         * @return builder
         * 
         */
        public Builder metadataUrl(Output<String> metadataUrl) {
            $.metadataUrl = metadataUrl;
            return this;
        }

        /**
         * @param metadataUrl ID of the apps underlying connector.	This is only returned after Creating a SAML App.
         * 
         * @return builder
         * 
         */
        public Builder metadataUrl(String metadataUrl) {
            return metadataUrl(Output.of(metadataUrl));
        }

        public GetAppsSsoArgs build() {
            if ($.acsUrl == null) {
                throw new MissingRequiredPropertyException("GetAppsSsoArgs", "acsUrl");
            }
            if ($.certificate == null) {
                throw new MissingRequiredPropertyException("GetAppsSsoArgs", "certificate");
            }
            if ($.clientId == null) {
                throw new MissingRequiredPropertyException("GetAppsSsoArgs", "clientId");
            }
            if ($.clientSecret == null) {
                throw new MissingRequiredPropertyException("GetAppsSsoArgs", "clientSecret");
            }
            if ($.issuer == null) {
                throw new MissingRequiredPropertyException("GetAppsSsoArgs", "issuer");
            }
            if ($.metadataUrl == null) {
                throw new MissingRequiredPropertyException("GetAppsSsoArgs", "metadataUrl");
            }
            return $;
        }
    }

}
