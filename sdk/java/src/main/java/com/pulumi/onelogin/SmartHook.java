// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.onelogin;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.onelogin.SmartHookArgs;
import com.pulumi.onelogin.Utilities;
import com.pulumi.onelogin.inputs.SmartHookState;
import com.pulumi.onelogin.outputs.SmartHookCondition;
import com.pulumi.onelogin.outputs.SmartHookOption;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="onelogin:index/smartHook:SmartHook")
public class SmartHook extends com.pulumi.resources.CustomResource {
    @Export(name="conditions", refs={List.class,SmartHookCondition.class}, tree="[0,1]")
    private Output</* @Nullable */ List<SmartHookCondition>> conditions;

    public Output<Optional<List<SmartHookCondition>>> conditions() {
        return Codegen.optional(this.conditions);
    }
    @Export(name="contextVersion", refs={String.class}, tree="[0]")
    private Output<String> contextVersion;

    public Output<String> contextVersion() {
        return this.contextVersion;
    }
    @Export(name="createdAt", refs={String.class}, tree="[0]")
    private Output<String> createdAt;

    public Output<String> createdAt() {
        return this.createdAt;
    }
    @Export(name="disabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> disabled;

    public Output<Boolean> disabled() {
        return this.disabled;
    }
    @Export(name="envVars", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> envVars;

    public Output<List<String>> envVars() {
        return this.envVars;
    }
    @Export(name="function", refs={String.class}, tree="[0]")
    private Output<String> function;

    public Output<String> function() {
        return this.function;
    }
    @Export(name="options", refs={List.class,SmartHookOption.class}, tree="[0,1]")
    private Output</* @Nullable */ List<SmartHookOption>> options;

    public Output<Optional<List<SmartHookOption>>> options() {
        return Codegen.optional(this.options);
    }
    @Export(name="packages", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> packages;

    public Output<Map<String,String>> packages() {
        return this.packages;
    }
    @Export(name="retries", refs={Integer.class}, tree="[0]")
    private Output<Integer> retries;

    public Output<Integer> retries() {
        return this.retries;
    }
    @Export(name="runtime", refs={String.class}, tree="[0]")
    private Output<String> runtime;

    public Output<String> runtime() {
        return this.runtime;
    }
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    public Output<String> status() {
        return this.status;
    }
    @Export(name="timeout", refs={Integer.class}, tree="[0]")
    private Output<Integer> timeout;

    public Output<Integer> timeout() {
        return this.timeout;
    }
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }
    @Export(name="updatedAt", refs={String.class}, tree="[0]")
    private Output<String> updatedAt;

    public Output<String> updatedAt() {
        return this.updatedAt;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SmartHook(java.lang.String name) {
        this(name, SmartHookArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SmartHook(java.lang.String name, SmartHookArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SmartHook(java.lang.String name, SmartHookArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("onelogin:index/smartHook:SmartHook", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private SmartHook(java.lang.String name, Output<java.lang.String> id, @Nullable SmartHookState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("onelogin:index/smartHook:SmartHook", name, state, makeResourceOptions(options, id), false);
    }

    private static SmartHookArgs makeArgs(SmartHookArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SmartHookArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SmartHook get(java.lang.String name, Output<java.lang.String> id, @Nullable SmartHookState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SmartHook(name, id, state, options);
    }
}
