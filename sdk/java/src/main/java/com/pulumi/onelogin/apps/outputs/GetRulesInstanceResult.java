// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.onelogin.apps.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.onelogin.apps.outputs.GetRulesInstanceAction;
import com.pulumi.onelogin.apps.outputs.GetRulesInstanceCondition;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRulesInstanceResult {
    private List<GetRulesInstanceAction> actions;
    private String appsId;
    private List<GetRulesInstanceCondition> conditions;
    private Boolean enabled;
    private String id;
    private String match;
    private String name;
    private Integer position;

    private GetRulesInstanceResult() {}
    public List<GetRulesInstanceAction> actions() {
        return this.actions;
    }
    public String appsId() {
        return this.appsId;
    }
    public List<GetRulesInstanceCondition> conditions() {
        return this.conditions;
    }
    public Boolean enabled() {
        return this.enabled;
    }
    public String id() {
        return this.id;
    }
    public String match() {
        return this.match;
    }
    public String name() {
        return this.name;
    }
    public Integer position() {
        return this.position;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRulesInstanceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetRulesInstanceAction> actions;
        private String appsId;
        private List<GetRulesInstanceCondition> conditions;
        private Boolean enabled;
        private String id;
        private String match;
        private String name;
        private Integer position;
        public Builder() {}
        public Builder(GetRulesInstanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.appsId = defaults.appsId;
    	      this.conditions = defaults.conditions;
    	      this.enabled = defaults.enabled;
    	      this.id = defaults.id;
    	      this.match = defaults.match;
    	      this.name = defaults.name;
    	      this.position = defaults.position;
        }

        @CustomType.Setter
        public Builder actions(List<GetRulesInstanceAction> actions) {
            if (actions == null) {
              throw new MissingRequiredPropertyException("GetRulesInstanceResult", "actions");
            }
            this.actions = actions;
            return this;
        }
        public Builder actions(GetRulesInstanceAction... actions) {
            return actions(List.of(actions));
        }
        @CustomType.Setter
        public Builder appsId(String appsId) {
            if (appsId == null) {
              throw new MissingRequiredPropertyException("GetRulesInstanceResult", "appsId");
            }
            this.appsId = appsId;
            return this;
        }
        @CustomType.Setter
        public Builder conditions(List<GetRulesInstanceCondition> conditions) {
            if (conditions == null) {
              throw new MissingRequiredPropertyException("GetRulesInstanceResult", "conditions");
            }
            this.conditions = conditions;
            return this;
        }
        public Builder conditions(GetRulesInstanceCondition... conditions) {
            return conditions(List.of(conditions));
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetRulesInstanceResult", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRulesInstanceResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder match(String match) {
            if (match == null) {
              throw new MissingRequiredPropertyException("GetRulesInstanceResult", "match");
            }
            this.match = match;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetRulesInstanceResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder position(Integer position) {
            if (position == null) {
              throw new MissingRequiredPropertyException("GetRulesInstanceResult", "position");
            }
            this.position = position;
            return this;
        }
        public GetRulesInstanceResult build() {
            final var _resultValue = new GetRulesInstanceResult();
            _resultValue.actions = actions;
            _resultValue.appsId = appsId;
            _resultValue.conditions = conditions;
            _resultValue.enabled = enabled;
            _resultValue.id = id;
            _resultValue.match = match;
            _resultValue.name = name;
            _resultValue.position = position;
            return _resultValue;
        }
    }
}
