// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.onelogin.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuthServersConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuthServersConfigurationArgs Empty = new AuthServersConfigurationArgs();

    @Import(name="accessTokenExpirationMinutes")
    private @Nullable Output<Integer> accessTokenExpirationMinutes;

    public Optional<Output<Integer>> accessTokenExpirationMinutes() {
        return Optional.ofNullable(this.accessTokenExpirationMinutes);
    }

    @Import(name="audiences", required=true)
    private Output<List<String>> audiences;

    public Output<List<String>> audiences() {
        return this.audiences;
    }

    @Import(name="refreshTokenExpirationMinutes")
    private @Nullable Output<Integer> refreshTokenExpirationMinutes;

    public Optional<Output<Integer>> refreshTokenExpirationMinutes() {
        return Optional.ofNullable(this.refreshTokenExpirationMinutes);
    }

    @Import(name="resourceIdentifier", required=true)
    private Output<String> resourceIdentifier;

    public Output<String> resourceIdentifier() {
        return this.resourceIdentifier;
    }

    private AuthServersConfigurationArgs() {}

    private AuthServersConfigurationArgs(AuthServersConfigurationArgs $) {
        this.accessTokenExpirationMinutes = $.accessTokenExpirationMinutes;
        this.audiences = $.audiences;
        this.refreshTokenExpirationMinutes = $.refreshTokenExpirationMinutes;
        this.resourceIdentifier = $.resourceIdentifier;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuthServersConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuthServersConfigurationArgs $;

        public Builder() {
            $ = new AuthServersConfigurationArgs();
        }

        public Builder(AuthServersConfigurationArgs defaults) {
            $ = new AuthServersConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder accessTokenExpirationMinutes(@Nullable Output<Integer> accessTokenExpirationMinutes) {
            $.accessTokenExpirationMinutes = accessTokenExpirationMinutes;
            return this;
        }

        public Builder accessTokenExpirationMinutes(Integer accessTokenExpirationMinutes) {
            return accessTokenExpirationMinutes(Output.of(accessTokenExpirationMinutes));
        }

        public Builder audiences(Output<List<String>> audiences) {
            $.audiences = audiences;
            return this;
        }

        public Builder audiences(List<String> audiences) {
            return audiences(Output.of(audiences));
        }

        public Builder audiences(String... audiences) {
            return audiences(List.of(audiences));
        }

        public Builder refreshTokenExpirationMinutes(@Nullable Output<Integer> refreshTokenExpirationMinutes) {
            $.refreshTokenExpirationMinutes = refreshTokenExpirationMinutes;
            return this;
        }

        public Builder refreshTokenExpirationMinutes(Integer refreshTokenExpirationMinutes) {
            return refreshTokenExpirationMinutes(Output.of(refreshTokenExpirationMinutes));
        }

        public Builder resourceIdentifier(Output<String> resourceIdentifier) {
            $.resourceIdentifier = resourceIdentifier;
            return this;
        }

        public Builder resourceIdentifier(String resourceIdentifier) {
            return resourceIdentifier(Output.of(resourceIdentifier));
        }

        public AuthServersConfigurationArgs build() {
            $.audiences = Objects.requireNonNull($.audiences, "expected parameter 'audiences' to be non-null");
            $.resourceIdentifier = Objects.requireNonNull($.resourceIdentifier, "expected parameter 'resourceIdentifier' to be non-null");
            return $;
        }
    }

}
