// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.onelogin.apps.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.onelogin.apps.inputs.GetRulesAction;
import com.pulumi.onelogin.apps.inputs.GetRulesCondition;
import com.pulumi.onelogin.apps.inputs.GetRulesFilter;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRulesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRulesPlainArgs Empty = new GetRulesPlainArgs();

    @Import(name="actions")
    private @Nullable List<GetRulesAction> actions;

    public Optional<List<GetRulesAction>> actions() {
        return Optional.ofNullable(this.actions);
    }

    @Import(name="appsId", required=true)
    private String appsId;

    public String appsId() {
        return this.appsId;
    }

    @Import(name="conditions")
    private @Nullable List<GetRulesCondition> conditions;

    public Optional<List<GetRulesCondition>> conditions() {
        return Optional.ofNullable(this.conditions);
    }

    @Import(name="enabled")
    private @Nullable Boolean enabled;

    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    @Import(name="filters")
    private @Nullable List<GetRulesFilter> filters;

    public Optional<List<GetRulesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    @Import(name="match")
    private @Nullable String match;

    public Optional<String> match() {
        return Optional.ofNullable(this.match);
    }

    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="position")
    private @Nullable Integer position;

    public Optional<Integer> position() {
        return Optional.ofNullable(this.position);
    }

    private GetRulesPlainArgs() {}

    private GetRulesPlainArgs(GetRulesPlainArgs $) {
        this.actions = $.actions;
        this.appsId = $.appsId;
        this.conditions = $.conditions;
        this.enabled = $.enabled;
        this.filters = $.filters;
        this.match = $.match;
        this.name = $.name;
        this.position = $.position;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRulesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRulesPlainArgs $;

        public Builder() {
            $ = new GetRulesPlainArgs();
        }

        public Builder(GetRulesPlainArgs defaults) {
            $ = new GetRulesPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder actions(@Nullable List<GetRulesAction> actions) {
            $.actions = actions;
            return this;
        }

        public Builder actions(GetRulesAction... actions) {
            return actions(List.of(actions));
        }

        public Builder appsId(String appsId) {
            $.appsId = appsId;
            return this;
        }

        public Builder conditions(@Nullable List<GetRulesCondition> conditions) {
            $.conditions = conditions;
            return this;
        }

        public Builder conditions(GetRulesCondition... conditions) {
            return conditions(List.of(conditions));
        }

        public Builder enabled(@Nullable Boolean enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder filters(@Nullable List<GetRulesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetRulesFilter... filters) {
            return filters(List.of(filters));
        }

        public Builder match(@Nullable String match) {
            $.match = match;
            return this;
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder position(@Nullable Integer position) {
            $.position = position;
            return this;
        }

        public GetRulesPlainArgs build() {
            $.appsId = Objects.requireNonNull($.appsId, "expected parameter 'appsId' to be non-null");
            return $;
        }
    }

}
