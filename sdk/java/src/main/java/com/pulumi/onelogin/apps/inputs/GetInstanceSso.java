// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.onelogin.apps.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.onelogin.apps.inputs.GetInstanceSsoCertificate;
import java.lang.String;
import java.util.Objects;


public final class GetInstanceSso extends com.pulumi.resources.InvokeArgs {

    public static final GetInstanceSso Empty = new GetInstanceSso();

    /**
     * App Name.	This is only returned after Creating a SAML App.
     * 
     */
    @Import(name="acsUrl", required=true)
    private String acsUrl;

    /**
     * @return App Name.	This is only returned after Creating a SAML App.
     * 
     */
    public String acsUrl() {
        return this.acsUrl;
    }

    /**
     * The certificate used for signing.	This is only returned after Creating a SAML App.
     * 
     */
    @Import(name="certificate", required=true)
    private GetInstanceSsoCertificate certificate;

    /**
     * @return The certificate used for signing.	This is only returned after Creating a SAML App.
     * 
     */
    public GetInstanceSsoCertificate certificate() {
        return this.certificate;
    }

    /**
     * The OpenId Connect Client Id. Note that client_secret is only returned after Creating an OIDC App.
     * 
     */
    @Import(name="clientId", required=true)
    private String clientId;

    /**
     * @return The OpenId Connect Client Id. Note that client_secret is only returned after Creating an OIDC App.
     * 
     */
    public String clientId() {
        return this.clientId;
    }

    /**
     * OpenId Connet Client Secret
     * 
     */
    @Import(name="clientSecret", required=true)
    private String clientSecret;

    /**
     * @return OpenId Connet Client Secret
     * 
     */
    public String clientSecret() {
        return this.clientSecret;
    }

    /**
     * Issuer of app.	This is only returned after Creating a SAML App.
     * 
     */
    @Import(name="issuer", required=true)
    private String issuer;

    /**
     * @return Issuer of app.	This is only returned after Creating a SAML App.
     * 
     */
    public String issuer() {
        return this.issuer;
    }

    /**
     * ID of the apps underlying connector.	This is only returned after Creating a SAML App.
     * 
     */
    @Import(name="metadataUrl", required=true)
    private String metadataUrl;

    /**
     * @return ID of the apps underlying connector.	This is only returned after Creating a SAML App.
     * 
     */
    public String metadataUrl() {
        return this.metadataUrl;
    }

    private GetInstanceSso() {}

    private GetInstanceSso(GetInstanceSso $) {
        this.acsUrl = $.acsUrl;
        this.certificate = $.certificate;
        this.clientId = $.clientId;
        this.clientSecret = $.clientSecret;
        this.issuer = $.issuer;
        this.metadataUrl = $.metadataUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInstanceSso defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInstanceSso $;

        public Builder() {
            $ = new GetInstanceSso();
        }

        public Builder(GetInstanceSso defaults) {
            $ = new GetInstanceSso(Objects.requireNonNull(defaults));
        }

        /**
         * @param acsUrl App Name.	This is only returned after Creating a SAML App.
         * 
         * @return builder
         * 
         */
        public Builder acsUrl(String acsUrl) {
            $.acsUrl = acsUrl;
            return this;
        }

        /**
         * @param certificate The certificate used for signing.	This is only returned after Creating a SAML App.
         * 
         * @return builder
         * 
         */
        public Builder certificate(GetInstanceSsoCertificate certificate) {
            $.certificate = certificate;
            return this;
        }

        /**
         * @param clientId The OpenId Connect Client Id. Note that client_secret is only returned after Creating an OIDC App.
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientSecret OpenId Connet Client Secret
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(String clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        /**
         * @param issuer Issuer of app.	This is only returned after Creating a SAML App.
         * 
         * @return builder
         * 
         */
        public Builder issuer(String issuer) {
            $.issuer = issuer;
            return this;
        }

        /**
         * @param metadataUrl ID of the apps underlying connector.	This is only returned after Creating a SAML App.
         * 
         * @return builder
         * 
         */
        public Builder metadataUrl(String metadataUrl) {
            $.metadataUrl = metadataUrl;
            return this;
        }

        public GetInstanceSso build() {
            if ($.acsUrl == null) {
                throw new MissingRequiredPropertyException("GetInstanceSso", "acsUrl");
            }
            if ($.certificate == null) {
                throw new MissingRequiredPropertyException("GetInstanceSso", "certificate");
            }
            if ($.clientId == null) {
                throw new MissingRequiredPropertyException("GetInstanceSso", "clientId");
            }
            if ($.clientSecret == null) {
                throw new MissingRequiredPropertyException("GetInstanceSso", "clientSecret");
            }
            if ($.issuer == null) {
                throw new MissingRequiredPropertyException("GetInstanceSso", "issuer");
            }
            if ($.metadataUrl == null) {
                throw new MissingRequiredPropertyException("GetInstanceSso", "metadataUrl");
            }
            return $;
        }
    }

}
