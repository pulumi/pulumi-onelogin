// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.onelogin.apps.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInstanceParametersGroups {
    private String attributesTransformations;
    private String defaultValues;
    private Integer id;
    private String label;
    private Boolean provisionedEntitlements;
    private Boolean skipIfBlank;
    private String userAttributeMacros;
    private String userAttributeMappings;
    private String values;

    private GetInstanceParametersGroups() {}
    public String attributesTransformations() {
        return this.attributesTransformations;
    }
    public String defaultValues() {
        return this.defaultValues;
    }
    public Integer id() {
        return this.id;
    }
    public String label() {
        return this.label;
    }
    public Boolean provisionedEntitlements() {
        return this.provisionedEntitlements;
    }
    public Boolean skipIfBlank() {
        return this.skipIfBlank;
    }
    public String userAttributeMacros() {
        return this.userAttributeMacros;
    }
    public String userAttributeMappings() {
        return this.userAttributeMappings;
    }
    public String values() {
        return this.values;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceParametersGroups defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String attributesTransformations;
        private String defaultValues;
        private Integer id;
        private String label;
        private Boolean provisionedEntitlements;
        private Boolean skipIfBlank;
        private String userAttributeMacros;
        private String userAttributeMappings;
        private String values;
        public Builder() {}
        public Builder(GetInstanceParametersGroups defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attributesTransformations = defaults.attributesTransformations;
    	      this.defaultValues = defaults.defaultValues;
    	      this.id = defaults.id;
    	      this.label = defaults.label;
    	      this.provisionedEntitlements = defaults.provisionedEntitlements;
    	      this.skipIfBlank = defaults.skipIfBlank;
    	      this.userAttributeMacros = defaults.userAttributeMacros;
    	      this.userAttributeMappings = defaults.userAttributeMappings;
    	      this.values = defaults.values;
        }

        @CustomType.Setter
        public Builder attributesTransformations(String attributesTransformations) {
            if (attributesTransformations == null) {
              throw new MissingRequiredPropertyException("GetInstanceParametersGroups", "attributesTransformations");
            }
            this.attributesTransformations = attributesTransformations;
            return this;
        }
        @CustomType.Setter
        public Builder defaultValues(String defaultValues) {
            if (defaultValues == null) {
              throw new MissingRequiredPropertyException("GetInstanceParametersGroups", "defaultValues");
            }
            this.defaultValues = defaultValues;
            return this;
        }
        @CustomType.Setter
        public Builder id(Integer id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetInstanceParametersGroups", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder label(String label) {
            if (label == null) {
              throw new MissingRequiredPropertyException("GetInstanceParametersGroups", "label");
            }
            this.label = label;
            return this;
        }
        @CustomType.Setter
        public Builder provisionedEntitlements(Boolean provisionedEntitlements) {
            if (provisionedEntitlements == null) {
              throw new MissingRequiredPropertyException("GetInstanceParametersGroups", "provisionedEntitlements");
            }
            this.provisionedEntitlements = provisionedEntitlements;
            return this;
        }
        @CustomType.Setter
        public Builder skipIfBlank(Boolean skipIfBlank) {
            if (skipIfBlank == null) {
              throw new MissingRequiredPropertyException("GetInstanceParametersGroups", "skipIfBlank");
            }
            this.skipIfBlank = skipIfBlank;
            return this;
        }
        @CustomType.Setter
        public Builder userAttributeMacros(String userAttributeMacros) {
            if (userAttributeMacros == null) {
              throw new MissingRequiredPropertyException("GetInstanceParametersGroups", "userAttributeMacros");
            }
            this.userAttributeMacros = userAttributeMacros;
            return this;
        }
        @CustomType.Setter
        public Builder userAttributeMappings(String userAttributeMappings) {
            if (userAttributeMappings == null) {
              throw new MissingRequiredPropertyException("GetInstanceParametersGroups", "userAttributeMappings");
            }
            this.userAttributeMappings = userAttributeMappings;
            return this;
        }
        @CustomType.Setter
        public Builder values(String values) {
            if (values == null) {
              throw new MissingRequiredPropertyException("GetInstanceParametersGroups", "values");
            }
            this.values = values;
            return this;
        }
        public GetInstanceParametersGroups build() {
            final var _resultValue = new GetInstanceParametersGroups();
            _resultValue.attributesTransformations = attributesTransformations;
            _resultValue.defaultValues = defaultValues;
            _resultValue.id = id;
            _resultValue.label = label;
            _resultValue.provisionedEntitlements = provisionedEntitlements;
            _resultValue.skipIfBlank = skipIfBlank;
            _resultValue.userAttributeMacros = userAttributeMacros;
            _resultValue.userAttributeMappings = userAttributeMappings;
            _resultValue.values = values;
            return _resultValue;
        }
    }
}
