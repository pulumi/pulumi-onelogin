// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.onelogin.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetPrivilegesPrivilegeStatement extends com.pulumi.resources.InvokeArgs {

    public static final GetPrivilegesPrivilegeStatement Empty = new GetPrivilegesPrivilegeStatement();

    @Import(name="actions", required=true)
    private List<String> actions;

    public List<String> actions() {
        return this.actions;
    }

    @Import(name="effect", required=true)
    private String effect;

    public String effect() {
        return this.effect;
    }

    @Import(name="scopes", required=true)
    private List<String> scopes;

    public List<String> scopes() {
        return this.scopes;
    }

    private GetPrivilegesPrivilegeStatement() {}

    private GetPrivilegesPrivilegeStatement(GetPrivilegesPrivilegeStatement $) {
        this.actions = $.actions;
        this.effect = $.effect;
        this.scopes = $.scopes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPrivilegesPrivilegeStatement defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPrivilegesPrivilegeStatement $;

        public Builder() {
            $ = new GetPrivilegesPrivilegeStatement();
        }

        public Builder(GetPrivilegesPrivilegeStatement defaults) {
            $ = new GetPrivilegesPrivilegeStatement(Objects.requireNonNull(defaults));
        }

        public Builder actions(List<String> actions) {
            $.actions = actions;
            return this;
        }

        public Builder actions(String... actions) {
            return actions(List.of(actions));
        }

        public Builder effect(String effect) {
            $.effect = effect;
            return this;
        }

        public Builder scopes(List<String> scopes) {
            $.scopes = scopes;
            return this;
        }

        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }

        public GetPrivilegesPrivilegeStatement build() {
            if ($.actions == null) {
                throw new MissingRequiredPropertyException("GetPrivilegesPrivilegeStatement", "actions");
            }
            if ($.effect == null) {
                throw new MissingRequiredPropertyException("GetPrivilegesPrivilegeStatement", "effect");
            }
            if ($.scopes == null) {
                throw new MissingRequiredPropertyException("GetPrivilegesPrivilegeStatement", "scopes");
            }
            return $;
        }
    }

}
