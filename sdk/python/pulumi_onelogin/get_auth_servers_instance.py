# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetAuthServersInstanceResult',
    'AwaitableGetAuthServersInstanceResult',
    'get_auth_servers_instance',
    'get_auth_servers_instance_output',
]

@pulumi.output_type
class GetAuthServersInstanceResult:
    """
    A collection of values returned by getAuthServersInstance.
    """
    def __init__(__self__, configuration=None, description=None, id=None, name=None):
        if configuration and not isinstance(configuration, dict):
            raise TypeError("Expected argument 'configuration' to be a dict")
        pulumi.set(__self__, "configuration", configuration)
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def configuration(self) -> 'outputs.GetAuthServersInstanceConfigurationResult':
        return pulumi.get(self, "configuration")

    @property
    @pulumi.getter
    def description(self) -> str:
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def id(self) -> str:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")


class AwaitableGetAuthServersInstanceResult(GetAuthServersInstanceResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAuthServersInstanceResult(
            configuration=self.configuration,
            description=self.description,
            id=self.id,
            name=self.name)


def get_auth_servers_instance(configuration: Optional[pulumi.InputType['GetAuthServersInstanceConfigurationArgs']] = None,
                              description: Optional[str] = None,
                              id: Optional[str] = None,
                              name: Optional[str] = None,
                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAuthServersInstanceResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['configuration'] = configuration
    __args__['description'] = description
    __args__['id'] = id
    __args__['name'] = name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('onelogin:index/getAuthServersInstance:getAuthServersInstance', __args__, opts=opts, typ=GetAuthServersInstanceResult).value

    return AwaitableGetAuthServersInstanceResult(
        configuration=pulumi.get(__ret__, 'configuration'),
        description=pulumi.get(__ret__, 'description'),
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'))


@_utilities.lift_output_func(get_auth_servers_instance)
def get_auth_servers_instance_output(configuration: Optional[pulumi.Input[Optional[pulumi.InputType['GetAuthServersInstanceConfigurationArgs']]]] = None,
                                     description: Optional[pulumi.Input[Optional[str]]] = None,
                                     id: Optional[pulumi.Input[str]] = None,
                                     name: Optional[pulumi.Input[Optional[str]]] = None,
                                     opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetAuthServersInstanceResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
