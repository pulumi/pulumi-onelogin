// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Onelogin.Users
{
    public static class GetApps
    {
        public static Task<GetAppsResult> InvokeAsync(GetAppsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAppsResult>("onelogin:users/getApps:getApps", args ?? new GetAppsArgs(), options.WithDefaults());

        public static Output<GetAppsResult> Invoke(GetAppsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAppsResult>("onelogin:users/getApps:getApps", args ?? new GetAppsInvokeArgs(), options.WithDefaults());

        public static Output<GetAppsResult> Invoke(GetAppsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAppsResult>("onelogin:users/getApps:getApps", args ?? new GetAppsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAppsArgs : global::Pulumi.InvokeArgs
    {
        [Input("extension")]
        public bool? Extension { get; set; }

        [Input("filters")]
        private List<Inputs.GetAppsFilterArgs>? _filters;
        public List<Inputs.GetAppsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetAppsFilterArgs>());
            set => _filters = value;
        }

        [Input("iconUrl")]
        public string? IconUrl { get; set; }

        [Input("loginId")]
        public int? LoginId { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("provisioningEnabled")]
        public bool? ProvisioningEnabled { get; set; }

        [Input("provisioningState")]
        public string? ProvisioningState { get; set; }

        [Input("provisioningStatus")]
        public string? ProvisioningStatus { get; set; }

        [Input("usersId", required: true)]
        public string UsersId { get; set; } = null!;

        public GetAppsArgs()
        {
        }
        public static new GetAppsArgs Empty => new GetAppsArgs();
    }

    public sealed class GetAppsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("extension")]
        public Input<bool>? Extension { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetAppsFilterInputArgs>? _filters;
        public InputList<Inputs.GetAppsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetAppsFilterInputArgs>());
            set => _filters = value;
        }

        [Input("iconUrl")]
        public Input<string>? IconUrl { get; set; }

        [Input("loginId")]
        public Input<int>? LoginId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("provisioningEnabled")]
        public Input<bool>? ProvisioningEnabled { get; set; }

        [Input("provisioningState")]
        public Input<string>? ProvisioningState { get; set; }

        [Input("provisioningStatus")]
        public Input<string>? ProvisioningStatus { get; set; }

        [Input("usersId", required: true)]
        public Input<string> UsersId { get; set; } = null!;

        public GetAppsInvokeArgs()
        {
        }
        public static new GetAppsInvokeArgs Empty => new GetAppsInvokeArgs();
    }


    [OutputType]
    public sealed class GetAppsResult
    {
        public readonly bool Extension;
        public readonly ImmutableArray<Outputs.GetAppsFilterResult> Filters;
        public readonly string IconUrl;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int LoginId;
        public readonly string Name;
        public readonly bool ProvisioningEnabled;
        public readonly string ProvisioningState;
        public readonly string ProvisioningStatus;
        public readonly string UsersId;

        [OutputConstructor]
        private GetAppsResult(
            bool extension,

            ImmutableArray<Outputs.GetAppsFilterResult> filters,

            string iconUrl,

            string id,

            int loginId,

            string name,

            bool provisioningEnabled,

            string provisioningState,

            string provisioningStatus,

            string usersId)
        {
            Extension = extension;
            Filters = filters;
            IconUrl = iconUrl;
            Id = id;
            LoginId = loginId;
            Name = name;
            ProvisioningEnabled = provisioningEnabled;
            ProvisioningState = provisioningState;
            ProvisioningStatus = provisioningStatus;
            UsersId = usersId;
        }
    }
}
