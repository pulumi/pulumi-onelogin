// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Onelogin
{
    public static class GetBrandsApps
    {
        public static Task<GetBrandsAppsResult> InvokeAsync(GetBrandsAppsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBrandsAppsResult>("onelogin:index/getBrandsApps:getBrandsApps", args ?? new GetBrandsAppsArgs(), options.WithDefaults());

        public static Output<GetBrandsAppsResult> Invoke(GetBrandsAppsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBrandsAppsResult>("onelogin:index/getBrandsApps:getBrandsApps", args ?? new GetBrandsAppsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBrandsAppsArgs : global::Pulumi.InvokeArgs
    {
        [Input("authMethod")]
        public int? AuthMethod { get; set; }

        [Input("authMethodDescription")]
        public string? AuthMethodDescription { get; set; }

        [Input("brandsId", required: true)]
        public string BrandsId { get; set; } = null!;

        [Input("connectorId")]
        public int? ConnectorId { get; set; }

        [Input("createdAt")]
        public string? CreatedAt { get; set; }

        [Input("description")]
        public string? Description { get; set; }

        [Input("filters")]
        private List<Inputs.GetBrandsAppsFilterArgs>? _filters;
        public List<Inputs.GetBrandsAppsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetBrandsAppsFilterArgs>());
            set => _filters = value;
        }

        [Input("name")]
        public string? Name { get; set; }

        [Input("updatedAt")]
        public string? UpdatedAt { get; set; }

        [Input("visible")]
        public bool? Visible { get; set; }

        public GetBrandsAppsArgs()
        {
        }
        public static new GetBrandsAppsArgs Empty => new GetBrandsAppsArgs();
    }

    public sealed class GetBrandsAppsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("authMethod")]
        public Input<int>? AuthMethod { get; set; }

        [Input("authMethodDescription")]
        public Input<string>? AuthMethodDescription { get; set; }

        [Input("brandsId", required: true)]
        public Input<string> BrandsId { get; set; } = null!;

        [Input("connectorId")]
        public Input<int>? ConnectorId { get; set; }

        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetBrandsAppsFilterInputArgs>? _filters;
        public InputList<Inputs.GetBrandsAppsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetBrandsAppsFilterInputArgs>());
            set => _filters = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        [Input("visible")]
        public Input<bool>? Visible { get; set; }

        public GetBrandsAppsInvokeArgs()
        {
        }
        public static new GetBrandsAppsInvokeArgs Empty => new GetBrandsAppsInvokeArgs();
    }


    [OutputType]
    public sealed class GetBrandsAppsResult
    {
        public readonly int AuthMethod;
        public readonly string AuthMethodDescription;
        public readonly string BrandsId;
        public readonly int ConnectorId;
        public readonly string CreatedAt;
        public readonly string Description;
        public readonly ImmutableArray<Outputs.GetBrandsAppsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string UpdatedAt;
        public readonly bool Visible;

        [OutputConstructor]
        private GetBrandsAppsResult(
            int authMethod,

            string authMethodDescription,

            string brandsId,

            int connectorId,

            string createdAt,

            string description,

            ImmutableArray<Outputs.GetBrandsAppsFilterResult> filters,

            string id,

            string name,

            string updatedAt,

            bool visible)
        {
            AuthMethod = authMethod;
            AuthMethodDescription = authMethodDescription;
            BrandsId = brandsId;
            ConnectorId = connectorId;
            CreatedAt = createdAt;
            Description = description;
            Filters = filters;
            Id = id;
            Name = name;
            UpdatedAt = updatedAt;
            Visible = visible;
        }
    }
}
