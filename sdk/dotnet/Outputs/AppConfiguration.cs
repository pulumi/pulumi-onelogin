// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Onelogin.Outputs
{

    [OutputType]
    public sealed class AppConfiguration
    {
        /// <summary>
        /// OIDC Apps only Number of minutes the refresh token will be valid for.
        /// </summary>
        public readonly int? AccessTokenExpirationMinutes;
        /// <summary>
        /// OIDC Apps only The OpenId Connect Client Id. Note that client_secret is only returned after Creating an App.
        /// </summary>
        public readonly string? LoginUrl;
        public readonly string? OidcApiVersion;
        /// <summary>
        /// OIDC Apps Only
        ///   - 0: Web
        ///   - 1: Native/Mobile
        /// </summary>
        public readonly int? OidcApplicationType;
        /// <summary>
        /// OIDC Apps only
        /// </summary>
        public readonly string? OidcEncryptionKey;
        /// <summary>
        /// OIDC Apps only
        /// </summary>
        public readonly string? PostLogoutRedirectUri;
        /// <summary>
        /// OIDC Apps only Comma or newline separated list of valid redirect uris for the OpenId Connect Authorization Code flow.
        /// </summary>
        public readonly string? RedirectUri;
        /// <summary>
        /// Number of minutes the refresh token will be valid for.
        /// </summary>
        public readonly int? RefreshTokenExpirationMinutes;
        /// <summary>
        /// OIDC Apps only
        ///  - 0: Basic
        ///  - 1: POST
        ///  - 2: None / PKCE
        /// </summary>
        public readonly int? TokenEndpointAuthMethod;

        [OutputConstructor]
        private AppConfiguration(
            int? accessTokenExpirationMinutes,

            string? loginUrl,

            string? oidcApiVersion,

            int? oidcApplicationType,

            string? oidcEncryptionKey,

            string? postLogoutRedirectUri,

            string? redirectUri,

            int? refreshTokenExpirationMinutes,

            int? tokenEndpointAuthMethod)
        {
            AccessTokenExpirationMinutes = accessTokenExpirationMinutes;
            LoginUrl = loginUrl;
            OidcApiVersion = oidcApiVersion;
            OidcApplicationType = oidcApplicationType;
            OidcEncryptionKey = oidcEncryptionKey;
            PostLogoutRedirectUri = postLogoutRedirectUri;
            RedirectUri = redirectUri;
            RefreshTokenExpirationMinutes = refreshTokenExpirationMinutes;
            TokenEndpointAuthMethod = tokenEndpointAuthMethod;
        }
    }
}
