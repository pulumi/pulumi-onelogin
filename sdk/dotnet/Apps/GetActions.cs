// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Onelogin.Apps
{
    public static class GetActions
    {
        public static Task<GetActionsResult> InvokeAsync(GetActionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetActionsResult>("onelogin:apps/getActions:getActions", args ?? new GetActionsArgs(), options.WithDefaults());

        public static Output<GetActionsResult> Invoke(GetActionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetActionsResult>("onelogin:apps/getActions:getActions", args ?? new GetActionsInvokeArgs(), options.WithDefaults());

        public static Output<GetActionsResult> Invoke(GetActionsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetActionsResult>("onelogin:apps/getActions:getActions", args ?? new GetActionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetActionsArgs : global::Pulumi.InvokeArgs
    {
        [Input("appsId", required: true)]
        public string AppsId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetActionsFilterArgs>? _filters;
        public List<Inputs.GetActionsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetActionsFilterArgs>());
            set => _filters = value;
        }

        [Input("name")]
        public string? Name { get; set; }

        [Input("value")]
        public string? Value { get; set; }

        public GetActionsArgs()
        {
        }
        public static new GetActionsArgs Empty => new GetActionsArgs();
    }

    public sealed class GetActionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("appsId", required: true)]
        public Input<string> AppsId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetActionsFilterInputArgs>? _filters;
        public InputList<Inputs.GetActionsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetActionsFilterInputArgs>());
            set => _filters = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("value")]
        public Input<string>? Value { get; set; }

        public GetActionsInvokeArgs()
        {
        }
        public static new GetActionsInvokeArgs Empty => new GetActionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetActionsResult
    {
        public readonly string AppsId;
        public readonly ImmutableArray<Outputs.GetActionsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string Value;

        [OutputConstructor]
        private GetActionsResult(
            string appsId,

            ImmutableArray<Outputs.GetActionsFilterResult> filters,

            string id,

            string name,

            string value)
        {
            AppsId = appsId;
            Filters = filters;
            Id = id;
            Name = name;
            Value = value;
        }
    }
}
