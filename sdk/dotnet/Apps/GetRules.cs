// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Onelogin.Apps
{
    public static class GetRules
    {
        public static Task<GetRulesResult> InvokeAsync(GetRulesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRulesResult>("onelogin:apps/getRules:getRules", args ?? new GetRulesArgs(), options.WithDefaults());

        public static Output<GetRulesResult> Invoke(GetRulesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRulesResult>("onelogin:apps/getRules:getRules", args ?? new GetRulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRulesArgs : global::Pulumi.InvokeArgs
    {
        [Input("actions")]
        private List<Inputs.GetRulesActionArgs>? _actions;
        public List<Inputs.GetRulesActionArgs> Actions
        {
            get => _actions ?? (_actions = new List<Inputs.GetRulesActionArgs>());
            set => _actions = value;
        }

        [Input("appsId", required: true)]
        public string AppsId { get; set; } = null!;

        [Input("conditions")]
        private List<Inputs.GetRulesConditionArgs>? _conditions;
        public List<Inputs.GetRulesConditionArgs> Conditions
        {
            get => _conditions ?? (_conditions = new List<Inputs.GetRulesConditionArgs>());
            set => _conditions = value;
        }

        [Input("enabled")]
        public bool? Enabled { get; set; }

        [Input("filters")]
        private List<Inputs.GetRulesFilterArgs>? _filters;
        public List<Inputs.GetRulesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetRulesFilterArgs>());
            set => _filters = value;
        }

        [Input("match")]
        public string? Match { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("position")]
        public int? Position { get; set; }

        public GetRulesArgs()
        {
        }
        public static new GetRulesArgs Empty => new GetRulesArgs();
    }

    public sealed class GetRulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("actions")]
        private InputList<Inputs.GetRulesActionInputArgs>? _actions;
        public InputList<Inputs.GetRulesActionInputArgs> Actions
        {
            get => _actions ?? (_actions = new InputList<Inputs.GetRulesActionInputArgs>());
            set => _actions = value;
        }

        [Input("appsId", required: true)]
        public Input<string> AppsId { get; set; } = null!;

        [Input("conditions")]
        private InputList<Inputs.GetRulesConditionInputArgs>? _conditions;
        public InputList<Inputs.GetRulesConditionInputArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Inputs.GetRulesConditionInputArgs>());
            set => _conditions = value;
        }

        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetRulesFilterInputArgs>? _filters;
        public InputList<Inputs.GetRulesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetRulesFilterInputArgs>());
            set => _filters = value;
        }

        [Input("match")]
        public Input<string>? Match { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("position")]
        public Input<int>? Position { get; set; }

        public GetRulesInvokeArgs()
        {
        }
        public static new GetRulesInvokeArgs Empty => new GetRulesInvokeArgs();
    }


    [OutputType]
    public sealed class GetRulesResult
    {
        public readonly ImmutableArray<Outputs.GetRulesActionResult> Actions;
        public readonly string AppsId;
        public readonly ImmutableArray<Outputs.GetRulesConditionResult> Conditions;
        public readonly bool Enabled;
        public readonly ImmutableArray<Outputs.GetRulesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Match;
        public readonly string Name;
        public readonly int Position;

        [OutputConstructor]
        private GetRulesResult(
            ImmutableArray<Outputs.GetRulesActionResult> actions,

            string appsId,

            ImmutableArray<Outputs.GetRulesConditionResult> conditions,

            bool enabled,

            ImmutableArray<Outputs.GetRulesFilterResult> filters,

            string id,

            string match,

            string name,

            int position)
        {
            Actions = actions;
            AppsId = appsId;
            Conditions = conditions;
            Enabled = enabled;
            Filters = filters;
            Id = id;
            Match = match;
            Name = name;
            Position = position;
        }
    }
}
