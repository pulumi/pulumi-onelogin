// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Onelogin.Apps
{
    [OneloginResourceType("onelogin:apps/rules:Rules")]
    public partial class Rules : global::Pulumi.CustomResource
    {
        [Output("actions")]
        public Output<ImmutableArray<Outputs.RulesAction>> Actions { get; private set; } = null!;

        [Output("appId")]
        public Output<string> AppId { get; private set; } = null!;

        [Output("conditions")]
        public Output<ImmutableArray<Outputs.RulesCondition>> Conditions { get; private set; } = null!;

        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        [Output("match")]
        public Output<string> Match { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("position")]
        public Output<int> Position { get; private set; } = null!;


        /// <summary>
        /// Create a Rules resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Rules(string name, RulesArgs args, CustomResourceOptions? options = null)
            : base("onelogin:apps/rules:Rules", name, args ?? new RulesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Rules(string name, Input<string> id, RulesState? state = null, CustomResourceOptions? options = null)
            : base("onelogin:apps/rules:Rules", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Rules resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Rules Get(string name, Input<string> id, RulesState? state = null, CustomResourceOptions? options = null)
        {
            return new Rules(name, id, state, options);
        }
    }

    public sealed class RulesArgs : global::Pulumi.ResourceArgs
    {
        [Input("actions")]
        private InputList<Inputs.RulesActionArgs>? _actions;
        public InputList<Inputs.RulesActionArgs> Actions
        {
            get => _actions ?? (_actions = new InputList<Inputs.RulesActionArgs>());
            set => _actions = value;
        }

        [Input("appId", required: true)]
        public Input<string> AppId { get; set; } = null!;

        [Input("conditions")]
        private InputList<Inputs.RulesConditionArgs>? _conditions;
        public InputList<Inputs.RulesConditionArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Inputs.RulesConditionArgs>());
            set => _conditions = value;
        }

        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("match", required: true)]
        public Input<string> Match { get; set; } = null!;

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("position")]
        public Input<int>? Position { get; set; }

        public RulesArgs()
        {
        }
        public static new RulesArgs Empty => new RulesArgs();
    }

    public sealed class RulesState : global::Pulumi.ResourceArgs
    {
        [Input("actions")]
        private InputList<Inputs.RulesActionGetArgs>? _actions;
        public InputList<Inputs.RulesActionGetArgs> Actions
        {
            get => _actions ?? (_actions = new InputList<Inputs.RulesActionGetArgs>());
            set => _actions = value;
        }

        [Input("appId")]
        public Input<string>? AppId { get; set; }

        [Input("conditions")]
        private InputList<Inputs.RulesConditionGetArgs>? _conditions;
        public InputList<Inputs.RulesConditionGetArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Inputs.RulesConditionGetArgs>());
            set => _conditions = value;
        }

        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("match")]
        public Input<string>? Match { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("position")]
        public Input<int>? Position { get; set; }

        public RulesState()
        {
        }
        public static new RulesState Empty => new RulesState();
    }
}
