// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Onelogin.Apps
{
    public static class GetConditionsValues
    {
        public static Task<GetConditionsValuesResult> InvokeAsync(GetConditionsValuesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConditionsValuesResult>("onelogin:apps/getConditionsValues:getConditionsValues", args ?? new GetConditionsValuesArgs(), options.WithDefaults());

        public static Output<GetConditionsValuesResult> Invoke(GetConditionsValuesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConditionsValuesResult>("onelogin:apps/getConditionsValues:getConditionsValues", args ?? new GetConditionsValuesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConditionsValuesArgs : global::Pulumi.InvokeArgs
    {
        [Input("appsId", required: true)]
        public string AppsId { get; set; } = null!;

        [Input("conditionsId", required: true)]
        public string ConditionsId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetConditionsValuesFilterArgs>? _filters;
        public List<Inputs.GetConditionsValuesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetConditionsValuesFilterArgs>());
            set => _filters = value;
        }

        [Input("name")]
        public string? Name { get; set; }

        [Input("value")]
        public string? Value { get; set; }

        public GetConditionsValuesArgs()
        {
        }
        public static new GetConditionsValuesArgs Empty => new GetConditionsValuesArgs();
    }

    public sealed class GetConditionsValuesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("appsId", required: true)]
        public Input<string> AppsId { get; set; } = null!;

        [Input("conditionsId", required: true)]
        public Input<string> ConditionsId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetConditionsValuesFilterInputArgs>? _filters;
        public InputList<Inputs.GetConditionsValuesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetConditionsValuesFilterInputArgs>());
            set => _filters = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("value")]
        public Input<string>? Value { get; set; }

        public GetConditionsValuesInvokeArgs()
        {
        }
        public static new GetConditionsValuesInvokeArgs Empty => new GetConditionsValuesInvokeArgs();
    }


    [OutputType]
    public sealed class GetConditionsValuesResult
    {
        public readonly string AppsId;
        public readonly string ConditionsId;
        public readonly ImmutableArray<Outputs.GetConditionsValuesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string Value;

        [OutputConstructor]
        private GetConditionsValuesResult(
            string appsId,

            string conditionsId,

            ImmutableArray<Outputs.GetConditionsValuesFilterResult> filters,

            string id,

            string name,

            string value)
        {
            AppsId = appsId;
            ConditionsId = conditionsId;
            Filters = filters;
            Id = id;
            Name = name;
            Value = value;
        }
    }
}
