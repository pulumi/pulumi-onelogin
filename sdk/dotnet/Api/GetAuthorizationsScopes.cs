// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Onelogin.Api
{
    public static class GetAuthorizationsScopes
    {
        public static Task<GetAuthorizationsScopesResult> InvokeAsync(GetAuthorizationsScopesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAuthorizationsScopesResult>("onelogin:api/getAuthorizationsScopes:getAuthorizationsScopes", args ?? new GetAuthorizationsScopesArgs(), options.WithDefaults());

        public static Output<GetAuthorizationsScopesResult> Invoke(GetAuthorizationsScopesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAuthorizationsScopesResult>("onelogin:api/getAuthorizationsScopes:getAuthorizationsScopes", args ?? new GetAuthorizationsScopesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAuthorizationsScopesArgs : global::Pulumi.InvokeArgs
    {
        [Input("apiAuthorizationsId", required: true)]
        public string ApiAuthorizationsId { get; set; } = null!;

        [Input("configuration")]
        public Inputs.GetAuthorizationsScopesConfigurationArgs? Configuration { get; set; }

        [Input("description")]
        public string? Description { get; set; }

        [Input("filters")]
        private List<Inputs.GetAuthorizationsScopesFilterArgs>? _filters;
        public List<Inputs.GetAuthorizationsScopesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetAuthorizationsScopesFilterArgs>());
            set => _filters = value;
        }

        [Input("name")]
        public string? Name { get; set; }

        public GetAuthorizationsScopesArgs()
        {
        }
        public static new GetAuthorizationsScopesArgs Empty => new GetAuthorizationsScopesArgs();
    }

    public sealed class GetAuthorizationsScopesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("apiAuthorizationsId", required: true)]
        public Input<string> ApiAuthorizationsId { get; set; } = null!;

        [Input("configuration")]
        public Input<Inputs.GetAuthorizationsScopesConfigurationInputArgs>? Configuration { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetAuthorizationsScopesFilterInputArgs>? _filters;
        public InputList<Inputs.GetAuthorizationsScopesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetAuthorizationsScopesFilterInputArgs>());
            set => _filters = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetAuthorizationsScopesInvokeArgs()
        {
        }
        public static new GetAuthorizationsScopesInvokeArgs Empty => new GetAuthorizationsScopesInvokeArgs();
    }


    [OutputType]
    public sealed class GetAuthorizationsScopesResult
    {
        public readonly string ApiAuthorizationsId;
        public readonly Outputs.GetAuthorizationsScopesConfigurationResult Configuration;
        public readonly string Description;
        public readonly ImmutableArray<Outputs.GetAuthorizationsScopesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;

        [OutputConstructor]
        private GetAuthorizationsScopesResult(
            string apiAuthorizationsId,

            Outputs.GetAuthorizationsScopesConfigurationResult configuration,

            string description,

            ImmutableArray<Outputs.GetAuthorizationsScopesFilterResult> filters,

            string id,

            string name)
        {
            ApiAuthorizationsId = apiAuthorizationsId;
            Configuration = configuration;
            Description = description;
            Filters = filters;
            Id = id;
            Name = name;
        }
    }
}
