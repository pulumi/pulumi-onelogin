// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Onelogin.Api
{
    public static class GetAuthorizations
    {
        public static Task<GetAuthorizationsResult> InvokeAsync(GetAuthorizationsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAuthorizationsResult>("onelogin:api/getAuthorizations:getAuthorizations", args ?? new GetAuthorizationsArgs(), options.WithDefaults());

        public static Output<GetAuthorizationsResult> Invoke(GetAuthorizationsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAuthorizationsResult>("onelogin:api/getAuthorizations:getAuthorizations", args ?? new GetAuthorizationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAuthorizationsArgs : global::Pulumi.InvokeArgs
    {
        [Input("configuration")]
        public Inputs.GetAuthorizationsConfigurationArgs? Configuration { get; set; }

        [Input("description")]
        public string? Description { get; set; }

        [Input("filters")]
        private List<Inputs.GetAuthorizationsFilterArgs>? _filters;
        public List<Inputs.GetAuthorizationsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetAuthorizationsFilterArgs>());
            set => _filters = value;
        }

        [Input("name")]
        public string? Name { get; set; }

        public GetAuthorizationsArgs()
        {
        }
        public static new GetAuthorizationsArgs Empty => new GetAuthorizationsArgs();
    }

    public sealed class GetAuthorizationsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("configuration")]
        public Input<Inputs.GetAuthorizationsConfigurationInputArgs>? Configuration { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetAuthorizationsFilterInputArgs>? _filters;
        public InputList<Inputs.GetAuthorizationsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetAuthorizationsFilterInputArgs>());
            set => _filters = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetAuthorizationsInvokeArgs()
        {
        }
        public static new GetAuthorizationsInvokeArgs Empty => new GetAuthorizationsInvokeArgs();
    }


    [OutputType]
    public sealed class GetAuthorizationsResult
    {
        public readonly Outputs.GetAuthorizationsConfigurationResult Configuration;
        public readonly string Description;
        public readonly ImmutableArray<Outputs.GetAuthorizationsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;

        [OutputConstructor]
        private GetAuthorizationsResult(
            Outputs.GetAuthorizationsConfigurationResult configuration,

            string description,

            ImmutableArray<Outputs.GetAuthorizationsFilterResult> filters,

            string id,

            string name)
        {
            Configuration = configuration;
            Description = description;
            Filters = filters;
            Id = id;
            Name = name;
        }
    }
}
