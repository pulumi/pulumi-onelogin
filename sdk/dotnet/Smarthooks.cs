// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Onelogin
{
    [OneloginResourceType("onelogin:index/smarthooks:Smarthooks")]
    public partial class Smarthooks : global::Pulumi.CustomResource
    {
        [Output("conditions")]
        public Output<ImmutableArray<Outputs.SmarthooksCondition>> Conditions { get; private set; } = null!;

        [Output("contextVersion")]
        public Output<string> ContextVersion { get; private set; } = null!;

        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        [Output("disabled")]
        public Output<bool> Disabled { get; private set; } = null!;

        [Output("envVars")]
        public Output<ImmutableArray<string>> EnvVars { get; private set; } = null!;

        [Output("function")]
        public Output<string> Function { get; private set; } = null!;

        [Output("options")]
        public Output<ImmutableArray<Outputs.SmarthooksOption>> Options { get; private set; } = null!;

        [Output("packages")]
        public Output<ImmutableDictionary<string, string>> Packages { get; private set; } = null!;

        [Output("retries")]
        public Output<int> Retries { get; private set; } = null!;

        [Output("runtime")]
        public Output<string> Runtime { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("timeout")]
        public Output<int> Timeout { get; private set; } = null!;

        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a Smarthooks resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Smarthooks(string name, SmarthooksArgs args, CustomResourceOptions? options = null)
            : base("onelogin:index/smarthooks:Smarthooks", name, args ?? new SmarthooksArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Smarthooks(string name, Input<string> id, SmarthooksState? state = null, CustomResourceOptions? options = null)
            : base("onelogin:index/smarthooks:Smarthooks", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Smarthooks resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Smarthooks Get(string name, Input<string> id, SmarthooksState? state = null, CustomResourceOptions? options = null)
        {
            return new Smarthooks(name, id, state, options);
        }
    }

    public sealed class SmarthooksArgs : global::Pulumi.ResourceArgs
    {
        [Input("conditions")]
        private InputList<Inputs.SmarthooksConditionArgs>? _conditions;
        public InputList<Inputs.SmarthooksConditionArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Inputs.SmarthooksConditionArgs>());
            set => _conditions = value;
        }

        [Input("contextVersion")]
        public Input<string>? ContextVersion { get; set; }

        [Input("disabled", required: true)]
        public Input<bool> Disabled { get; set; } = null!;

        [Input("envVars", required: true)]
        private InputList<string>? _envVars;
        public InputList<string> EnvVars
        {
            get => _envVars ?? (_envVars = new InputList<string>());
            set => _envVars = value;
        }

        [Input("function", required: true)]
        public Input<string> Function { get; set; } = null!;

        [Input("options")]
        private InputList<Inputs.SmarthooksOptionArgs>? _options;
        public InputList<Inputs.SmarthooksOptionArgs> Options
        {
            get => _options ?? (_options = new InputList<Inputs.SmarthooksOptionArgs>());
            set => _options = value;
        }

        [Input("packages", required: true)]
        private InputMap<string>? _packages;
        public InputMap<string> Packages
        {
            get => _packages ?? (_packages = new InputMap<string>());
            set => _packages = value;
        }

        [Input("retries", required: true)]
        public Input<int> Retries { get; set; } = null!;

        [Input("runtime", required: true)]
        public Input<string> Runtime { get; set; } = null!;

        [Input("timeout", required: true)]
        public Input<int> Timeout { get; set; } = null!;

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public SmarthooksArgs()
        {
        }
        public static new SmarthooksArgs Empty => new SmarthooksArgs();
    }

    public sealed class SmarthooksState : global::Pulumi.ResourceArgs
    {
        [Input("conditions")]
        private InputList<Inputs.SmarthooksConditionGetArgs>? _conditions;
        public InputList<Inputs.SmarthooksConditionGetArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Inputs.SmarthooksConditionGetArgs>());
            set => _conditions = value;
        }

        [Input("contextVersion")]
        public Input<string>? ContextVersion { get; set; }

        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("disabled")]
        public Input<bool>? Disabled { get; set; }

        [Input("envVars")]
        private InputList<string>? _envVars;
        public InputList<string> EnvVars
        {
            get => _envVars ?? (_envVars = new InputList<string>());
            set => _envVars = value;
        }

        [Input("function")]
        public Input<string>? Function { get; set; }

        [Input("options")]
        private InputList<Inputs.SmarthooksOptionGetArgs>? _options;
        public InputList<Inputs.SmarthooksOptionGetArgs> Options
        {
            get => _options ?? (_options = new InputList<Inputs.SmarthooksOptionGetArgs>());
            set => _options = value;
        }

        [Input("packages")]
        private InputMap<string>? _packages;
        public InputMap<string> Packages
        {
            get => _packages ?? (_packages = new InputMap<string>());
            set => _packages = value;
        }

        [Input("retries")]
        public Input<int>? Retries { get; set; }

        [Input("runtime")]
        public Input<string>? Runtime { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public SmarthooksState()
        {
        }
        public static new SmarthooksState Empty => new SmarthooksState();
    }
}
