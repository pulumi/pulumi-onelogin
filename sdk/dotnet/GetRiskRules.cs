// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Onelogin
{
    public static class GetRiskRules
    {
        public static Task<GetRiskRulesResult> InvokeAsync(GetRiskRulesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRiskRulesResult>("onelogin:index/getRiskRules:getRiskRules", args ?? new GetRiskRulesArgs(), options.WithDefaults());

        public static Output<GetRiskRulesResult> Invoke(GetRiskRulesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRiskRulesResult>("onelogin:index/getRiskRules:getRiskRules", args ?? new GetRiskRulesInvokeArgs(), options.WithDefaults());

        public static Output<GetRiskRulesResult> Invoke(GetRiskRulesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRiskRulesResult>("onelogin:index/getRiskRules:getRiskRules", args ?? new GetRiskRulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRiskRulesArgs : global::Pulumi.InvokeArgs
    {
        [Input("description")]
        public string? Description { get; set; }

        [Input("filter")]
        private List<Inputs.GetRiskRulesFilterArgs>? _filter;
        public List<Inputs.GetRiskRulesFilterArgs> Filter
        {
            get => _filter ?? (_filter = new List<Inputs.GetRiskRulesFilterArgs>());
            set => _filter = value;
        }

        [Input("filters")]
        private List<string>? _filters;
        public List<string> Filters
        {
            get => _filters ?? (_filters = new List<string>());
            set => _filters = value;
        }

        [Input("name")]
        public string? Name { get; set; }

        [Input("source")]
        public Inputs.GetRiskRulesSourceArgs? Source { get; set; }

        [Input("target")]
        public string? Target { get; set; }

        [Input("type")]
        public string? Type { get; set; }

        public GetRiskRulesArgs()
        {
        }
        public static new GetRiskRulesArgs Empty => new GetRiskRulesArgs();
    }

    public sealed class GetRiskRulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("filter")]
        private InputList<Inputs.GetRiskRulesFilterInputArgs>? _filter;
        public InputList<Inputs.GetRiskRulesFilterInputArgs> Filter
        {
            get => _filter ?? (_filter = new InputList<Inputs.GetRiskRulesFilterInputArgs>());
            set => _filter = value;
        }

        [Input("filters")]
        private InputList<string>? _filters;
        public InputList<string> Filters
        {
            get => _filters ?? (_filters = new InputList<string>());
            set => _filters = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("source")]
        public Input<Inputs.GetRiskRulesSourceInputArgs>? Source { get; set; }

        [Input("target")]
        public Input<string>? Target { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public GetRiskRulesInvokeArgs()
        {
        }
        public static new GetRiskRulesInvokeArgs Empty => new GetRiskRulesInvokeArgs();
    }


    [OutputType]
    public sealed class GetRiskRulesResult
    {
        public readonly string Description;
        public readonly ImmutableArray<Outputs.GetRiskRulesFilterResult> Filter;
        public readonly ImmutableArray<string> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly Outputs.GetRiskRulesSourceResult Source;
        public readonly string Target;
        public readonly string Type;

        [OutputConstructor]
        private GetRiskRulesResult(
            string description,

            ImmutableArray<Outputs.GetRiskRulesFilterResult> filter,

            ImmutableArray<string> filters,

            string id,

            string name,

            Outputs.GetRiskRulesSourceResult source,

            string target,

            string type)
        {
            Description = description;
            Filter = filter;
            Filters = filters;
            Id = id;
            Name = name;
            Source = source;
            Target = target;
            Type = type;
        }
    }
}
