// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Onelogin
{
    [OneloginResourceType("onelogin:index/user:User")]
    public partial class User : global::Pulumi.CustomResource
    {
        [Output("activatedAt")]
        public Output<string?> ActivatedAt { get; private set; } = null!;

        /// <summary>
        /// Free text related to the user.
        /// </summary>
        [Output("comment")]
        public Output<string?> Comment { get; private set; } = null!;

        /// <summary>
        /// The user's company.
        /// </summary>
        [Output("company")]
        public Output<string?> Company { get; private set; } = null!;

        [Output("createdAt")]
        public Output<string?> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The user's department.
        /// </summary>
        [Output("department")]
        public Output<string?> Department { get; private set; } = null!;

        /// <summary>
        /// The ID of the OneLogin Directory of the user.
        /// </summary>
        [Output("directoryId")]
        public Output<int?> DirectoryId { get; private set; } = null!;

        /// <summary>
        /// The distinguished name of the user.
        /// </summary>
        [Output("distinguishedName")]
        public Output<string?> DistinguishedName { get; private set; } = null!;

        /// <summary>
        /// A valid email for the user.
        /// </summary>
        [Output("email")]
        public Output<string?> Email { get; private set; } = null!;

        /// <summary>
        /// The ID of the user in an external directory.
        /// </summary>
        [Output("externalId")]
        public Output<string?> ExternalId { get; private set; } = null!;

        /// <summary>
        /// The user's first name.
        /// </summary>
        [Output("firstname")]
        public Output<string?> Firstname { get; private set; } = null!;

        /// <summary>
        /// The ID of the Group in OneLogin that the user is assigned to.
        /// </summary>
        [Output("groupId")]
        public Output<int?> GroupId { get; private set; } = null!;

        [Output("invalidLoginAttempts")]
        public Output<int?> InvalidLoginAttempts { get; private set; } = null!;

        [Output("invitationSentAt")]
        public Output<string?> InvitationSentAt { get; private set; } = null!;

        [Output("lastLogin")]
        public Output<string?> LastLogin { get; private set; } = null!;

        /// <summary>
        /// The user's last name.
        /// </summary>
        [Output("lastname")]
        public Output<string?> Lastname { get; private set; } = null!;

        [Output("lockedUntil")]
        public Output<string?> LockedUntil { get; private set; } = null!;

        /// <summary>
        /// The ID of the user's manager in Active Directory.
        /// </summary>
        [Output("managerAdId")]
        public Output<string?> ManagerAdId { get; private set; } = null!;

        /// <summary>
        /// The OneLogin User ID for the user's manager.
        /// </summary>
        [Output("managerUserId")]
        public Output<string?> ManagerUserId { get; private set; } = null!;

        /// <summary>
        /// The user's directory membership.
        /// </summary>
        [Output("memberOf")]
        public Output<string?> MemberOf { get; private set; } = null!;

        /// <summary>
        /// The password to set for a user.
        /// </summary>
        [Output("password")]
        public Output<string?> Password { get; private set; } = null!;

        /// <summary>
        /// Use this when importing a password that's already hashed. Prepend the salt value to the cleartext password value before
        /// SHA-256-encoding it
        /// </summary>
        [Output("passwordAlgorithm")]
        public Output<string?> PasswordAlgorithm { get; private set; } = null!;

        [Output("passwordChangedAt")]
        public Output<string?> PasswordChangedAt { get; private set; } = null!;

        /// <summary>
        /// Required if the password is being set.
        /// </summary>
        [Output("passwordConfirmation")]
        public Output<string?> PasswordConfirmation { get; private set; } = null!;

        /// <summary>
        /// The E.164 format phone number for a user.
        /// </summary>
        [Output("phone")]
        public Output<string?> Phone { get; private set; } = null!;

        [Output("preferredLocaleCode")]
        public Output<string?> PreferredLocaleCode { get; private set; } = null!;

        /// <summary>
        /// A list of OneLogin Role IDs of the user
        /// </summary>
        [Output("roleIds")]
        public Output<ImmutableArray<int>> RoleIds { get; private set; } = null!;

        /// <summary>
        /// The salt value used with the password_algorithm.
        /// </summary>
        [Output("salt")]
        public Output<string?> Salt { get; private set; } = null!;

        /// <summary>
        /// The user's Active Directory username.
        /// </summary>
        [Output("samaccountName")]
        public Output<string?> SamaccountName { get; private set; } = null!;

        [Output("state")]
        public Output<int?> State { get; private set; } = null!;

        [Output("status")]
        public Output<int?> Status { get; private set; } = null!;

        /// <summary>
        /// The user's job title.
        /// </summary>
        [Output("title")]
        public Output<string?> Title { get; private set; } = null!;

        /// <summary>
        /// The ID of the OneLogin Trusted IDP of the user.
        /// </summary>
        [Output("trustedIdpId")]
        public Output<int?> TrustedIdpId { get; private set; } = null!;

        [Output("updatedAt")]
        public Output<string?> UpdatedAt { get; private set; } = null!;

        /// <summary>
        /// A username for the user.
        /// </summary>
        [Output("username")]
        public Output<string?> Username { get; private set; } = null!;

        /// <summary>
        /// The principle name of the user.
        /// </summary>
        [Output("userprincipalname")]
        public Output<string?> Userprincipalname { get; private set; } = null!;


        /// <summary>
        /// Create a User resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public User(string name, UserArgs? args = null, CustomResourceOptions? options = null)
            : base("onelogin:index/user:User", name, args ?? new UserArgs(), MakeResourceOptions(options, ""))
        {
        }

        private User(string name, Input<string> id, UserState? state = null, CustomResourceOptions? options = null)
            : base("onelogin:index/user:User", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing User resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static User Get(string name, Input<string> id, UserState? state = null, CustomResourceOptions? options = null)
        {
            return new User(name, id, state, options);
        }
    }

    public sealed class UserArgs : global::Pulumi.ResourceArgs
    {
        [Input("activatedAt")]
        public Input<string>? ActivatedAt { get; set; }

        /// <summary>
        /// Free text related to the user.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// The user's company.
        /// </summary>
        [Input("company")]
        public Input<string>? Company { get; set; }

        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The user's department.
        /// </summary>
        [Input("department")]
        public Input<string>? Department { get; set; }

        /// <summary>
        /// The ID of the OneLogin Directory of the user.
        /// </summary>
        [Input("directoryId")]
        public Input<int>? DirectoryId { get; set; }

        /// <summary>
        /// The distinguished name of the user.
        /// </summary>
        [Input("distinguishedName")]
        public Input<string>? DistinguishedName { get; set; }

        /// <summary>
        /// A valid email for the user.
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        /// <summary>
        /// The ID of the user in an external directory.
        /// </summary>
        [Input("externalId")]
        public Input<string>? ExternalId { get; set; }

        /// <summary>
        /// The user's first name.
        /// </summary>
        [Input("firstname")]
        public Input<string>? Firstname { get; set; }

        /// <summary>
        /// The ID of the Group in OneLogin that the user is assigned to.
        /// </summary>
        [Input("groupId")]
        public Input<int>? GroupId { get; set; }

        [Input("invalidLoginAttempts")]
        public Input<int>? InvalidLoginAttempts { get; set; }

        [Input("invitationSentAt")]
        public Input<string>? InvitationSentAt { get; set; }

        [Input("lastLogin")]
        public Input<string>? LastLogin { get; set; }

        /// <summary>
        /// The user's last name.
        /// </summary>
        [Input("lastname")]
        public Input<string>? Lastname { get; set; }

        [Input("lockedUntil")]
        public Input<string>? LockedUntil { get; set; }

        /// <summary>
        /// The ID of the user's manager in Active Directory.
        /// </summary>
        [Input("managerAdId")]
        public Input<string>? ManagerAdId { get; set; }

        /// <summary>
        /// The OneLogin User ID for the user's manager.
        /// </summary>
        [Input("managerUserId")]
        public Input<string>? ManagerUserId { get; set; }

        /// <summary>
        /// The user's directory membership.
        /// </summary>
        [Input("memberOf")]
        public Input<string>? MemberOf { get; set; }

        /// <summary>
        /// The password to set for a user.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// Use this when importing a password that's already hashed. Prepend the salt value to the cleartext password value before
        /// SHA-256-encoding it
        /// </summary>
        [Input("passwordAlgorithm")]
        public Input<string>? PasswordAlgorithm { get; set; }

        [Input("passwordChangedAt")]
        public Input<string>? PasswordChangedAt { get; set; }

        /// <summary>
        /// Required if the password is being set.
        /// </summary>
        [Input("passwordConfirmation")]
        public Input<string>? PasswordConfirmation { get; set; }

        /// <summary>
        /// The E.164 format phone number for a user.
        /// </summary>
        [Input("phone")]
        public Input<string>? Phone { get; set; }

        [Input("preferredLocaleCode")]
        public Input<string>? PreferredLocaleCode { get; set; }

        [Input("roleIds")]
        private InputList<int>? _roleIds;

        /// <summary>
        /// A list of OneLogin Role IDs of the user
        /// </summary>
        public InputList<int> RoleIds
        {
            get => _roleIds ?? (_roleIds = new InputList<int>());
            set => _roleIds = value;
        }

        /// <summary>
        /// The salt value used with the password_algorithm.
        /// </summary>
        [Input("salt")]
        public Input<string>? Salt { get; set; }

        /// <summary>
        /// The user's Active Directory username.
        /// </summary>
        [Input("samaccountName")]
        public Input<string>? SamaccountName { get; set; }

        [Input("state")]
        public Input<int>? State { get; set; }

        [Input("status")]
        public Input<int>? Status { get; set; }

        /// <summary>
        /// The user's job title.
        /// </summary>
        [Input("title")]
        public Input<string>? Title { get; set; }

        /// <summary>
        /// The ID of the OneLogin Trusted IDP of the user.
        /// </summary>
        [Input("trustedIdpId")]
        public Input<int>? TrustedIdpId { get; set; }

        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        /// <summary>
        /// A username for the user.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        /// <summary>
        /// The principle name of the user.
        /// </summary>
        [Input("userprincipalname")]
        public Input<string>? Userprincipalname { get; set; }

        public UserArgs()
        {
        }
        public static new UserArgs Empty => new UserArgs();
    }

    public sealed class UserState : global::Pulumi.ResourceArgs
    {
        [Input("activatedAt")]
        public Input<string>? ActivatedAt { get; set; }

        /// <summary>
        /// Free text related to the user.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// The user's company.
        /// </summary>
        [Input("company")]
        public Input<string>? Company { get; set; }

        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The user's department.
        /// </summary>
        [Input("department")]
        public Input<string>? Department { get; set; }

        /// <summary>
        /// The ID of the OneLogin Directory of the user.
        /// </summary>
        [Input("directoryId")]
        public Input<int>? DirectoryId { get; set; }

        /// <summary>
        /// The distinguished name of the user.
        /// </summary>
        [Input("distinguishedName")]
        public Input<string>? DistinguishedName { get; set; }

        /// <summary>
        /// A valid email for the user.
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        /// <summary>
        /// The ID of the user in an external directory.
        /// </summary>
        [Input("externalId")]
        public Input<string>? ExternalId { get; set; }

        /// <summary>
        /// The user's first name.
        /// </summary>
        [Input("firstname")]
        public Input<string>? Firstname { get; set; }

        /// <summary>
        /// The ID of the Group in OneLogin that the user is assigned to.
        /// </summary>
        [Input("groupId")]
        public Input<int>? GroupId { get; set; }

        [Input("invalidLoginAttempts")]
        public Input<int>? InvalidLoginAttempts { get; set; }

        [Input("invitationSentAt")]
        public Input<string>? InvitationSentAt { get; set; }

        [Input("lastLogin")]
        public Input<string>? LastLogin { get; set; }

        /// <summary>
        /// The user's last name.
        /// </summary>
        [Input("lastname")]
        public Input<string>? Lastname { get; set; }

        [Input("lockedUntil")]
        public Input<string>? LockedUntil { get; set; }

        /// <summary>
        /// The ID of the user's manager in Active Directory.
        /// </summary>
        [Input("managerAdId")]
        public Input<string>? ManagerAdId { get; set; }

        /// <summary>
        /// The OneLogin User ID for the user's manager.
        /// </summary>
        [Input("managerUserId")]
        public Input<string>? ManagerUserId { get; set; }

        /// <summary>
        /// The user's directory membership.
        /// </summary>
        [Input("memberOf")]
        public Input<string>? MemberOf { get; set; }

        /// <summary>
        /// The password to set for a user.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// Use this when importing a password that's already hashed. Prepend the salt value to the cleartext password value before
        /// SHA-256-encoding it
        /// </summary>
        [Input("passwordAlgorithm")]
        public Input<string>? PasswordAlgorithm { get; set; }

        [Input("passwordChangedAt")]
        public Input<string>? PasswordChangedAt { get; set; }

        /// <summary>
        /// Required if the password is being set.
        /// </summary>
        [Input("passwordConfirmation")]
        public Input<string>? PasswordConfirmation { get; set; }

        /// <summary>
        /// The E.164 format phone number for a user.
        /// </summary>
        [Input("phone")]
        public Input<string>? Phone { get; set; }

        [Input("preferredLocaleCode")]
        public Input<string>? PreferredLocaleCode { get; set; }

        [Input("roleIds")]
        private InputList<int>? _roleIds;

        /// <summary>
        /// A list of OneLogin Role IDs of the user
        /// </summary>
        public InputList<int> RoleIds
        {
            get => _roleIds ?? (_roleIds = new InputList<int>());
            set => _roleIds = value;
        }

        /// <summary>
        /// The salt value used with the password_algorithm.
        /// </summary>
        [Input("salt")]
        public Input<string>? Salt { get; set; }

        /// <summary>
        /// The user's Active Directory username.
        /// </summary>
        [Input("samaccountName")]
        public Input<string>? SamaccountName { get; set; }

        [Input("state")]
        public Input<int>? State { get; set; }

        [Input("status")]
        public Input<int>? Status { get; set; }

        /// <summary>
        /// The user's job title.
        /// </summary>
        [Input("title")]
        public Input<string>? Title { get; set; }

        /// <summary>
        /// The ID of the OneLogin Trusted IDP of the user.
        /// </summary>
        [Input("trustedIdpId")]
        public Input<int>? TrustedIdpId { get; set; }

        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        /// <summary>
        /// A username for the user.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        /// <summary>
        /// The principle name of the user.
        /// </summary>
        [Input("userprincipalname")]
        public Input<string>? Userprincipalname { get; set; }

        public UserState()
        {
        }
        public static new UserState Empty => new UserState();
    }
}
