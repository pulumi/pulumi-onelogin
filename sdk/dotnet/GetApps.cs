// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Onelogin
{
    public static class GetApps
    {
        public static Task<GetAppsResult> InvokeAsync(GetAppsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAppsResult>("onelogin:index/getApps:getApps", args ?? new GetAppsArgs(), options.WithDefaults());

        public static Output<GetAppsResult> Invoke(GetAppsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAppsResult>("onelogin:index/getApps:getApps", args ?? new GetAppsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAppsArgs : global::Pulumi.InvokeArgs
    {
        [Input("allowAssumedSignin")]
        public bool? AllowAssumedSignin { get; set; }

        [Input("authMethod")]
        public int? AuthMethod { get; set; }

        [Input("configuration")]
        public Inputs.GetAppsConfigurationArgs? Configuration { get; set; }

        [Input("connectorId")]
        public int? ConnectorId { get; set; }

        [Input("createdAt")]
        public string? CreatedAt { get; set; }

        [Input("description")]
        public string? Description { get; set; }

        [Input("enforcementPoint")]
        public Inputs.GetAppsEnforcementPointArgs? EnforcementPoint { get; set; }

        [Input("filters")]
        private List<Inputs.GetAppsFilterArgs>? _filters;
        public List<Inputs.GetAppsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetAppsFilterArgs>());
            set => _filters = value;
        }

        [Input("iconUrl")]
        public string? IconUrl { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("notes")]
        public string? Notes { get; set; }

        [Input("policyId")]
        public int? PolicyId { get; set; }

        [Input("provisioning")]
        public Inputs.GetAppsProvisioningArgs? Provisioning { get; set; }

        [Input("roleIds")]
        private List<int>? _roleIds;
        public List<int> RoleIds
        {
            get => _roleIds ?? (_roleIds = new List<int>());
            set => _roleIds = value;
        }

        [Input("tabId")]
        public int? TabId { get; set; }

        [Input("updatedAt")]
        public string? UpdatedAt { get; set; }

        [Input("visible")]
        public bool? Visible { get; set; }

        public GetAppsArgs()
        {
        }
        public static new GetAppsArgs Empty => new GetAppsArgs();
    }

    public sealed class GetAppsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("allowAssumedSignin")]
        public Input<bool>? AllowAssumedSignin { get; set; }

        [Input("authMethod")]
        public Input<int>? AuthMethod { get; set; }

        [Input("configuration")]
        public Input<Inputs.GetAppsConfigurationInputArgs>? Configuration { get; set; }

        [Input("connectorId")]
        public Input<int>? ConnectorId { get; set; }

        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("enforcementPoint")]
        public Input<Inputs.GetAppsEnforcementPointInputArgs>? EnforcementPoint { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetAppsFilterInputArgs>? _filters;
        public InputList<Inputs.GetAppsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetAppsFilterInputArgs>());
            set => _filters = value;
        }

        [Input("iconUrl")]
        public Input<string>? IconUrl { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("notes")]
        public Input<string>? Notes { get; set; }

        [Input("policyId")]
        public Input<int>? PolicyId { get; set; }

        [Input("provisioning")]
        public Input<Inputs.GetAppsProvisioningInputArgs>? Provisioning { get; set; }

        [Input("roleIds")]
        private InputList<int>? _roleIds;
        public InputList<int> RoleIds
        {
            get => _roleIds ?? (_roleIds = new InputList<int>());
            set => _roleIds = value;
        }

        [Input("tabId")]
        public Input<int>? TabId { get; set; }

        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        [Input("visible")]
        public Input<bool>? Visible { get; set; }

        public GetAppsInvokeArgs()
        {
        }
        public static new GetAppsInvokeArgs Empty => new GetAppsInvokeArgs();
    }


    [OutputType]
    public sealed class GetAppsResult
    {
        public readonly bool AllowAssumedSignin;
        public readonly int AuthMethod;
        public readonly Outputs.GetAppsConfigurationResult Configuration;
        public readonly int ConnectorId;
        public readonly string CreatedAt;
        public readonly string Description;
        public readonly Outputs.GetAppsEnforcementPointResult EnforcementPoint;
        public readonly ImmutableArray<Outputs.GetAppsFilterResult> Filters;
        public readonly string IconUrl;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string Notes;
        public readonly int PolicyId;
        public readonly Outputs.GetAppsProvisioningResult Provisioning;
        public readonly ImmutableArray<int> RoleIds;
        public readonly int TabId;
        public readonly string UpdatedAt;
        public readonly bool Visible;

        [OutputConstructor]
        private GetAppsResult(
            bool allowAssumedSignin,

            int authMethod,

            Outputs.GetAppsConfigurationResult configuration,

            int connectorId,

            string createdAt,

            string description,

            Outputs.GetAppsEnforcementPointResult enforcementPoint,

            ImmutableArray<Outputs.GetAppsFilterResult> filters,

            string iconUrl,

            string id,

            string name,

            string notes,

            int policyId,

            Outputs.GetAppsProvisioningResult provisioning,

            ImmutableArray<int> roleIds,

            int tabId,

            string updatedAt,

            bool visible)
        {
            AllowAssumedSignin = allowAssumedSignin;
            AuthMethod = authMethod;
            Configuration = configuration;
            ConnectorId = connectorId;
            CreatedAt = createdAt;
            Description = description;
            EnforcementPoint = enforcementPoint;
            Filters = filters;
            IconUrl = iconUrl;
            Id = id;
            Name = name;
            Notes = notes;
            PolicyId = policyId;
            Provisioning = provisioning;
            RoleIds = roleIds;
            TabId = tabId;
            UpdatedAt = updatedAt;
            Visible = visible;
        }
    }
}
