{
    "name": "onelogin",
    "description": "A Pulumi package for creating and managing OneLogin cloud resources.",
    "keywords": [
        "pulumi",
        "onelogin"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`onelogin` Terraform Provider](https://github.com/onelogin/terraform-provider-onelogin).",
    "repository": "https://github.com/pulumi/pulumi-onelogin",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "clientId": {
                "type": "string"
            },
            "clientSecret": {
                "type": "string"
            },
            "region": {
                "type": "string"
            },
            "url": {
                "type": "string"
            }
        },
        "defaults": [
            "clientId",
            "clientSecret"
        ]
    },
    "types": {
        "onelogin:index/AppParameter:AppParameter": {
            "properties": {
                "attributesTransformations": {
                    "type": "string",
                    "description": "Describes how the app's attributes should be transformed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultValues": {
                    "type": "string",
                    "description": "Default Parameter values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includeInSamlAssertion": {
                    "type": "boolean",
                    "description": "When true, this parameter will be included in a SAML assertion payload.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "description": "The can only be set when creating a new parameter. It can not be updated.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "paramId": {
                    "type": "integer",
                    "description": "The parameter ID.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "paramKeyName": {
                    "type": "string",
                    "description": "Name to represent the parameter in OneLogin.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "provisionedEntitlements": {
                    "type": "boolean",
                    "description": "Provisioned access entitlements for the app. Defaults to `false`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "safeEntitlementsEnabled": {
                    "type": "boolean",
                    "description": "Indicates that the parameter is used to support creating entitlements using OneLogin Mappings. Defaults to `false`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "skipIfBlank": {
                    "type": "boolean",
                    "description": "Flag to let the SCIM provisioner know not include this value if it's blank. Defaults to `false`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAttributeMacros": {
                    "type": "string",
                    "description": "When `user_attribute_mappings` is set to `_macro_` this macro will be used to assign the parameter value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAttributeMappings": {
                    "type": "string",
                    "description": "A user attribute to map values from. For custom attributes prefix the name of the attribute with `custom_attribute_`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "string",
                    "description": "Parameter values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "paramKeyName"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "attributesTransformations",
                        "defaultValues",
                        "includeInSamlAssertion",
                        "label",
                        "paramId",
                        "paramKeyName",
                        "provisionedEntitlements",
                        "safeEntitlementsEnabled",
                        "skipIfBlank",
                        "userAttributeMacros",
                        "userAttributeMappings",
                        "values"
                    ]
                }
            }
        },
        "onelogin:index/AppRuleAction:AppRuleAction": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "The action to apply. See [List Actions](https://developers.onelogin.com/api-docs/2/app-rules/list-conditions) for possible values. *Note*: The action `set_role_from_existing` may also be used, however doing so will always clear the `expression` field as it is not accepted when mapping a rule from existing roles.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expression": {
                    "type": "string",
                    "description": "A regular expression to extract a value. Applies to provisionable, multi-selects, and string actions.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of strings. Only applicable to provisioned and set_* actions. Items in the array will be a plain text string or valid value for the selected action. See [List Action Values](https://developers.onelogin.com/api-docs/2/app-rules/list-action-values) for possible values. In most cases only a single item will be accepted in the array.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "action",
                "values"
            ]
        },
        "onelogin:index/AppRuleCondition:AppRuleCondition": {
            "properties": {
                "operator": {
                    "type": "string",
                    "description": "A valid operator for the selected condition source. See [List Condition Operators](https://developers.onelogin.com/api-docs/2/app-rules/list-condition-operators) for possible values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "description": "The source field to check. See [List Conditions](https://developers.onelogin.com/api-docs/2/app-rules/list-conditions) for possible values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "An array of strings. Only applicable to provisioned and set_* actions. Items in the array will be a plain text string or valid value for the selected action. See [List Action Values](https://developers.onelogin.com/api-docs/2/app-rules/list-action-values) for possible values. In most cases only a single item will be accepted in the array.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "source",
                "value"
            ]
        },
        "onelogin:index/AuthServerConfiguration:AuthServerConfiguration": {
            "properties": {
                "accessTokenExpirationMinutes": {
                    "type": "integer",
                    "description": "The number of minutes until the token expires\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "audiences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of API endpoints that will be returned in Access Tokens.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "refreshTokenExpirationMinutes": {
                    "type": "integer",
                    "description": "The number of minutes until the token expires\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceIdentifier": {
                    "type": "string",
                    "description": "Unique identifier for the API that the Authorization Server will issue Access Tokens for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "audiences",
                "resourceIdentifier"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessTokenExpirationMinutes",
                        "audiences",
                        "refreshTokenExpirationMinutes",
                        "resourceIdentifier"
                    ]
                }
            }
        },
        "onelogin:index/OidcAppParameter:OidcAppParameter": {
            "properties": {
                "attributesTransformations": {
                    "type": "string",
                    "description": "Describes how the app's attributes should be transformed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultValues": {
                    "type": "string",
                    "description": "Default parameter values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includeInSamlAssertion": {
                    "type": "boolean",
                    "description": "When true, this parameter will be included in a SAML assertion payload.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "description": "The can only be set when creating a new parameter. It can not be updated.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "paramId": {
                    "type": "integer",
                    "description": "The parameter ID.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "paramKeyName": {
                    "type": "string",
                    "description": "Name to represent the parameter in OneLogin.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "provisionedEntitlements": {
                    "type": "boolean",
                    "description": "Provisioned access entitlements for the app. Defaults to `false`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "safeEntitlementsEnabled": {
                    "type": "boolean",
                    "description": "Indicates that the parameter is used to support creating entitlements using OneLogin Mappings. Defaults to `false`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "skipIfBlank": {
                    "type": "boolean",
                    "description": "Flag to let the SCIM provisioner know not include this value if it's blank. Defaults to `false`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAttributeMacros": {
                    "type": "string",
                    "description": "When `user_attribute_mappings` is set to `_macro_` this macro will be used to assign the parameter value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAttributeMappings": {
                    "type": "string",
                    "description": "A user attribute to map values from. For custom attributes prefix the name of the attribute with `custom_attribute_`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "string",
                    "description": "Parameter values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "paramKeyName"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "attributesTransformations",
                        "defaultValues",
                        "includeInSamlAssertion",
                        "label",
                        "paramId",
                        "paramKeyName",
                        "provisionedEntitlements",
                        "safeEntitlementsEnabled",
                        "skipIfBlank",
                        "userAttributeMacros",
                        "userAttributeMappings",
                        "values"
                    ]
                }
            }
        },
        "onelogin:index/PrivilegePrivilege:PrivilegePrivilege": {
            "properties": {
                "statements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/onelogin:index/PrivilegePrivilegeStatement:PrivilegePrivilegeStatement"
                    },
                    "description": "At least one `statement` is required. Statements describe the effect granted to a resource type. In this case it allow's the privilege holder to lisst apps and users.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "statements"
            ]
        },
        "onelogin:index/PrivilegePrivilegeStatement:PrivilegePrivilegeStatement": {
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of actions the privilege holder can do. Must be one of those [listed in the docs](https://developers.onelogin.com/api-docs/1/privileges/create-privilege)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "effect": {
                    "type": "string",
                    "description": "The effect the privilege grants for the resource. Must be \"Allow\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Target the privileged action against specific resources with the scope. In this case, the privilege only grants update access to users 123 and 345.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "actions",
                "effect",
                "scopes"
            ]
        },
        "onelogin:index/SamlAppParameter:SamlAppParameter": {
            "properties": {
                "attributesTransformations": {
                    "type": "string",
                    "description": "Describes how the app's attributes should be transformed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultValues": {
                    "type": "string",
                    "description": "Default parameter values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includeInSamlAssertion": {
                    "type": "boolean",
                    "description": "When true, this parameter will be included in a SAML assertion payload.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "description": "The can only be set when creating a new parameter. It can not be updated.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "paramId": {
                    "type": "integer",
                    "description": "The parameter ID.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "paramKeyName": {
                    "type": "string",
                    "description": "Name to represent the parameter in OneLogin.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "provisionedEntitlements": {
                    "type": "boolean",
                    "description": "Provisioned access entitlements for the app. Defaults to `false`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "safeEntitlementsEnabled": {
                    "type": "boolean",
                    "description": "Indicates that the parameter is used to support creating entitlements using OneLogin Mappings. Defaults to `false`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "skipIfBlank": {
                    "type": "boolean",
                    "description": "Flag to let the SCIM provisioner know not include this value if it's blank. Defaults to `false`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAttributeMacros": {
                    "type": "string",
                    "description": "When `user_attribute_mappings` is set to `_macro_` this macro will be used to assign the parameter value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAttributeMappings": {
                    "type": "string",
                    "description": "A user attribute to map values from. For custom attributes prefix the name of the attribute with `custom_attribute_`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "string",
                    "description": "Parameter values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "paramKeyName"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "attributesTransformations",
                        "defaultValues",
                        "includeInSamlAssertion",
                        "label",
                        "paramId",
                        "paramKeyName",
                        "provisionedEntitlements",
                        "safeEntitlementsEnabled",
                        "skipIfBlank",
                        "userAttributeMacros",
                        "userAttributeMappings",
                        "values"
                    ]
                }
            }
        },
        "onelogin:index/SmartHookCondition:SmartHookCondition": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "source",
                "value"
            ]
        },
        "onelogin:index/SmartHookOption:SmartHookOption": {
            "properties": {
                "locationEnabled": {
                    "type": "boolean",
                    "description": "When true an ip to location lookup is done and the location info is passed in the context. Only applies authentication time hooks. E.g. pre-authentication, user-migration. Default false\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mfaDeviceInfoEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "riskEnabled": {
                    "type": "boolean",
                    "description": "When true a risk score and risk reasons will be passed in the context. Only applies authentication time hooks. E.g. pre-authentication, user-migration. Default false\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "onelogin:index/UserMappingAction:UserMappingAction": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "The action to apply. See [List Actions](https://developers.onelogin.com/api-docs/2/user-mappings/list-conditions) for possible values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of strings. Items in the array will be a plain text string or valid value for the selected action. See [List Action Values](https://developers.onelogin.com/api-docs/2/user-mappings/list-action-values) for possible values. In most cases only a single item will be accepted in the array.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "action",
                "values"
            ]
        },
        "onelogin:index/UserMappingCondition:UserMappingCondition": {
            "properties": {
                "operator": {
                    "type": "string",
                    "description": "A valid operator for the selected condition source. See [List Condition Operators](https://developers.onelogin.com/api-docs/2/user-mappings/list-condition-operators) for possible values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "description": "The source field to check. See [List Conditions](https://developers.onelogin.com/api-docs/2/user-mappings/list-conditions) for possible values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "An array of strings. Items in the array will be a plain text string or valid value for the selected action. See [List Action Values](https://developers.onelogin.com/api-docs/2/user-mappings/list-action-values) for possible values. In most cases only a single item will be accepted in the array.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "source",
                "value"
            ]
        }
    },
    "provider": {
        "description": "The provider type for the onelogin package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "clientId": {
                "type": "string"
            },
            "clientSecret": {
                "type": "string"
            },
            "region": {
                "type": "string"
            },
            "url": {
                "type": "string"
            }
        },
        "required": [
            "clientId",
            "clientSecret"
        ],
        "inputProperties": {
            "clientId": {
                "type": "string"
            },
            "clientSecret": {
                "type": "string"
            },
            "region": {
                "type": "string"
            },
            "url": {
                "type": "string"
            }
        },
        "requiredInputs": [
            "clientId",
            "clientSecret"
        ]
    },
    "resources": {
        "onelogin:index/app:App": {
            "description": "Creates a Basic Application.\n\nThis resource allows you to create and configure a Basic (non-SAML non-OIDC) Application.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as onelogin from \"@pulumi/onelogin\";\n\nconst myApp = new onelogin.App(\"my_app\", {\n    allowAssumedSignin: false,\n    connectorId: 12345,\n    description: \"basic app\",\n    notes: \"basic app\",\n    parameters: [{\n        attributesTransformations: \"\",\n        defaultValues: \"\",\n        includeInSamlAssertion: false,\n        label: \"username\",\n        paramKeyName: \"user name\",\n        provisionedEntitlements: false,\n        safeEntitlementsEnabled: false,\n        skipIfBlank: false,\n        userAttributeMacros: \"\",\n        userAttributeMappings: \"\",\n        values: \"\",\n    }],\n    provisioning: {\n        enabled: false,\n    },\n    visible: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_onelogin as onelogin\n\nmy_app = onelogin.App(\"myApp\",\n    allow_assumed_signin=False,\n    connector_id=12345,\n    description=\"basic app\",\n    notes=\"basic app\",\n    parameters=[onelogin.AppParameterArgs(\n        attributes_transformations=\"\",\n        default_values=\"\",\n        include_in_saml_assertion=False,\n        label=\"username\",\n        param_key_name=\"user name\",\n        provisioned_entitlements=False,\n        safe_entitlements_enabled=False,\n        skip_if_blank=False,\n        user_attribute_macros=\"\",\n        user_attribute_mappings=\"\",\n        values=\"\",\n    )],\n    provisioning={\n        \"enabled\": False,\n    },\n    visible=True)\n```\n```csharp\nusing Pulumi;\nusing Onelogin = Pulumi.Onelogin;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myApp = new Onelogin.App(\"myApp\", new Onelogin.AppArgs\n        {\n            AllowAssumedSignin = false,\n            ConnectorId = 12345,\n            Description = \"basic app\",\n            Notes = \"basic app\",\n            Parameters = \n            {\n                new Onelogin.Inputs.AppParameterArgs\n                {\n                    AttributesTransformations = \"\",\n                    DefaultValues = \"\",\n                    IncludeInSamlAssertion = false,\n                    Label = \"username\",\n                    ParamKeyName = \"user name\",\n                    ProvisionedEntitlements = false,\n                    SafeEntitlementsEnabled = false,\n                    SkipIfBlank = false,\n                    UserAttributeMacros = \"\",\n                    UserAttributeMappings = \"\",\n                    Values = \"\",\n                },\n            },\n            Provisioning = \n            {\n                { \"enabled\", false },\n            },\n            Visible = true,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-onelogin/sdk/go/onelogin\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := onelogin.NewApp(ctx, \"myApp\", \u0026onelogin.AppArgs{\n\t\t\tAllowAssumedSignin: pulumi.Bool(false),\n\t\t\tConnectorId:        pulumi.Int(12345),\n\t\t\tDescription:        pulumi.String(\"basic app\"),\n\t\t\tNotes:              pulumi.String(\"basic app\"),\n\t\t\tParameters: AppParameterArray{\n\t\t\t\t\u0026AppParameterArgs{\n\t\t\t\t\tAttributesTransformations: pulumi.String(\"\"),\n\t\t\t\t\tDefaultValues:             pulumi.String(\"\"),\n\t\t\t\t\tIncludeInSamlAssertion:    pulumi.Bool(false),\n\t\t\t\t\tLabel:                     pulumi.String(\"username\"),\n\t\t\t\t\tParamKeyName:              pulumi.String(\"user name\"),\n\t\t\t\t\tProvisionedEntitlements:   pulumi.Bool(false),\n\t\t\t\t\tSafeEntitlementsEnabled:   pulumi.Bool(false),\n\t\t\t\t\tSkipIfBlank:               pulumi.Bool(false),\n\t\t\t\t\tUserAttributeMacros:       pulumi.String(\"\"),\n\t\t\t\t\tUserAttributeMappings:     pulumi.String(\"\"),\n\t\t\t\t\tValues:                    pulumi.String(\"\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tProvisioning: pulumi.BoolMap{\n\t\t\t\t\"enabled\": pulumi.Bool(false),\n\t\t\t},\n\t\t\tVisible: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn App can be imported via the OneLogin App ID.\n\n```sh\n $ pulumi import onelogin:index/app:App my_app \u003capp id\u003e\n```\n\n ",
            "properties": {
                "allowAssumedSignin": {
                    "type": "boolean",
                    "description": "Enable sign in when user has been assumed by the account owner. Defaults to `false`.\n"
                },
                "authMethod": {
                    "type": "integer",
                    "description": "The apps auth method. Refer to the [OneLogin Apps Documentation](https://developers.onelogin.com/api-docs/2/apps/app-resource) for a comprehensive list of available auth methods.\n"
                },
                "brandId": {
                    "type": "integer"
                },
                "connectorId": {
                    "type": "integer",
                    "description": "The ID for the app connector, dictates the type of app (e.g. AWS Multi-Role App).\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Timestamp for app's creation.\n"
                },
                "description": {
                    "type": "string",
                    "description": "App description.\n"
                },
                "iconUrl": {
                    "type": "string",
                    "description": "The url for the app's icon.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The app's name.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "Notes about the app.\n"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/onelogin:index/AppParameter:AppParameter"
                    },
                    "description": "a list of custom parameters for this app.\n"
                },
                "policyId": {
                    "type": "integer",
                    "description": "The security policy assigned to the app.\n"
                },
                "provisioning": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    },
                    "description": "Settings regarding the app's provisioning ability.\n"
                },
                "tabId": {
                    "type": "integer",
                    "description": "The tab in which to display in OneLogin portal.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Timestamp for app's last update.\n"
                },
                "visible": {
                    "type": "boolean",
                    "description": "Determine if app should be visible in OneLogin portal. Defaults to `true`.\n"
                }
            },
            "required": [
                "authMethod",
                "connectorId",
                "createdAt",
                "iconUrl",
                "name",
                "parameters",
                "policyId",
                "provisioning",
                "tabId",
                "updatedAt"
            ],
            "inputProperties": {
                "allowAssumedSignin": {
                    "type": "boolean",
                    "description": "Enable sign in when user has been assumed by the account owner. Defaults to `false`.\n"
                },
                "brandId": {
                    "type": "integer"
                },
                "connectorId": {
                    "type": "integer",
                    "description": "The ID for the app connector, dictates the type of app (e.g. AWS Multi-Role App).\n"
                },
                "description": {
                    "type": "string",
                    "description": "App description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The app's name.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "Notes about the app.\n"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/onelogin:index/AppParameter:AppParameter"
                    },
                    "description": "a list of custom parameters for this app.\n"
                },
                "provisioning": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    },
                    "description": "Settings regarding the app's provisioning ability.\n"
                },
                "visible": {
                    "type": "boolean",
                    "description": "Determine if app should be visible in OneLogin portal. Defaults to `true`.\n"
                }
            },
            "requiredInputs": [
                "connectorId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering App resources.\n",
                "properties": {
                    "allowAssumedSignin": {
                        "type": "boolean",
                        "description": "Enable sign in when user has been assumed by the account owner. Defaults to `false`.\n"
                    },
                    "authMethod": {
                        "type": "integer",
                        "description": "The apps auth method. Refer to the [OneLogin Apps Documentation](https://developers.onelogin.com/api-docs/2/apps/app-resource) for a comprehensive list of available auth methods.\n"
                    },
                    "brandId": {
                        "type": "integer"
                    },
                    "connectorId": {
                        "type": "integer",
                        "description": "The ID for the app connector, dictates the type of app (e.g. AWS Multi-Role App).\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Timestamp for app's creation.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "App description.\n"
                    },
                    "iconUrl": {
                        "type": "string",
                        "description": "The url for the app's icon.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The app's name.\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "Notes about the app.\n"
                    },
                    "parameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/onelogin:index/AppParameter:AppParameter"
                        },
                        "description": "a list of custom parameters for this app.\n"
                    },
                    "policyId": {
                        "type": "integer",
                        "description": "The security policy assigned to the app.\n"
                    },
                    "provisioning": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "boolean"
                        },
                        "description": "Settings regarding the app's provisioning ability.\n"
                    },
                    "tabId": {
                        "type": "integer",
                        "description": "The tab in which to display in OneLogin portal.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Timestamp for app's last update.\n"
                    },
                    "visible": {
                        "type": "boolean",
                        "description": "Determine if app should be visible in OneLogin portal. Defaults to `true`.\n"
                    }
                },
                "type": "object"
            }
        },
        "onelogin:index/appRoleAttachment:AppRoleAttachment": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as onelogin from \"@pulumi/onelogin\";\n\nconst example = new onelogin.AppRoleAttachment(\"example\", {\n    appId: onelogin_saml_apps.saml.id,\n    roleId: 12345,\n});\n```\n```python\nimport pulumi\nimport pulumi_onelogin as onelogin\n\nexample = onelogin.AppRoleAttachment(\"example\",\n    app_id=onelogin_saml_apps[\"saml\"][\"id\"],\n    role_id=12345)\n```\n```csharp\nusing Pulumi;\nusing Onelogin = Pulumi.Onelogin;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Onelogin.AppRoleAttachment(\"example\", new Onelogin.AppRoleAttachmentArgs\n        {\n            AppId = onelogin_saml_apps.Saml.Id,\n            RoleId = 12345,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-onelogin/sdk/go/onelogin\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := onelogin.NewAppRoleAttachment(ctx, \"example\", \u0026onelogin.AppRoleAttachmentArgs{\n\t\t\tAppId:  pulumi.Any(onelogin_saml_apps.Saml.Id),\n\t\t\tRoleId: pulumi.Int(12345),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn App Role Attachment cannot be imported at this time. ",
            "properties": {
                "appId": {
                    "type": "integer",
                    "description": "The id of the App resource to which the role should belong.\n"
                },
                "roleId": {
                    "type": "integer",
                    "description": "The id of the Role being attached to the App.\n"
                }
            },
            "required": [
                "appId",
                "roleId"
            ],
            "inputProperties": {
                "appId": {
                    "type": "integer",
                    "description": "The id of the App resource to which the role should belong.\n"
                },
                "roleId": {
                    "type": "integer",
                    "description": "The id of the Role being attached to the App.\n"
                }
            },
            "requiredInputs": [
                "appId",
                "roleId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppRoleAttachment resources.\n",
                "properties": {
                    "appId": {
                        "type": "integer",
                        "description": "The id of the App resource to which the role should belong.\n"
                    },
                    "roleId": {
                        "type": "integer",
                        "description": "The id of the Role being attached to the App.\n"
                    }
                },
                "type": "object"
            }
        },
        "onelogin:index/appRule:AppRule": {
            "description": "Manage App Rule resources.\n\nThis resource allows you to create and configure App Rules.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n### Strict Ordering\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as onelogin from \"@pulumi/onelogin\";\n\nconst check = new onelogin.AppRule(\"check\", {\n    appId: onelogin_saml_apps.my_saml_app.id,\n    position: 1,\n    enabled: true,\n    match: \"all\",\n    conditions: {\n        operator: \"ri\",\n        source: \"has_role\",\n        value: \"340475\",\n    },\n    actions: {\n        action: \"set_amazonusername\",\n        expression: \".*\",\n        values: [\"member_of\"],\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_onelogin as onelogin\n\ncheck = onelogin.AppRule(\"check\",\n    app_id=onelogin_saml_apps[\"my_saml_app\"][\"id\"],\n    position=1,\n    enabled=True,\n    match=\"all\",\n    conditions={\n        \"operator\": \"ri\",\n        \"source\": \"has_role\",\n        \"value\": \"340475\",\n    },\n    actions={\n        \"action\": \"set_amazonusername\",\n        \"expression\": \".*\",\n        \"values\": [\"member_of\"],\n    })\n```\n```csharp\nusing Pulumi;\nusing Onelogin = Pulumi.Onelogin;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var check = new Onelogin.AppRule(\"check\", new Onelogin.AppRuleArgs\n        {\n            AppId = onelogin_saml_apps.My_saml_app.Id,\n            Position = 1,\n            Enabled = true,\n            Match = \"all\",\n            Conditions = \n            {\n                { \"operator\", \"ri\" },\n                { \"source\", \"has_role\" },\n                { \"value\", \"340475\" },\n            },\n            Actions = \n            {\n                { \"action\", \"set_amazonusername\" },\n                { \"expression\", \".*\" },\n                { \"values\", \n                {\n                    \"member_of\",\n                } },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-onelogin/sdk/go/onelogin\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := onelogin.NewAppRule(ctx, \"check\", \u0026onelogin.AppRuleArgs{\n\t\t\tAppId:    pulumi.Any(onelogin_saml_apps.My_saml_app.Id),\n\t\t\tPosition: pulumi.Int(1),\n\t\t\tEnabled:  pulumi.Bool(true),\n\t\t\tMatch:    pulumi.String(\"all\"),\n\t\t\tConditions: AppRuleConditionArray{\n\t\t\t\tOperator: \"ri\",\n\t\t\t\tSource:   \"has_role\",\n\t\t\t\tValue:    \"340475\",\n\t\t\t},\n\t\t\tActions: AppRuleActionArray{\n\t\t\t\tAction:     \"set_amazonusername\",\n\t\t\t\tExpression: \".*\",\n\t\t\t\tValues: AppRuleActionArgs{\n\t\t\t\t\t\"member_of\",\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% example %}}\n### Dependency Based Ordering\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as onelogin from \"@pulumi/onelogin\";\n\nconst test = new onelogin.AppRule(\"test\", {\n    appId: onelogin_saml_apps.my_saml_app.id,\n    enabled: true,\n    match: \"all\",\n    conditions: {\n        operator: \"ri\",\n        source: \"has_role\",\n        value: \"340475\",\n    },\n    actions: {\n        action: \"set_amazonusername\",\n        expression: \".*\",\n        values: [\"member_of\"],\n    },\n});\nconst check = new onelogin.AppRule(\"check\", {\n    appId: onelogin_saml_apps.my_saml_app.id,\n    enabled: true,\n    match: \"all\",\n    conditions: {\n        operator: \"ri\",\n        source: \"has_role\",\n        value: \"340475\",\n    },\n    actions: {\n        action: \"set_amazonusername\",\n        expression: \".*\",\n        values: [\"member_of\"],\n    },\n}, {\n    dependsOn: [test],\n});\n```\n```python\nimport pulumi\nimport pulumi_onelogin as onelogin\n\ntest = onelogin.AppRule(\"test\",\n    app_id=onelogin_saml_apps[\"my_saml_app\"][\"id\"],\n    enabled=True,\n    match=\"all\",\n    conditions={\n        \"operator\": \"ri\",\n        \"source\": \"has_role\",\n        \"value\": \"340475\",\n    },\n    actions={\n        \"action\": \"set_amazonusername\",\n        \"expression\": \".*\",\n        \"values\": [\"member_of\"],\n    })\ncheck = onelogin.AppRule(\"check\",\n    app_id=onelogin_saml_apps[\"my_saml_app\"][\"id\"],\n    enabled=True,\n    match=\"all\",\n    conditions={\n        \"operator\": \"ri\",\n        \"source\": \"has_role\",\n        \"value\": \"340475\",\n    },\n    actions={\n        \"action\": \"set_amazonusername\",\n        \"expression\": \".*\",\n        \"values\": [\"member_of\"],\n    },\n    opts=pulumi.ResourceOptions(depends_on=[test]))\n```\n```csharp\nusing Pulumi;\nusing Onelogin = Pulumi.Onelogin;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var test = new Onelogin.AppRule(\"test\", new Onelogin.AppRuleArgs\n        {\n            AppId = onelogin_saml_apps.My_saml_app.Id,\n            Enabled = true,\n            Match = \"all\",\n            Conditions = \n            {\n                { \"operator\", \"ri\" },\n                { \"source\", \"has_role\" },\n                { \"value\", \"340475\" },\n            },\n            Actions = \n            {\n                { \"action\", \"set_amazonusername\" },\n                { \"expression\", \".*\" },\n                { \"values\", \n                {\n                    \"member_of\",\n                } },\n            },\n        });\n        var check = new Onelogin.AppRule(\"check\", new Onelogin.AppRuleArgs\n        {\n            AppId = onelogin_saml_apps.My_saml_app.Id,\n            Enabled = true,\n            Match = \"all\",\n            Conditions = \n            {\n                { \"operator\", \"ri\" },\n                { \"source\", \"has_role\" },\n                { \"value\", \"340475\" },\n            },\n            Actions = \n            {\n                { \"action\", \"set_amazonusername\" },\n                { \"expression\", \".*\" },\n                { \"values\", \n                {\n                    \"member_of\",\n                } },\n            },\n        }, new CustomResourceOptions\n        {\n            DependsOn = \n            {\n                test,\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-onelogin/sdk/go/onelogin\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttest, err := onelogin.NewAppRule(ctx, \"test\", \u0026onelogin.AppRuleArgs{\n\t\t\tAppId:   pulumi.Any(onelogin_saml_apps.My_saml_app.Id),\n\t\t\tEnabled: pulumi.Bool(true),\n\t\t\tMatch:   pulumi.String(\"all\"),\n\t\t\tConditions: AppRuleConditionArray{\n\t\t\t\tOperator: \"ri\",\n\t\t\t\tSource:   \"has_role\",\n\t\t\t\tValue:    \"340475\",\n\t\t\t},\n\t\t\tActions: AppRuleActionArray{\n\t\t\t\tAction:     \"set_amazonusername\",\n\t\t\t\tExpression: \".*\",\n\t\t\t\tValues: AppRuleActionArgs{\n\t\t\t\t\t\"member_of\",\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = onelogin.NewAppRule(ctx, \"check\", \u0026onelogin.AppRuleArgs{\n\t\t\tAppId:   pulumi.Any(onelogin_saml_apps.My_saml_app.Id),\n\t\t\tEnabled: pulumi.Bool(true),\n\t\t\tMatch:   pulumi.String(\"all\"),\n\t\t\tConditions: AppRuleConditionArray{\n\t\t\t\tOperator: \"ri\",\n\t\t\t\tSource:   \"has_role\",\n\t\t\t\tValue:    \"340475\",\n\t\t\t},\n\t\t\tActions: AppRuleActionArray{\n\t\t\t\tAction:     \"set_amazonusername\",\n\t\t\t\tExpression: \".*\",\n\t\t\t\tValues: AppRuleActionArgs{\n\t\t\t\t\t\"member_of\",\n\t\t\t\t},\n\t\t\t},\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\ttest,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Important Note Regarding Position\n\nThe position field indicates the order in which rules are applied. They behave like progressive filters and as such, their positioning is strictly enforced. Your options for this field are to either:\n\n* Accept any ordering - Do not fill out any position field and each rule will be inserted in the order received by the API.\n\n* Strict Ordering - Enter a position number for each app rule. You'll need to ensure there are no duplicates and no gaps in numbering.\n\n* Dependency based ordering - Use the `depends_on` field to specify an app rule's predecessor to ensure rules are received by the API in the order in which they should be applied. e.g. `depends_on = [onelogin_app_rules.test]`\n\n\n## Import\n\nAn App Rule cannot be imported at this time. ",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/onelogin:index/AppRuleAction:AppRuleAction"
                    },
                    "description": "An array of actions that will be applied to the users that are matched by the conditions.\n"
                },
                "appId": {
                    "type": "string",
                    "description": "The id of the App resource to which the rule should belong.\n"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/onelogin:index/AppRuleCondition:AppRuleCondition"
                    },
                    "description": "An array of conditions that the user must meet in order for the rule to be applied.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicate if the rule should go into effect.\n"
                },
                "match": {
                    "type": "string",
                    "description": "Indicates how conditions should be matched. Must be one of `all` or `any`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Rule's name\n"
                },
                "position": {
                    "type": "integer",
                    "description": "Indicates the ordering of the rule. When not supplied the rule will be put at the end of the list on create and managed by the provider. '0' can be supplied to consistently push this rule to the end of the list on every update.\n"
                }
            },
            "required": [
                "appId",
                "match",
                "name",
                "position"
            ],
            "inputProperties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/onelogin:index/AppRuleAction:AppRuleAction"
                    },
                    "description": "An array of actions that will be applied to the users that are matched by the conditions.\n"
                },
                "appId": {
                    "type": "string",
                    "description": "The id of the App resource to which the rule should belong.\n"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/onelogin:index/AppRuleCondition:AppRuleCondition"
                    },
                    "description": "An array of conditions that the user must meet in order for the rule to be applied.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicate if the rule should go into effect.\n"
                },
                "match": {
                    "type": "string",
                    "description": "Indicates how conditions should be matched. Must be one of `all` or `any`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Rule's name\n"
                },
                "position": {
                    "type": "integer",
                    "description": "Indicates the ordering of the rule. When not supplied the rule will be put at the end of the list on create and managed by the provider. '0' can be supplied to consistently push this rule to the end of the list on every update.\n"
                }
            },
            "requiredInputs": [
                "appId",
                "match"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppRule resources.\n",
                "properties": {
                    "actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/onelogin:index/AppRuleAction:AppRuleAction"
                        },
                        "description": "An array of actions that will be applied to the users that are matched by the conditions.\n"
                    },
                    "appId": {
                        "type": "string",
                        "description": "The id of the App resource to which the rule should belong.\n"
                    },
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/onelogin:index/AppRuleCondition:AppRuleCondition"
                        },
                        "description": "An array of conditions that the user must meet in order for the rule to be applied.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Indicate if the rule should go into effect.\n"
                    },
                    "match": {
                        "type": "string",
                        "description": "Indicates how conditions should be matched. Must be one of `all` or `any`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Rule's name\n"
                    },
                    "position": {
                        "type": "integer",
                        "description": "Indicates the ordering of the rule. When not supplied the rule will be put at the end of the list on create and managed by the provider. '0' can be supplied to consistently push this rule to the end of the list on every update.\n"
                    }
                },
                "type": "object"
            }
        },
        "onelogin:index/authServer:AuthServer": {
            "description": "Creates an Authentication Server Resource.\n\nThis resource allows you to create and configure an Authentication Server.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as onelogin from \"@pulumi/onelogin\";\n\nconst example = new onelogin.AuthServer(\"example\", {\n    configuration: {\n        accessTokenExpirationMinutes: 10,\n        audiences: [\"https://example.com/contacts\"],\n        refreshTokenExpirationMinutes: 30,\n        resourceIdentifier: \"https://example.com/contacts\",\n    },\n    description: \"This is an api\",\n});\n```\n```python\nimport pulumi\nimport pulumi_onelogin as onelogin\n\nexample = onelogin.AuthServer(\"example\",\n    configuration=onelogin.AuthServerConfigurationArgs(\n        access_token_expiration_minutes=10,\n        audiences=[\"https://example.com/contacts\"],\n        refresh_token_expiration_minutes=30,\n        resource_identifier=\"https://example.com/contacts\",\n    ),\n    description=\"This is an api\")\n```\n```csharp\nusing Pulumi;\nusing Onelogin = Pulumi.Onelogin;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Onelogin.AuthServer(\"example\", new Onelogin.AuthServerArgs\n        {\n            Configuration = new Onelogin.Inputs.AuthServerConfigurationArgs\n            {\n                AccessTokenExpirationMinutes = 10,\n                Audiences = \n                {\n                    \"https://example.com/contacts\",\n                },\n                RefreshTokenExpirationMinutes = 30,\n                ResourceIdentifier = \"https://example.com/contacts\",\n            },\n            Description = \"This is an api\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-onelogin/sdk/go/onelogin\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := onelogin.NewAuthServer(ctx, \"example\", \u0026onelogin.AuthServerArgs{\n\t\t\tConfiguration: \u0026AuthServerConfigurationArgs{\n\t\t\t\tAccessTokenExpirationMinutes: pulumi.Int(10),\n\t\t\t\tAudiences: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"https://example.com/contacts\"),\n\t\t\t\t},\n\t\t\t\tRefreshTokenExpirationMinutes: pulumi.Int(30),\n\t\t\t\tResourceIdentifier:            pulumi.String(\"https://example.com/contacts\"),\n\t\t\t},\n\t\t\tDescription: pulumi.String(\"This is an api\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn Auth Server can be imported via the OneLogin Auth Server ID.\n\n```sh\n $ pulumi import onelogin:index/authServer:AuthServer example \u003cauth_server_id\u003e\n```\n\n ",
            "properties": {
                "configuration": {
                    "$ref": "#/types/onelogin:index/AuthServerConfiguration:AuthServerConfiguration",
                    "description": "Configuration parameters\n"
                },
                "description": {
                    "type": "string",
                    "description": "A brief description about the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource's name.\n"
                }
            },
            "required": [
                "configuration",
                "description",
                "name"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/onelogin:index/AuthServerConfiguration:AuthServerConfiguration",
                    "description": "Configuration parameters\n"
                },
                "description": {
                    "type": "string",
                    "description": "A brief description about the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource's name.\n"
                }
            },
            "requiredInputs": [
                "configuration",
                "description"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AuthServer resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/onelogin:index/AuthServerConfiguration:AuthServerConfiguration",
                        "description": "Configuration parameters\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A brief description about the resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource's name.\n"
                    }
                },
                "type": "object"
            }
        },
        "onelogin:index/oidcApp:OidcApp": {
            "description": "Creates an OIDC Application.\n\nThis resource allows you to create and configure an OIDC Application.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as onelogin from \"@pulumi/onelogin\";\n\nconst myOidcApp = new onelogin.OidcApp(\"my_oidc_app\", {\n    allowAssumedSignin: false,\n    configuration: {\n        access_token_expiration_minutes: 1,\n        login_url: \"https://www.example.com\",\n        oidc_application_type: 0,\n        post_logout_redirect_uri: \"\",\n        redirect_uri: \"https://example.com/example\",\n        refresh_token_expiration_minutes: 1,\n        token_endpoint_auth_method: 1,\n    },\n    connectorId: 123456,\n    description: \"example OIDC app\",\n    notes: \"example\",\n    parameters: [{\n        attributesTransformations: \"\",\n        defaultValues: \"\",\n        includeInSamlAssertion: false,\n        label: \"example app parameter \",\n        paramKeyName: \"example\",\n        provisionedEntitlements: false,\n        safeEntitlementsEnabled: false,\n        skipIfBlank: false,\n        userAttributeMacros: \"\",\n        userAttributeMappings: \"\",\n        values: \"\",\n    }],\n    provisioning: {\n        enabled: false,\n    },\n    visible: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_onelogin as onelogin\n\nmy_oidc_app = onelogin.OidcApp(\"myOidcApp\",\n    allow_assumed_signin=False,\n    configuration={\n        \"access_token_expiration_minutes\": \"1\",\n        \"login_url\": \"https://www.example.com\",\n        \"oidc_application_type\": \"0\",\n        \"post_logout_redirect_uri\": \"\",\n        \"redirect_uri\": \"https://example.com/example\",\n        \"refresh_token_expiration_minutes\": \"1\",\n        \"token_endpoint_auth_method\": \"1\",\n    },\n    connector_id=123456,\n    description=\"example OIDC app\",\n    notes=\"example\",\n    parameters=[onelogin.OidcAppParameterArgs(\n        attributes_transformations=\"\",\n        default_values=\"\",\n        include_in_saml_assertion=False,\n        label=\"example app parameter \",\n        param_key_name=\"example\",\n        provisioned_entitlements=False,\n        safe_entitlements_enabled=False,\n        skip_if_blank=False,\n        user_attribute_macros=\"\",\n        user_attribute_mappings=\"\",\n        values=\"\",\n    )],\n    provisioning={\n        \"enabled\": False,\n    },\n    visible=True)\n```\n```csharp\nusing Pulumi;\nusing Onelogin = Pulumi.Onelogin;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myOidcApp = new Onelogin.OidcApp(\"myOidcApp\", new Onelogin.OidcAppArgs\n        {\n            AllowAssumedSignin = false,\n            Configuration = \n            {\n                { \"access_token_expiration_minutes\", \"1\" },\n                { \"login_url\", \"https://www.example.com\" },\n                { \"oidc_application_type\", \"0\" },\n                { \"post_logout_redirect_uri\", \"\" },\n                { \"redirect_uri\", \"https://example.com/example\" },\n                { \"refresh_token_expiration_minutes\", \"1\" },\n                { \"token_endpoint_auth_method\", \"1\" },\n            },\n            ConnectorId = 123456,\n            Description = \"example OIDC app\",\n            Notes = \"example\",\n            Parameters = \n            {\n                new Onelogin.Inputs.OidcAppParameterArgs\n                {\n                    AttributesTransformations = \"\",\n                    DefaultValues = \"\",\n                    IncludeInSamlAssertion = false,\n                    Label = \"example app parameter \",\n                    ParamKeyName = \"example\",\n                    ProvisionedEntitlements = false,\n                    SafeEntitlementsEnabled = false,\n                    SkipIfBlank = false,\n                    UserAttributeMacros = \"\",\n                    UserAttributeMappings = \"\",\n                    Values = \"\",\n                },\n            },\n            Provisioning = \n            {\n                { \"enabled\", false },\n            },\n            Visible = true,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-onelogin/sdk/go/onelogin\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := onelogin.NewOidcApp(ctx, \"myOidcApp\", \u0026onelogin.OidcAppArgs{\n\t\t\tAllowAssumedSignin: pulumi.Bool(false),\n\t\t\tConfiguration: pulumi.StringMap{\n\t\t\t\t\"access_token_expiration_minutes\":  pulumi.String(\"1\"),\n\t\t\t\t\"login_url\":                        pulumi.String(\"https://www.example.com\"),\n\t\t\t\t\"oidc_application_type\":            pulumi.String(\"0\"),\n\t\t\t\t\"post_logout_redirect_uri\":         pulumi.String(\"\"),\n\t\t\t\t\"redirect_uri\":                     pulumi.String(\"https://example.com/example\"),\n\t\t\t\t\"refresh_token_expiration_minutes\": pulumi.String(\"1\"),\n\t\t\t\t\"token_endpoint_auth_method\":       pulumi.String(\"1\"),\n\t\t\t},\n\t\t\tConnectorId: pulumi.Int(123456),\n\t\t\tDescription: pulumi.String(\"example OIDC app\"),\n\t\t\tNotes:       pulumi.String(\"example\"),\n\t\t\tParameters: OidcAppParameterArray{\n\t\t\t\t\u0026OidcAppParameterArgs{\n\t\t\t\t\tAttributesTransformations: pulumi.String(\"\"),\n\t\t\t\t\tDefaultValues:             pulumi.String(\"\"),\n\t\t\t\t\tIncludeInSamlAssertion:    pulumi.Bool(false),\n\t\t\t\t\tLabel:                     pulumi.String(\"example app parameter \"),\n\t\t\t\t\tParamKeyName:              pulumi.String(\"example\"),\n\t\t\t\t\tProvisionedEntitlements:   pulumi.Bool(false),\n\t\t\t\t\tSafeEntitlementsEnabled:   pulumi.Bool(false),\n\t\t\t\t\tSkipIfBlank:               pulumi.Bool(false),\n\t\t\t\t\tUserAttributeMacros:       pulumi.String(\"\"),\n\t\t\t\t\tUserAttributeMappings:     pulumi.String(\"\"),\n\t\t\t\t\tValues:                    pulumi.String(\"\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tProvisioning: pulumi.BoolMap{\n\t\t\t\t\"enabled\": pulumi.Bool(false),\n\t\t\t},\n\t\t\tVisible: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA OIDC App can be imported via the OneLogin App ID.\n\n```sh\n $ pulumi import onelogin:index/oidcApp:OidcApp my_oidc_app \u003capp id\u003e\n```\n\n ",
            "properties": {
                "allowAssumedSignin": {
                    "type": "boolean",
                    "description": "Enable sign in when user has been assumed by the account owner. Defaults to `false`.\n"
                },
                "authMethod": {
                    "type": "integer",
                    "description": "The apps auth method. Refer to the [OneLogin Apps Documentation](https://developers.onelogin.com/api-docs/2/apps/app-resource) for a comprehensive list of available auth methods.\n"
                },
                "brandId": {
                    "type": "integer"
                },
                "configuration": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "OIDC settings that control the authentication flow e.g. redirect urls and token settings.\n"
                },
                "connectorId": {
                    "type": "integer",
                    "description": "The ID for the app connector, dictates the type of app (e.g. AWS Multi-Role App).\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Timestamp for app's creation.\n"
                },
                "description": {
                    "type": "string",
                    "description": "App description.\n"
                },
                "iconUrl": {
                    "type": "string",
                    "description": "The url for the app's icon.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The app's name.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "Notes about the app.\n"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/onelogin:index/OidcAppParameter:OidcAppParameter"
                    },
                    "description": "a list of custom parameters for this app.\n"
                },
                "policyId": {
                    "type": "integer",
                    "description": "The security policy assigned to the app.\n"
                },
                "provisioning": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    },
                    "description": "Settings regarding the app's provisioning ability.\n"
                },
                "sso": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tabId": {
                    "type": "integer",
                    "description": "The tab in which to display in OneLogin portal.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Timestamp for app's last update.\n"
                },
                "visible": {
                    "type": "boolean",
                    "description": "Determine if app should be visible in OneLogin portal. Defaults to `true`.\n"
                }
            },
            "required": [
                "authMethod",
                "connectorId",
                "createdAt",
                "iconUrl",
                "name",
                "parameters",
                "policyId",
                "provisioning",
                "sso",
                "tabId",
                "updatedAt"
            ],
            "inputProperties": {
                "allowAssumedSignin": {
                    "type": "boolean",
                    "description": "Enable sign in when user has been assumed by the account owner. Defaults to `false`.\n"
                },
                "brandId": {
                    "type": "integer"
                },
                "configuration": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "OIDC settings that control the authentication flow e.g. redirect urls and token settings.\n"
                },
                "connectorId": {
                    "type": "integer",
                    "description": "The ID for the app connector, dictates the type of app (e.g. AWS Multi-Role App).\n"
                },
                "description": {
                    "type": "string",
                    "description": "App description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The app's name.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "Notes about the app.\n"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/onelogin:index/OidcAppParameter:OidcAppParameter"
                    },
                    "description": "a list of custom parameters for this app.\n"
                },
                "provisioning": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    },
                    "description": "Settings regarding the app's provisioning ability.\n"
                },
                "visible": {
                    "type": "boolean",
                    "description": "Determine if app should be visible in OneLogin portal. Defaults to `true`.\n"
                }
            },
            "requiredInputs": [
                "connectorId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OidcApp resources.\n",
                "properties": {
                    "allowAssumedSignin": {
                        "type": "boolean",
                        "description": "Enable sign in when user has been assumed by the account owner. Defaults to `false`.\n"
                    },
                    "authMethod": {
                        "type": "integer",
                        "description": "The apps auth method. Refer to the [OneLogin Apps Documentation](https://developers.onelogin.com/api-docs/2/apps/app-resource) for a comprehensive list of available auth methods.\n"
                    },
                    "brandId": {
                        "type": "integer"
                    },
                    "configuration": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "OIDC settings that control the authentication flow e.g. redirect urls and token settings.\n"
                    },
                    "connectorId": {
                        "type": "integer",
                        "description": "The ID for the app connector, dictates the type of app (e.g. AWS Multi-Role App).\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Timestamp for app's creation.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "App description.\n"
                    },
                    "iconUrl": {
                        "type": "string",
                        "description": "The url for the app's icon.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The app's name.\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "Notes about the app.\n"
                    },
                    "parameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/onelogin:index/OidcAppParameter:OidcAppParameter"
                        },
                        "description": "a list of custom parameters for this app.\n"
                    },
                    "policyId": {
                        "type": "integer",
                        "description": "The security policy assigned to the app.\n"
                    },
                    "provisioning": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "boolean"
                        },
                        "description": "Settings regarding the app's provisioning ability.\n"
                    },
                    "sso": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "tabId": {
                        "type": "integer",
                        "description": "The tab in which to display in OneLogin portal.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Timestamp for app's last update.\n"
                    },
                    "visible": {
                        "type": "boolean",
                        "description": "Determine if app should be visible in OneLogin portal. Defaults to `true`.\n"
                    }
                },
                "type": "object"
            }
        },
        "onelogin:index/privilege:Privilege": {
            "description": "Manage Privilege resources.\n\nThis resource allows you to create and configure Privilege.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n### Strict Ordering\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as onelogin from \"@pulumi/onelogin\";\n\nconst superAdmin = new onelogin.Privilege(\"super_admin\", {\n    description: \"description\",\n    privileges: [{\n        statements: [\n            {\n                actions: [\"apps:List\"],\n                effect: \"Allow\",\n                scopes: [\"*\"],\n            },\n            {\n                actions: [\n                    \"users:List\",\n                    \"users:Update\",\n                ],\n                effect: \"Allow\",\n                scopes: [\n                    \"users/123\",\n                    \"users/345\",\n                ],\n            },\n        ],\n    }],\n    roleIds: [\n        987,\n        654,\n    ],\n    userIds: [\n        123,\n        345,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_onelogin as onelogin\n\nsuper_admin = onelogin.Privilege(\"superAdmin\",\n    description=\"description\",\n    privileges=[onelogin.PrivilegePrivilegeArgs(\n        statements=[\n            onelogin.PrivilegePrivilegeStatementArgs(\n                action=[\"apps:List\"],\n                effect=\"Allow\",\n                scope=[\"*\"],\n            ),\n            onelogin.PrivilegePrivilegeStatementArgs(\n                action=[\n                    \"users:List\",\n                    \"users:Update\",\n                ],\n                effect=\"Allow\",\n                scope=[\n                    \"users/123\",\n                    \"users/345\",\n                ],\n            ),\n        ],\n    )],\n    role_ids=[\n        987,\n        654,\n    ],\n    user_ids=[\n        123,\n        345,\n    ])\n```\n```csharp\nusing Pulumi;\nusing Onelogin = Pulumi.Onelogin;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var superAdmin = new Onelogin.Privilege(\"superAdmin\", new Onelogin.PrivilegeArgs\n        {\n            Description = \"description\",\n            Privileges = \n            {\n                new Onelogin.Inputs.PrivilegePrivilegeArgs\n                {\n                    Statements = \n                    {\n                        new Onelogin.Inputs.PrivilegePrivilegeStatementArgs\n                        {\n                            Action = \n                            {\n                                \"apps:List\",\n                            },\n                            Effect = \"Allow\",\n                            Scope = \n                            {\n                                \"*\",\n                            },\n                        },\n                        new Onelogin.Inputs.PrivilegePrivilegeStatementArgs\n                        {\n                            Action = \n                            {\n                                \"users:List\",\n                                \"users:Update\",\n                            },\n                            Effect = \"Allow\",\n                            Scope = \n                            {\n                                \"users/123\",\n                                \"users/345\",\n                            },\n                        },\n                    },\n                },\n            },\n            RoleIds = \n            {\n                987,\n                654,\n            },\n            UserIds = \n            {\n                123,\n                345,\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-onelogin/sdk/go/onelogin\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := onelogin.NewPrivilege(ctx, \"superAdmin\", \u0026onelogin.PrivilegeArgs{\n\t\t\tDescription: pulumi.String(\"description\"),\n\t\t\tPrivileges: PrivilegePrivilegeArray{\n\t\t\t\t\u0026PrivilegePrivilegeArgs{\n\t\t\t\t\tStatements: PrivilegePrivilegeStatementArray{\n\t\t\t\t\t\t\u0026PrivilegePrivilegeStatementArgs{\n\t\t\t\t\t\t\tAction: []string{\n\t\t\t\t\t\t\t\t\"apps:List\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tEffect: pulumi.String(\"Allow\"),\n\t\t\t\t\t\t\tScope: []string{\n\t\t\t\t\t\t\t\t\"*\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026PrivilegePrivilegeStatementArgs{\n\t\t\t\t\t\t\tAction: []string{\n\t\t\t\t\t\t\t\t\"users:List\",\n\t\t\t\t\t\t\t\t\"users:Update\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tEffect: pulumi.String(\"Allow\"),\n\t\t\t\t\t\t\tScope: []string{\n\t\t\t\t\t\t\t\t\"users/123\",\n\t\t\t\t\t\t\t\t\"users/345\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tRoleIds: pulumi.IntArray{\n\t\t\t\tpulumi.Int(987),\n\t\t\t\tpulumi.Int(654),\n\t\t\t},\n\t\t\tUserIds: pulumi.IntArray{\n\t\t\t\tpulumi.Int(123),\n\t\t\t\tpulumi.Int(345),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA privilege can be imported using the OneLogin Privilege ID.\n\n```sh\n $ pulumi import onelogin:index/privilege:Privilege super_admin \u003cprivilege id\u003e\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for the Privilege.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the privilege.\n"
                },
                "privileges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/onelogin:index/PrivilegePrivilege:PrivilegePrivilege"
                    },
                    "description": "A list of statements that describe what the privilege grants access to.\n"
                },
                "roleIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of role IDs for whom the role applies.\n"
                },
                "userIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of user IDs for whom the privilege applies.\n"
                }
            },
            "required": [
                "name",
                "privileges"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description for the Privilege.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the privilege.\n"
                },
                "privileges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/onelogin:index/PrivilegePrivilege:PrivilegePrivilege"
                    },
                    "description": "A list of statements that describe what the privilege grants access to.\n"
                },
                "roleIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of role IDs for whom the role applies.\n"
                },
                "userIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of user IDs for whom the privilege applies.\n"
                }
            },
            "requiredInputs": [
                "privileges"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Privilege resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description for the Privilege.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the privilege.\n"
                    },
                    "privileges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/onelogin:index/PrivilegePrivilege:PrivilegePrivilege"
                        },
                        "description": "A list of statements that describe what the privilege grants access to.\n"
                    },
                    "roleIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "A list of role IDs for whom the role applies.\n"
                    },
                    "userIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "A list of user IDs for whom the privilege applies.\n"
                    }
                },
                "type": "object"
            }
        },
        "onelogin:index/role:Role": {
            "description": "Manage Role resources.\n\nThis resource allows you to create and configure Roles.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n### Strict Ordering\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as onelogin from \"@pulumi/onelogin\";\n\nconst executiveAdmin = new onelogin.Role(\"executive_admin\", {\n    admins: [777],\n    apps: [\n        123,\n        456,\n        787,\n    ],\n    users: [\n        543,\n        213,\n        420,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_onelogin as onelogin\n\nexecutive_admin = onelogin.Role(\"executiveAdmin\",\n    admins=[777],\n    apps=[\n        123,\n        456,\n        787,\n    ],\n    users=[\n        543,\n        213,\n        420,\n    ])\n```\n```csharp\nusing Pulumi;\nusing Onelogin = Pulumi.Onelogin;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var executiveAdmin = new Onelogin.Role(\"executiveAdmin\", new Onelogin.RoleArgs\n        {\n            Admins = \n            {\n                777,\n            },\n            Apps = \n            {\n                123,\n                456,\n                787,\n            },\n            Users = \n            {\n                543,\n                213,\n                420,\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-onelogin/sdk/go/onelogin\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := onelogin.NewRole(ctx, \"executiveAdmin\", \u0026onelogin.RoleArgs{\n\t\t\tAdmins: pulumi.IntArray{\n\t\t\t\tpulumi.Int(777),\n\t\t\t},\n\t\t\tApps: pulumi.IntArray{\n\t\t\t\tpulumi.Int(123),\n\t\t\t\tpulumi.Int(456),\n\t\t\t\tpulumi.Int(787),\n\t\t\t},\n\t\t\tUsers: pulumi.IntArray{\n\t\t\t\tpulumi.Int(543),\n\t\t\t\tpulumi.Int(213),\n\t\t\t\tpulumi.Int(420),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA role can be imported using the OneLogin Role ID.\n\n```sh\n $ pulumi import onelogin:index/role:Role executive_admin \u003crole id\u003e\n```\n\n ",
            "properties": {
                "admins": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of IDs of users who administer the role.\n"
                },
                "apps": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of app IDs for which the role applies.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the role.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of user IDs for whom the role applies.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "admins": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of IDs of users who administer the role.\n"
                },
                "apps": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of app IDs for which the role applies.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the role.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of user IDs for whom the role applies.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Role resources.\n",
                "properties": {
                    "admins": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "A list of IDs of users who administer the role.\n"
                    },
                    "apps": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "A list of app IDs for which the role applies.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the role.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "A list of user IDs for whom the role applies.\n"
                    }
                },
                "type": "object"
            }
        },
        "onelogin:index/samlApp:SamlApp": {
            "description": "Creates an SAML Application.\n\nThis resource allows you to create and configure an SAML Application.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as onelogin from \"@pulumi/onelogin\";\n\nconst exampleSamlApp = new onelogin.SamlApp(\"example_saml_app\", {\n    allowAssumedSignin: false,\n    configuration: {\n        provider_arn: \"example_arn\",\n        signature_algorithm: \"SHA-1\",\n    },\n    connectorId: 12345,\n    description: \"example saml app\",\n    notes: \"example saml app\",\n    parameters: [{\n        attributesTransformations: \"\",\n        defaultValues: \"\",\n        includeInSamlAssertion: false,\n        label: \"I done reset it\",\n        paramKeyName: \"tmp\",\n        provisionedEntitlements: false,\n        safeEntitlementsEnabled: false,\n        skipIfBlank: false,\n        userAttributeMacros: \"\",\n        userAttributeMappings: \"email\",\n        values: \"\",\n    }],\n    provisioning: {\n        enabled: false,\n    },\n    visible: false,\n});\n```\n```python\nimport pulumi\nimport pulumi_onelogin as onelogin\n\nexample_saml_app = onelogin.SamlApp(\"exampleSamlApp\",\n    allow_assumed_signin=False,\n    configuration={\n        \"provider_arn\": \"example_arn\",\n        \"signature_algorithm\": \"SHA-1\",\n    },\n    connector_id=12345,\n    description=\"example saml app\",\n    notes=\"example saml app\",\n    parameters=[onelogin.SamlAppParameterArgs(\n        attributes_transformations=\"\",\n        default_values=\"\",\n        include_in_saml_assertion=False,\n        label=\"I done reset it\",\n        param_key_name=\"tmp\",\n        provisioned_entitlements=False,\n        safe_entitlements_enabled=False,\n        skip_if_blank=False,\n        user_attribute_macros=\"\",\n        user_attribute_mappings=\"email\",\n        values=\"\",\n    )],\n    provisioning={\n        \"enabled\": False,\n    },\n    visible=False)\n```\n```csharp\nusing Pulumi;\nusing Onelogin = Pulumi.Onelogin;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var exampleSamlApp = new Onelogin.SamlApp(\"exampleSamlApp\", new Onelogin.SamlAppArgs\n        {\n            AllowAssumedSignin = false,\n            Configuration = \n            {\n                { \"provider_arn\", \"example_arn\" },\n                { \"signature_algorithm\", \"SHA-1\" },\n            },\n            ConnectorId = 12345,\n            Description = \"example saml app\",\n            Notes = \"example saml app\",\n            Parameters = \n            {\n                new Onelogin.Inputs.SamlAppParameterArgs\n                {\n                    AttributesTransformations = \"\",\n                    DefaultValues = \"\",\n                    IncludeInSamlAssertion = false,\n                    Label = \"I done reset it\",\n                    ParamKeyName = \"tmp\",\n                    ProvisionedEntitlements = false,\n                    SafeEntitlementsEnabled = false,\n                    SkipIfBlank = false,\n                    UserAttributeMacros = \"\",\n                    UserAttributeMappings = \"email\",\n                    Values = \"\",\n                },\n            },\n            Provisioning = \n            {\n                { \"enabled\", false },\n            },\n            Visible = false,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-onelogin/sdk/go/onelogin\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := onelogin.NewSamlApp(ctx, \"exampleSamlApp\", \u0026onelogin.SamlAppArgs{\n\t\t\tAllowAssumedSignin: pulumi.Bool(false),\n\t\t\tConfiguration: pulumi.StringMap{\n\t\t\t\t\"provider_arn\":        pulumi.String(\"example_arn\"),\n\t\t\t\t\"signature_algorithm\": pulumi.String(\"SHA-1\"),\n\t\t\t},\n\t\t\tConnectorId: pulumi.Int(12345),\n\t\t\tDescription: pulumi.String(\"example saml app\"),\n\t\t\tNotes:       pulumi.String(\"example saml app\"),\n\t\t\tParameters: SamlAppParameterArray{\n\t\t\t\t\u0026SamlAppParameterArgs{\n\t\t\t\t\tAttributesTransformations: pulumi.String(\"\"),\n\t\t\t\t\tDefaultValues:             pulumi.String(\"\"),\n\t\t\t\t\tIncludeInSamlAssertion:    pulumi.Bool(false),\n\t\t\t\t\tLabel:                     pulumi.String(\"I done reset it\"),\n\t\t\t\t\tParamKeyName:              pulumi.String(\"tmp\"),\n\t\t\t\t\tProvisionedEntitlements:   pulumi.Bool(false),\n\t\t\t\t\tSafeEntitlementsEnabled:   pulumi.Bool(false),\n\t\t\t\t\tSkipIfBlank:               pulumi.Bool(false),\n\t\t\t\t\tUserAttributeMacros:       pulumi.String(\"\"),\n\t\t\t\t\tUserAttributeMappings:     pulumi.String(\"email\"),\n\t\t\t\t\tValues:                    pulumi.String(\"\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tProvisioning: pulumi.BoolMap{\n\t\t\t\t\"enabled\": pulumi.Bool(false),\n\t\t\t},\n\t\t\tVisible: pulumi.Bool(false),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA SAML App can be imported via the OneLogin App ID.\n\n```sh\n $ pulumi import onelogin:index/samlApp:SamlApp example_saml_app \u003capp id\u003e\n```\n\n ",
            "properties": {
                "allowAssumedSignin": {
                    "type": "boolean",
                    "description": "Enable sign in when user has been assumed by the account owner. Defaults to `false`.\n"
                },
                "authMethod": {
                    "type": "integer",
                    "description": "The apps auth method. Refer to the [OneLogin Apps Documentation](https://developers.onelogin.com/api-docs/2/apps/app-resource) for a comprehensive list of available auth methods.\n"
                },
                "brandId": {
                    "type": "integer"
                },
                "certificate": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The SSO certificate generated by OneLogin.\n"
                },
                "configuration": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "SAML settings that control the authentication e.g. signature hashing algorithm or provider\n"
                },
                "connectorId": {
                    "type": "integer",
                    "description": "The ID for the app connector, dictates the type of app (e.g. AWS Multi-Role App).\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Timestamp for app's creation.\n"
                },
                "description": {
                    "type": "string",
                    "description": "App description.\n"
                },
                "iconUrl": {
                    "type": "string",
                    "description": "The url for the app's icon.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The app's name.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "Notes about the app.\n"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/onelogin:index/SamlAppParameter:SamlAppParameter"
                    },
                    "description": "a list of custom parameters for this app.\n"
                },
                "policyId": {
                    "type": "integer",
                    "description": "The security policy assigned to the app.\n"
                },
                "provisioning": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    },
                    "description": "Settings regarding the app's provisioning ability.\n"
                },
                "sso": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The attributes included in the sso section are determined by the type of app. `sso` attributes are read only.\n"
                },
                "tabId": {
                    "type": "integer",
                    "description": "The tab in which to display in OneLogin portal.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Timestamp for app's last update.\n"
                },
                "visible": {
                    "type": "boolean",
                    "description": "Determine if app should be visible in OneLogin portal. Defaults to `true`.\n"
                }
            },
            "required": [
                "authMethod",
                "certificate",
                "connectorId",
                "createdAt",
                "iconUrl",
                "name",
                "parameters",
                "policyId",
                "provisioning",
                "sso",
                "tabId",
                "updatedAt"
            ],
            "inputProperties": {
                "allowAssumedSignin": {
                    "type": "boolean",
                    "description": "Enable sign in when user has been assumed by the account owner. Defaults to `false`.\n"
                },
                "brandId": {
                    "type": "integer"
                },
                "configuration": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "SAML settings that control the authentication e.g. signature hashing algorithm or provider\n"
                },
                "connectorId": {
                    "type": "integer",
                    "description": "The ID for the app connector, dictates the type of app (e.g. AWS Multi-Role App).\n"
                },
                "description": {
                    "type": "string",
                    "description": "App description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The app's name.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "Notes about the app.\n"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/onelogin:index/SamlAppParameter:SamlAppParameter"
                    },
                    "description": "a list of custom parameters for this app.\n"
                },
                "provisioning": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    },
                    "description": "Settings regarding the app's provisioning ability.\n"
                },
                "visible": {
                    "type": "boolean",
                    "description": "Determine if app should be visible in OneLogin portal. Defaults to `true`.\n"
                }
            },
            "requiredInputs": [
                "connectorId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SamlApp resources.\n",
                "properties": {
                    "allowAssumedSignin": {
                        "type": "boolean",
                        "description": "Enable sign in when user has been assumed by the account owner. Defaults to `false`.\n"
                    },
                    "authMethod": {
                        "type": "integer",
                        "description": "The apps auth method. Refer to the [OneLogin Apps Documentation](https://developers.onelogin.com/api-docs/2/apps/app-resource) for a comprehensive list of available auth methods.\n"
                    },
                    "brandId": {
                        "type": "integer"
                    },
                    "certificate": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The SSO certificate generated by OneLogin.\n"
                    },
                    "configuration": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "SAML settings that control the authentication e.g. signature hashing algorithm or provider\n"
                    },
                    "connectorId": {
                        "type": "integer",
                        "description": "The ID for the app connector, dictates the type of app (e.g. AWS Multi-Role App).\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Timestamp for app's creation.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "App description.\n"
                    },
                    "iconUrl": {
                        "type": "string",
                        "description": "The url for the app's icon.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The app's name.\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "Notes about the app.\n"
                    },
                    "parameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/onelogin:index/SamlAppParameter:SamlAppParameter"
                        },
                        "description": "a list of custom parameters for this app.\n"
                    },
                    "policyId": {
                        "type": "integer",
                        "description": "The security policy assigned to the app.\n"
                    },
                    "provisioning": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "boolean"
                        },
                        "description": "Settings regarding the app's provisioning ability.\n"
                    },
                    "sso": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The attributes included in the sso section are determined by the type of app. `sso` attributes are read only.\n"
                    },
                    "tabId": {
                        "type": "integer",
                        "description": "The tab in which to display in OneLogin portal.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Timestamp for app's last update.\n"
                    },
                    "visible": {
                        "type": "boolean",
                        "description": "Determine if app should be visible in OneLogin portal. Defaults to `true`.\n"
                    }
                },
                "type": "object"
            }
        },
        "onelogin:index/smartHook:SmartHook": {
            "description": "Manage SmartHook resources.\n\nThis resource allows you to create and configure SmartHooks.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as onelogin from \"@pulumi/onelogin\";\n\nconst basicTest = new onelogin.SmartHook(\"basic_test\", {\n    disabled: false,\n    envVars: [\"API_KEY\"],\n    function: \"CQlmdW5jdGlvbiBteUZ1bmMoKSB7CgkJCWxldCBhID0gMTsKCQkJbGV0IGIgPSAxOwoJCQlsZXQgYyA9IGEgKyBiOwoJCSAgY29uc29sZS5sb2coIkRpbmcgRG9uZyIsIGEsIGIsIGMpOwoJCX0K\",\n    options: [{\n        locationEnabled: false,\n        riskEnabled: false,\n    }],\n    packages: {\n        mysql: \"^2.18.1\",\n    },\n    retries: 0,\n    timeout: 2,\n    type: \"pre-authentication\",\n});\n```\n```python\nimport pulumi\nimport pulumi_onelogin as onelogin\n\nbasic_test = onelogin.SmartHook(\"basicTest\",\n    disabled=False,\n    env_vars=[\"API_KEY\"],\n    function=\"CQlmdW5jdGlvbiBteUZ1bmMoKSB7CgkJCWxldCBhID0gMTsKCQkJbGV0IGIgPSAxOwoJCQlsZXQgYyA9IGEgKyBiOwoJCSAgY29uc29sZS5sb2coIkRpbmcgRG9uZyIsIGEsIGIsIGMpOwoJCX0K\",\n    options=[onelogin.SmartHookOptionArgs(\n        location_enabled=False,\n        risk_enabled=False,\n    )],\n    packages={\n        \"mysql\": \"^2.18.1\",\n    },\n    retries=0,\n    timeout=2,\n    type=\"pre-authentication\")\n```\n```csharp\nusing Pulumi;\nusing Onelogin = Pulumi.Onelogin;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var basicTest = new Onelogin.SmartHook(\"basicTest\", new Onelogin.SmartHookArgs\n        {\n            Disabled = false,\n            EnvVars = \n            {\n                \"API_KEY\",\n            },\n            Function = \"CQlmdW5jdGlvbiBteUZ1bmMoKSB7CgkJCWxldCBhID0gMTsKCQkJbGV0IGIgPSAxOwoJCQlsZXQgYyA9IGEgKyBiOwoJCSAgY29uc29sZS5sb2coIkRpbmcgRG9uZyIsIGEsIGIsIGMpOwoJCX0K\",\n            Options = \n            {\n                new Onelogin.Inputs.SmartHookOptionArgs\n                {\n                    LocationEnabled = false,\n                    RiskEnabled = false,\n                },\n            },\n            Packages = \n            {\n                { \"mysql\", \"^2.18.1\" },\n            },\n            Retries = 0,\n            Timeout = 2,\n            Type = \"pre-authentication\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-onelogin/sdk/go/onelogin\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := onelogin.NewSmartHook(ctx, \"basicTest\", \u0026onelogin.SmartHookArgs{\n\t\t\tDisabled: pulumi.Bool(false),\n\t\t\tEnvVars: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"API_KEY\"),\n\t\t\t},\n\t\t\tFunction: pulumi.String(\"CQlmdW5jdGlvbiBteUZ1bmMoKSB7CgkJCWxldCBhID0gMTsKCQkJbGV0IGIgPSAxOwoJCQlsZXQgYyA9IGEgKyBiOwoJCSAgY29uc29sZS5sb2coIkRpbmcgRG9uZyIsIGEsIGIsIGMpOwoJCX0K\"),\n\t\t\tOptions: SmartHookOptionArray{\n\t\t\t\t\u0026SmartHookOptionArgs{\n\t\t\t\t\tLocationEnabled: pulumi.Bool(false),\n\t\t\t\t\tRiskEnabled:     pulumi.Bool(false),\n\t\t\t\t},\n\t\t\t},\n\t\t\tPackages: pulumi.StringMap{\n\t\t\t\t\"mysql\": pulumi.String(\"^2.18.1\"),\n\t\t\t},\n\t\t\tRetries: pulumi.Int(0),\n\t\t\tTimeout: pulumi.Int(2),\n\t\t\tType:    pulumi.String(\"pre-authentication\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA SmartHook can be imported via the OneLogin SmartHook.\n\n```sh\n $ pulumi import onelogin:index/smartHook:SmartHook example \u003csmarthook_id\u003e\n```\n\n ",
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/onelogin:index/SmartHookCondition:SmartHookCondition"
                    }
                },
                "contextVersion": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Timestamp for smarthook's last update\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Indicates if function is available for execution or not. Default true\n"
                },
                "envVars": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of predefined environment variables to be supplied to the function at runtime.\n"
                },
                "function": {
                    "type": "string",
                    "description": "A base64 encoded blob, or Heredoc string containing the javascript function code.\n"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/onelogin:index/SmartHookOption:SmartHookOption"
                    },
                    "description": "A list of options for the hook\n"
                },
                "packages": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of public npm packages than will be installed as part of the function build process. These packages names must be on our allowlist. See Node Modules section of this doc. Packages can be any version and support the semantic versioning syntax used by NPM.\n"
                },
                "retries": {
                    "type": "integer",
                    "description": "Number of retries if execution fails. Default 0, Max 4\n"
                },
                "runtime": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "description": "The smarthook's status.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The number of milliseconds to allow before timeout. Default 1000, Max 10000\n"
                },
                "type": {
                    "type": "string",
                    "description": "The name of the hook. Must be one of: `user-migration` `pre-authentication` `pre-user-create` `post-user-create` `pre-user-update` `post-user-update`\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Timestamp for smarthook's last update\n"
                }
            },
            "required": [
                "contextVersion",
                "createdAt",
                "disabled",
                "envVars",
                "function",
                "packages",
                "retries",
                "runtime",
                "status",
                "timeout",
                "type",
                "updatedAt"
            ],
            "inputProperties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/onelogin:index/SmartHookCondition:SmartHookCondition"
                    }
                },
                "contextVersion": {
                    "type": "string"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Indicates if function is available for execution or not. Default true\n"
                },
                "envVars": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of predefined environment variables to be supplied to the function at runtime.\n"
                },
                "function": {
                    "type": "string",
                    "description": "A base64 encoded blob, or Heredoc string containing the javascript function code.\n"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/onelogin:index/SmartHookOption:SmartHookOption"
                    },
                    "description": "A list of options for the hook\n"
                },
                "packages": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of public npm packages than will be installed as part of the function build process. These packages names must be on our allowlist. See Node Modules section of this doc. Packages can be any version and support the semantic versioning syntax used by NPM.\n"
                },
                "retries": {
                    "type": "integer",
                    "description": "Number of retries if execution fails. Default 0, Max 4\n"
                },
                "runtime": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The number of milliseconds to allow before timeout. Default 1000, Max 10000\n"
                },
                "type": {
                    "type": "string",
                    "description": "The name of the hook. Must be one of: `user-migration` `pre-authentication` `pre-user-create` `post-user-create` `pre-user-update` `post-user-update`\n"
                }
            },
            "requiredInputs": [
                "disabled",
                "envVars",
                "function",
                "packages",
                "retries",
                "runtime",
                "timeout",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SmartHook resources.\n",
                "properties": {
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/onelogin:index/SmartHookCondition:SmartHookCondition"
                        }
                    },
                    "contextVersion": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Timestamp for smarthook's last update\n"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "Indicates if function is available for execution or not. Default true\n"
                    },
                    "envVars": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of predefined environment variables to be supplied to the function at runtime.\n"
                    },
                    "function": {
                        "type": "string",
                        "description": "A base64 encoded blob, or Heredoc string containing the javascript function code.\n"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/onelogin:index/SmartHookOption:SmartHookOption"
                        },
                        "description": "A list of options for the hook\n"
                    },
                    "packages": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A list of public npm packages than will be installed as part of the function build process. These packages names must be on our allowlist. See Node Modules section of this doc. Packages can be any version and support the semantic versioning syntax used by NPM.\n"
                    },
                    "retries": {
                        "type": "integer",
                        "description": "Number of retries if execution fails. Default 0, Max 4\n"
                    },
                    "runtime": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "description": "The smarthook's status.\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "The number of milliseconds to allow before timeout. Default 1000, Max 10000\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The name of the hook. Must be one of: `user-migration` `pre-authentication` `pre-user-create` `post-user-create` `pre-user-update` `post-user-update`\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Timestamp for smarthook's last update\n"
                    }
                },
                "type": "object"
            }
        },
        "onelogin:index/smartHookEnvironmentVariable:SmartHookEnvironmentVariable": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "createdAt",
                "name",
                "updatedAt",
                "value"
            ],
            "inputProperties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SmartHookEnvironmentVariable resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "onelogin:index/user:User": {
            "description": "Manage User resources.\n\nThis resource allows you to create and configure Users.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as onelogin from \"@pulumi/onelogin\";\n\nconst example = new onelogin.User(\"example\", {\n    email: \"timmy.tester@test.com\",\n    username: \"timmy.tester\",\n});\n```\n```python\nimport pulumi\nimport pulumi_onelogin as onelogin\n\nexample = onelogin.User(\"example\",\n    email=\"timmy.tester@test.com\",\n    username=\"timmy.tester\")\n```\n```csharp\nusing Pulumi;\nusing Onelogin = Pulumi.Onelogin;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Onelogin.User(\"example\", new Onelogin.UserArgs\n        {\n            Email = \"timmy.tester@test.com\",\n            Username = \"timmy.tester\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-onelogin/sdk/go/onelogin\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := onelogin.NewUser(ctx, \"example\", \u0026onelogin.UserArgs{\n\t\t\tEmail:    pulumi.String(\"timmy.tester@test.com\"),\n\t\t\tUsername: pulumi.String(\"timmy.tester\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA User can be imported via the OneLogin User ID.\n\n```sh\n $ pulumi import onelogin:index/user:User example 12345678\n```\n\n ",
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "A comment about the user\n"
                },
                "company": {
                    "type": "string",
                    "description": "The user's company\n"
                },
                "customAttributes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "department": {
                    "type": "string",
                    "description": "The user's department\n"
                },
                "directoryId": {
                    "type": "integer",
                    "description": "The user's directory_id\n"
                },
                "distinguishedName": {
                    "type": "string",
                    "description": "The user's distinguished name\n"
                },
                "email": {
                    "type": "string",
                    "description": "The user's email.\n"
                },
                "externalId": {
                    "type": "integer",
                    "description": "The user's external_id\n"
                },
                "firstname": {
                    "type": "string",
                    "description": "The user's first name\n"
                },
                "groupId": {
                    "type": "integer",
                    "description": "The user's group_id\n"
                },
                "lastname": {
                    "type": "string",
                    "description": "The user's last name\n"
                },
                "managerAdId": {
                    "type": "integer",
                    "description": "The user's manager_ad_id\n"
                },
                "managerUserId": {
                    "type": "integer",
                    "description": "The user's manager_user_id\n"
                },
                "memberOf": {
                    "type": "string",
                    "description": "The user's member_of\n"
                },
                "phone": {
                    "type": "string",
                    "description": "The user's phone number\n"
                },
                "samaccountname": {
                    "type": "string",
                    "description": "The user's samaccount name\n"
                },
                "state": {
                    "type": "integer",
                    "description": "The user's state. Must be one of `0: Unapproved` `1: Approved` `2: Rejected` `3: Unlicensed`\n"
                },
                "status": {
                    "type": "integer",
                    "description": "The user's status. Must be one of `0: Unactivated` `1: Active` `2: Suspended` `3: Locked` `4: Password expired` `5: Awaiting password reset` `7: Password Pending` `8: Security questions required`\n"
                },
                "title": {
                    "type": "string",
                    "description": "The user's title\n"
                },
                "trustedIdpId": {
                    "type": "integer",
                    "description": "The user's trusted_idp_id\n"
                },
                "username": {
                    "type": "string",
                    "description": "The user's username.\n"
                },
                "userprincipalname": {
                    "type": "string",
                    "description": "The user's user principal name\n"
                }
            },
            "required": [
                "directoryId",
                "email",
                "externalId",
                "groupId",
                "managerAdId",
                "managerUserId",
                "state",
                "status",
                "trustedIdpId",
                "username"
            ],
            "inputProperties": {
                "comment": {
                    "type": "string",
                    "description": "A comment about the user\n"
                },
                "company": {
                    "type": "string",
                    "description": "The user's company\n"
                },
                "customAttributes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "department": {
                    "type": "string",
                    "description": "The user's department\n"
                },
                "directoryId": {
                    "type": "integer",
                    "description": "The user's directory_id\n"
                },
                "distinguishedName": {
                    "type": "string",
                    "description": "The user's distinguished name\n"
                },
                "email": {
                    "type": "string",
                    "description": "The user's email.\n"
                },
                "externalId": {
                    "type": "integer",
                    "description": "The user's external_id\n"
                },
                "firstname": {
                    "type": "string",
                    "description": "The user's first name\n"
                },
                "groupId": {
                    "type": "integer",
                    "description": "The user's group_id\n"
                },
                "lastname": {
                    "type": "string",
                    "description": "The user's last name\n"
                },
                "managerAdId": {
                    "type": "integer",
                    "description": "The user's manager_ad_id\n"
                },
                "managerUserId": {
                    "type": "integer",
                    "description": "The user's manager_user_id\n"
                },
                "memberOf": {
                    "type": "string",
                    "description": "The user's member_of\n"
                },
                "phone": {
                    "type": "string",
                    "description": "The user's phone number\n"
                },
                "samaccountname": {
                    "type": "string",
                    "description": "The user's samaccount name\n"
                },
                "state": {
                    "type": "integer",
                    "description": "The user's state. Must be one of `0: Unapproved` `1: Approved` `2: Rejected` `3: Unlicensed`\n"
                },
                "status": {
                    "type": "integer",
                    "description": "The user's status. Must be one of `0: Unactivated` `1: Active` `2: Suspended` `3: Locked` `4: Password expired` `5: Awaiting password reset` `7: Password Pending` `8: Security questions required`\n"
                },
                "title": {
                    "type": "string",
                    "description": "The user's title\n"
                },
                "trustedIdpId": {
                    "type": "integer",
                    "description": "The user's trusted_idp_id\n"
                },
                "username": {
                    "type": "string",
                    "description": "The user's username.\n"
                },
                "userprincipalname": {
                    "type": "string",
                    "description": "The user's user principal name\n"
                }
            },
            "requiredInputs": [
                "email",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "comment": {
                        "type": "string",
                        "description": "A comment about the user\n"
                    },
                    "company": {
                        "type": "string",
                        "description": "The user's company\n"
                    },
                    "customAttributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "department": {
                        "type": "string",
                        "description": "The user's department\n"
                    },
                    "directoryId": {
                        "type": "integer",
                        "description": "The user's directory_id\n"
                    },
                    "distinguishedName": {
                        "type": "string",
                        "description": "The user's distinguished name\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "The user's email.\n"
                    },
                    "externalId": {
                        "type": "integer",
                        "description": "The user's external_id\n"
                    },
                    "firstname": {
                        "type": "string",
                        "description": "The user's first name\n"
                    },
                    "groupId": {
                        "type": "integer",
                        "description": "The user's group_id\n"
                    },
                    "lastname": {
                        "type": "string",
                        "description": "The user's last name\n"
                    },
                    "managerAdId": {
                        "type": "integer",
                        "description": "The user's manager_ad_id\n"
                    },
                    "managerUserId": {
                        "type": "integer",
                        "description": "The user's manager_user_id\n"
                    },
                    "memberOf": {
                        "type": "string",
                        "description": "The user's member_of\n"
                    },
                    "phone": {
                        "type": "string",
                        "description": "The user's phone number\n"
                    },
                    "samaccountname": {
                        "type": "string",
                        "description": "The user's samaccount name\n"
                    },
                    "state": {
                        "type": "integer",
                        "description": "The user's state. Must be one of `0: Unapproved` `1: Approved` `2: Rejected` `3: Unlicensed`\n"
                    },
                    "status": {
                        "type": "integer",
                        "description": "The user's status. Must be one of `0: Unactivated` `1: Active` `2: Suspended` `3: Locked` `4: Password expired` `5: Awaiting password reset` `7: Password Pending` `8: Security questions required`\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The user's title\n"
                    },
                    "trustedIdpId": {
                        "type": "integer",
                        "description": "The user's trusted_idp_id\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The user's username.\n"
                    },
                    "userprincipalname": {
                        "type": "string",
                        "description": "The user's user principal name\n"
                    }
                },
                "type": "object"
            }
        },
        "onelogin:index/userMapping:UserMapping": {
            "description": "Manage User Mappings resources.\n\nThis resource allows you to create and configure User Mappings.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as onelogin from \"@pulumi/onelogin\";\n\nconst example = new onelogin.UserMapping(\"example\", {\n    actions: [{\n        action: \"set_status\",\n        values: [\"1\"],\n    }],\n    conditions: [{\n        operator: \"\u003e\",\n        source: \"last_login\",\n        value: \"90\",\n    }],\n    enabled: true,\n    match: \"all\",\n    position: 1,\n});\n```\n```python\nimport pulumi\nimport pulumi_onelogin as onelogin\n\nexample = onelogin.UserMapping(\"example\",\n    actions=[onelogin.UserMappingActionArgs(\n        action=\"set_status\",\n        values=[\"1\"],\n    )],\n    conditions=[onelogin.UserMappingConditionArgs(\n        operator=\"\u003e\",\n        source=\"last_login\",\n        value=\"90\",\n    )],\n    enabled=True,\n    match=\"all\",\n    position=1)\n```\n```csharp\nusing Pulumi;\nusing Onelogin = Pulumi.Onelogin;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Onelogin.UserMapping(\"example\", new Onelogin.UserMappingArgs\n        {\n            Actions = \n            {\n                new Onelogin.Inputs.UserMappingActionArgs\n                {\n                    Action = \"set_status\",\n                    Values = \n                    {\n                        \"1\",\n                    },\n                },\n            },\n            Conditions = \n            {\n                new Onelogin.Inputs.UserMappingConditionArgs\n                {\n                    Operator = \"\u003e\",\n                    Source = \"last_login\",\n                    Value = \"90\",\n                },\n            },\n            Enabled = true,\n            Match = \"all\",\n            Position = 1,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-onelogin/sdk/go/onelogin\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := onelogin.NewUserMapping(ctx, \"example\", \u0026onelogin.UserMappingArgs{\n\t\t\tActions: UserMappingActionArray{\n\t\t\t\t\u0026UserMappingActionArgs{\n\t\t\t\t\tAction: pulumi.String(\"set_status\"),\n\t\t\t\t\tValues: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"1\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tConditions: UserMappingConditionArray{\n\t\t\t\t\u0026UserMappingConditionArgs{\n\t\t\t\t\tOperator: pulumi.String(\"\u003e\"),\n\t\t\t\t\tSource:   pulumi.String(\"last_login\"),\n\t\t\t\t\tValue:    pulumi.String(\"90\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tEnabled:  pulumi.Bool(true),\n\t\t\tMatch:    pulumi.String(\"all\"),\n\t\t\tPosition: pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nA User Mapping can be imported via the OneLogin User Mapping.\n\n```sh\n $ pulumi import onelogin:index/userMapping:UserMapping example \u003cuser_mapping_id\u003e\n```\n\n ",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/onelogin:index/UserMappingAction:UserMappingAction"
                    },
                    "description": "The number of minutes until the token expires\n"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/onelogin:index/UserMappingCondition:UserMappingCondition"
                    },
                    "description": "An array of conditions that the user must meet in order for the mapping to be applied.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates if a mapping is enabled.\n"
                },
                "match": {
                    "type": "string",
                    "description": "Indicates how conditions should be matched. Must be one of `all` or `any`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource's name.\n"
                },
                "position": {
                    "type": "integer",
                    "description": "Indicates the ordering of the mapping. When not supplied the mapping will be put at the end of the list on create and managed by the provider. '0' can be supplied to consistently push this mapping to the end of the list on every update.\n"
                }
            },
            "required": [
                "match",
                "name",
                "position"
            ],
            "inputProperties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/onelogin:index/UserMappingAction:UserMappingAction"
                    },
                    "description": "The number of minutes until the token expires\n"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/onelogin:index/UserMappingCondition:UserMappingCondition"
                    },
                    "description": "An array of conditions that the user must meet in order for the mapping to be applied.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates if a mapping is enabled.\n"
                },
                "match": {
                    "type": "string",
                    "description": "Indicates how conditions should be matched. Must be one of `all` or `any`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource's name.\n"
                },
                "position": {
                    "type": "integer",
                    "description": "Indicates the ordering of the mapping. When not supplied the mapping will be put at the end of the list on create and managed by the provider. '0' can be supplied to consistently push this mapping to the end of the list on every update.\n"
                }
            },
            "requiredInputs": [
                "match"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserMapping resources.\n",
                "properties": {
                    "actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/onelogin:index/UserMappingAction:UserMappingAction"
                        },
                        "description": "The number of minutes until the token expires\n"
                    },
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/onelogin:index/UserMappingCondition:UserMappingCondition"
                        },
                        "description": "An array of conditions that the user must meet in order for the mapping to be applied.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Indicates if a mapping is enabled.\n"
                    },
                    "match": {
                        "type": "string",
                        "description": "Indicates how conditions should be matched. Must be one of `all` or `any`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource's name.\n"
                    },
                    "position": {
                        "type": "integer",
                        "description": "Indicates the ordering of the mapping. When not supplied the mapping will be put at the end of the list on create and managed by the provider. '0' can be supplied to consistently push this mapping to the end of the list on every update.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "onelogin:index/getUser:getUser": {
            "description": "Returns User resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as onelogin from \"@pulumi/onelogin\";\n\nconst example = pulumi.output(onelogin.getUser({\n    username: \"timmy.tester\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_onelogin as onelogin\n\nexample = onelogin.get_user(username=\"timmy.tester\")\n```\n```csharp\nusing Pulumi;\nusing Onelogin = Pulumi.Onelogin;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(Onelogin.GetUser.InvokeAsync(new Onelogin.GetUserArgs\n        {\n            Username = \"timmy.tester\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-onelogin/sdk/go/onelogin\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := onelogin.LookupUser(ctx, \u0026GetUserArgs{\n\t\t\tUsername: pulumi.StringRef(\"timmy.tester\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getUser.\n",
                "properties": {
                    "externalId": {
                        "type": "integer",
                        "description": "The user's external_id\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "The user's ID.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The user's username.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getUser.\n",
                "properties": {
                    "comment": {
                        "type": "string",
                        "description": "A comment about the user\n"
                    },
                    "company": {
                        "type": "string",
                        "description": "The user's company\n"
                    },
                    "customAttributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "department": {
                        "type": "string",
                        "description": "The user's department\n"
                    },
                    "directoryId": {
                        "type": "integer",
                        "description": "The user's directory_id\n"
                    },
                    "distinguishedName": {
                        "type": "string",
                        "description": "The user's distinguished name\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "The user's email.\n"
                    },
                    "externalId": {
                        "type": "integer",
                        "description": "The user's external_id\n"
                    },
                    "firstname": {
                        "type": "string",
                        "description": "The user's first name\n"
                    },
                    "groupId": {
                        "type": "integer",
                        "description": "The user's group_id\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lastname": {
                        "type": "string",
                        "description": "The user's last name\n"
                    },
                    "managerAdId": {
                        "type": "integer",
                        "description": "The user's manager_ad_id\n"
                    },
                    "managerUserId": {
                        "type": "integer",
                        "description": "The user's manager_user_id\n"
                    },
                    "memberOf": {
                        "type": "string",
                        "description": "The user's member_of\n"
                    },
                    "phone": {
                        "type": "string",
                        "description": "The user's phone number\n"
                    },
                    "samaccountname": {
                        "type": "string",
                        "description": "The user's samaccount name\n"
                    },
                    "state": {
                        "type": "integer",
                        "description": "The user's state. Must be one of `0: Unapproved` `1: Approved` `2: Rejected` `3: Unlicensed`\n"
                    },
                    "status": {
                        "type": "integer",
                        "description": "The user's status. Must be one of `0: Unactivated` `1: Active` `2: Suspended` `3: Locked` `4: Password expired` `5: Awaiting password reset` `7: Password Pending` `8: Security questions required`\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The user's title\n"
                    },
                    "trustedIdpId": {
                        "type": "integer",
                        "description": "The user's trusted_idp_id\n"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "userprincipalname": {
                        "type": "string",
                        "description": "The user's user principal name\n"
                    }
                },
                "type": "object",
                "required": [
                    "comment",
                    "company",
                    "customAttributes",
                    "department",
                    "directoryId",
                    "distinguishedName",
                    "email",
                    "externalId",
                    "firstname",
                    "groupId",
                    "lastname",
                    "managerAdId",
                    "managerUserId",
                    "memberOf",
                    "phone",
                    "samaccountname",
                    "state",
                    "status",
                    "title",
                    "trustedIdpId",
                    "username",
                    "userprincipalname",
                    "id"
                ]
            }
        },
        "onelogin:index/getUsers:getUsers": {
            "description": "Returns User IDs matching the given attributes.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as onelogin from \"@pulumi/onelogin\";\n\nconst example = pulumi.output(onelogin.getUsers({\n    firstname: \"tom\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_onelogin as onelogin\n\nexample = onelogin.get_users(firstname=\"tom\")\n```\n```csharp\nusing Pulumi;\nusing Onelogin = Pulumi.Onelogin;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(Onelogin.GetUsers.InvokeAsync(new Onelogin.GetUsersArgs\n        {\n            Firstname = \"tom\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-onelogin/sdk/go/onelogin\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := onelogin.GetUsers(ctx, \u0026GetUsersArgs{\n\t\t\tFirstname: pulumi.StringRef(\"tom\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getUsers.\n",
                "properties": {
                    "directoryId": {
                        "type": "integer",
                        "description": "The user's directory_id\n"
                    },
                    "externalId": {
                        "type": "integer",
                        "description": "The user's external_id\n"
                    },
                    "firstname": {
                        "type": "string",
                        "description": "The user's first name\n"
                    },
                    "lastname": {
                        "type": "string",
                        "description": "The user's last name\n"
                    },
                    "samaccountname": {
                        "type": "string",
                        "description": "The user's samaccount name\n"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string",
                        "description": "The user's username.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getUsers.\n",
                "properties": {
                    "directoryId": {
                        "type": "integer"
                    },
                    "externalId": {
                        "type": "integer"
                    },
                    "firstname": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of user's id\n"
                    },
                    "lastname": {
                        "type": "string"
                    },
                    "samaccountname": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "ids",
                    "id"
                ]
            }
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*",
                "System.Collections.Immutable": "5.0.0"
            }
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-onelogin/sdk/go/onelogin"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing OneLogin cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/onelogin/terraform-provider-onelogin)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-onelogin` repo](https://github.com/pulumi/pulumi-onelogin/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`onelogin/terraform-provider-onelogin` repo](https://github.com/onelogin/terraform-provider-onelogin/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/onelogin/terraform-provider-onelogin)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-onelogin` repo](https://github.com/pulumi/pulumi-onelogin/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`onelogin/terraform-provider-onelogin` repo](https://github.com/onelogin/terraform-provider-onelogin/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    }
}